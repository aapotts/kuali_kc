app.title=Kuali
app.copyright=Copyright 2005-2007 The Kuali Foundation. All rights reserved.<BR/>Portions of Kuali are copyrighted by other parties as described in the <a target="_ack" href="acknowledgements.jsp">Acknowledgments</a> screen.
#
# replace these with an appropriate URL and message when implementing
#
app.feedback.linkText=Report a Bug, Suggest Improvements or Enhancements
#app.feedback.link=insert feedback contact address here
#
# original development feedback link
app.feedback.link=https://test.kuali.org/jira/secure/CreateIssue.jspa?pid=10091&issuetype=1
#
app.krafeedback.link=https://test.kuali.org/jira/secure/CreateIssue.jspa?pid=10112&issuetype=1
app.footer.link.1=http://www.kuali.org
app.footer.linkText.1=kuali.org

#
# validationPattern regexes, for the field-level patterns
# . character-level patterns are hard-coded, since their granularity should already be sufficient)
# . special characters -- \ seems to be the only one so far -- must be escaped with a leading \
# this is currently broken as the regex matches against what we get out of toString() on dates
# which is actually 2006-10-19 (for example), so copying the timstamp regex as it works
# validationPatternRegex.date= (0?[1-9]|1[012])/(0?[1-9]|[12][0-9]|3[01])/(19|2[0-9])[0-9]{2}
validationPatternRegex.date= (19|2[0-9])[0-9]{2}\-(0?[1-9]|1[012])\-(0?[1-9]|[12][0-9]|3[01])
validationPatternRegex.timestamp= (19|2[0-9])[0-9]{2}\-(0?[1-9]|1[012])\-(0?[1-9]|[12][0-9]|3[01])\s+[0-9]{2}\:[0-9]{2}\:[0-9]{2}\.[0-9]+
#  emailAddress pattern is mostly made up out of whole cloth - it'll weed out most invalid email addresses
validationPatternRegex.emailAddress= [A-Za-z][A-Za-z0-9_.-]*[A-Za-z0-9]@([A-Za-z0-9][A-Za-z0-9_-]*\\.)+[A-Za-z]{3,}
#  since the leading negative is both optional and prefixed at runtime, the pattern doesn't include it
validationPatternRegex.floatingPoint= ([0-9]*\\.)?[0-9]+
#  manually derived, hopefully correctly, from the Java Language Spec
validationPatternRegex.javaClass= [A-Za-z_$][_$a-zA-Z0-9]*(\\.[_$a-zA-Z0-9]+)*
validationPatternRegex.month= (0?[1-9]|1[012])
validationPatternRegex.year= (16|17|18|19|20)[0-9]{2}
validationPatternRegex.zipcode= [0-9]{5}(-[0-9]{4})?
validationPatternRegex.phoneNumber= [0-9]{3}\-[0-9]{3}\-[0-9]{4}


