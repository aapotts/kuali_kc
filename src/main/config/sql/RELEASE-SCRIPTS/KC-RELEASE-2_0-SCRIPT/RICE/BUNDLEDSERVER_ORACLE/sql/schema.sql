
-----------------------------------------------------------------------------
-- ABSTRACT_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'ABSTRACT_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE ABSTRACT_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE ABSTRACT_TYPE
(
      ABSTRACT_TYPE_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE ABSTRACT_TYPE
    ADD CONSTRAINT ABSTRACT_TYPEP1
PRIMARY KEY (ABSTRACT_TYPE_CODE)
/







-----------------------------------------------------------------------------
-- ACCOUNT_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'ACCOUNT_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE ACCOUNT_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE ACCOUNT_TYPE
(
      ACCOUNT_TYPE_CODE NUMBER(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE ACCOUNT_TYPE
    ADD CONSTRAINT ACCOUNT_TYPEP1
PRIMARY KEY (ACCOUNT_TYPE_CODE)
/







-----------------------------------------------------------------------------
-- ACCT_DD_ATTR_DOC
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'ACCT_DD_ATTR_DOC';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE ACCT_DD_ATTR_DOC CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE ACCT_DD_ATTR_DOC
(
      DOC_HDR_ID VARCHAR2(14)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(14)
        , ACCT_NUM NUMBER(14) NOT NULL
        , ACCT_OWNR VARCHAR2(50) NOT NULL
        , ACCT_BAL NUMBER(16,2) NOT NULL
        , ACCT_OPN_DAT DATE NOT NULL
        , ACCT_STAT VARCHAR2(30) NOT NULL
        , ACCT_UPDATE_DT_TM DATE
        , ACCT_AWAKE VARCHAR2(1)
    

)
/

ALTER TABLE ACCT_DD_ATTR_DOC
    ADD CONSTRAINT ACCT_DD_ATTR_DOCP1
PRIMARY KEY (DOC_HDR_ID)
/







-----------------------------------------------------------------------------
-- ACTIVITY_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'ACTIVITY_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE ACTIVITY_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE ACTIVITY_TYPE
(
      ACTIVITY_TYPE_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE ACTIVITY_TYPE
    ADD CONSTRAINT ACTIVITY_TYPEP1
PRIMARY KEY (ACTIVITY_TYPE_CODE)
/







-----------------------------------------------------------------------------
-- AFFILIATION_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'AFFILIATION_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE AFFILIATION_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE AFFILIATION_TYPE
(
      VER_NBR NUMBER(8) default 1 NOT NULL
        , AFFILIATION_TYPE_CODE NUMBER(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE AFFILIATION_TYPE
    ADD CONSTRAINT AFFILIATION_TYPEP1
PRIMARY KEY (AFFILIATION_TYPE_CODE)
/







-----------------------------------------------------------------------------
-- APPOINTMENT_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'APPOINTMENT_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE APPOINTMENT_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE APPOINTMENT_TYPE
(
      APPOINTMENT_TYPE_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , DURATION NUMBER(2) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE APPOINTMENT_TYPE
    ADD CONSTRAINT APPOINTMENT_TYPEP1
PRIMARY KEY (APPOINTMENT_TYPE_CODE)
/







-----------------------------------------------------------------------------
-- ARG_VALUE_LOOKUP
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'ARG_VALUE_LOOKUP';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE ARG_VALUE_LOOKUP CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE ARG_VALUE_LOOKUP
(
      ARG_VALUE_LOOKUP_ID NUMBER(12)
        , ARGUMENT_NAME VARCHAR2(30) NOT NULL
        , VALUE VARCHAR2(200) NOT NULL
        , DESCRIPTION VARCHAR2(200)
        , UPDATE_TIMESTAMP DATE
        , UPDATE_USER VARCHAR2(60)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE ARG_VALUE_LOOKUP
    ADD CONSTRAINT ARG_VALUE_LOOKUPP1
PRIMARY KEY (ARG_VALUE_LOOKUP_ID)
/


CREATE INDEX UQ_ARG_VALUE_LOOKUP 
  ON ARG_VALUE_LOOKUP 
  (ARGUMENT_NAME, VALUE)
/





-----------------------------------------------------------------------------
-- ATTACHMENT_FILE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'ATTACHMENT_FILE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE ATTACHMENT_FILE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE ATTACHMENT_FILE
(
      FILE_ID NUMBER(22)
        , SEQUENCE_NUMBER NUMBER(4) NOT NULL
        , FILE_NAME VARCHAR2(150) NOT NULL
        , CONTENT_TYPE VARCHAR2(250) NOT NULL
        , FILE_DATA BLOB NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE ATTACHMENT_FILE
    ADD CONSTRAINT ATTACHMENT_FILEP1
PRIMARY KEY (FILE_ID)
/







-----------------------------------------------------------------------------
-- AWARD
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'AWARD';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE AWARD CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE AWARD
(
      CLOSEOUT_DATE DATE
        , TRANSACTION_TYPE_CODE VARCHAR2(3)
        , NOTICE_DATE DATE
        , LEAD_UNIT_NUMBER VARCHAR2(8)
        , ACTIVITY_TYPE_CODE NUMBER(3) NOT NULL
        , AWARD_TYPE_CODE NUMBER(3) NOT NULL
        , PRIME_SPONSOR_CODE VARCHAR2(6)
        , CFDA_NUMBER VARCHAR2(6)
        , METHOD_OF_PAYMENT_CODE VARCHAR2(3)
        , DFAFS_NUMBER VARCHAR2(20)
        , PRE_AWARD_AUTHORIZED_AMOUNT NUMBER(12,2)
        , PRE_AWARD_EFFECTIVE_DATE DATE
        , PROCUREMENT_PRIORITY_CODE VARCHAR2(6)
        , PROPOSAL_NUMBER VARCHAR2(8)
        , SPECIAL_EB_RATE_OFF_CAMPUS NUMBER(5,2)
        , SPECIAL_EB_RATE_ON_CAMPUS NUMBER(5,2)
        , SUB_PLAN_FLAG VARCHAR2(1)
        , TITLE VARCHAR2(200) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , PRE_AWARD_IN_AUTHORIZED_AMOUNT NUMBER(12,2)
        , ARCHIVE_LOCATION VARCHAR2(50)
        , PRE_AWARD_INST_EFFECTIVE_DATE DATE
        , BASIS_OF_PAYMENT_CODE VARCHAR2(3)
        , AWARD_ID NUMBER(22)
        , DOCUMENT_NUMBER VARCHAR2(10) NOT NULL
        , AWARD_NUMBER VARCHAR2(12) NOT NULL
        , SEQUENCE_NUMBER NUMBER(4) NOT NULL
        , SPONSOR_CODE VARCHAR2(6) NOT NULL
        , STATUS_CODE NUMBER(3) NOT NULL
        , TEMPLATE_CODE NUMBER(5)
        , ACCOUNT_NUMBER VARCHAR2(7)
        , APPRVD_EQUIPMENT_INDICATOR VARCHAR2(2) NOT NULL
        , APPRVD_FOREIGN_TRIP_INDICATOR VARCHAR2(2) NOT NULL
        , APPRVD_SUBCONTRACT_INDICATOR VARCHAR2(2) NOT NULL
        , AWARD_EFFECTIVE_DATE DATE
        , AWARD_EXECUTION_DATE DATE
        , BEGIN_DATE DATE
        , COST_SHARING_INDICATOR VARCHAR2(2) NOT NULL
        , IDC_INDICATOR VARCHAR2(2) NOT NULL
        , MODIFICATION_NUMBER VARCHAR2(50)
        , NSF_CODE VARCHAR2(15)
        , PAYMENT_SCHEDULE_INDICATOR VARCHAR2(2) NOT NULL
        , SCIENCE_CODE_INDICATOR VARCHAR2(2) NOT NULL
        , SPECIAL_REVIEW_INDICATOR VARCHAR2(2) NOT NULL
        , SPONSOR_AWARD_NUMBER VARCHAR2(70)
        , TRANSFER_SPONSOR_INDICATOR VARCHAR2(2) NOT NULL
        , ACCOUNT_TYPE_CODE NUMBER(3)
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE AWARD
    ADD CONSTRAINT AWARDP1
PRIMARY KEY (AWARD_ID)
/







-----------------------------------------------------------------------------
-- AWARD_AMOUNT_INFO
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'AWARD_AMOUNT_INFO';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE AWARD_AMOUNT_INFO CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE AWARD_AMOUNT_INFO
(
      ANTICIPATED_CHANGE_DIRECT NUMBER(12,2)
        , ANTICIPATED_CHANGE_INDIRECT NUMBER(12,2)
        , ANTICIPATED_TOTAL_DIRECT NUMBER(12,2)
        , ANTICIPATED_TOTAL_INDIRECT NUMBER(12,2)
        , OBLIGATED_TOTAL_DIRECT NUMBER(12,2)
        , OBLIGATED_TOTAL_INDIRECT NUMBER(12,2)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , TNM_DOCUMENT_NUMBER VARCHAR2(10)
        , AWARD_AMOUNT_INFO_ID NUMBER(12)
        , AWARD_ID NUMBER(22) NOT NULL
        , AWARD_NUMBER VARCHAR2(12) NOT NULL
        , SEQUENCE_NUMBER NUMBER(4) NOT NULL
        , ANTICIPATED_TOTAL_AMOUNT NUMBER(12,2)
        , ANT_DISTRIBUTABLE_AMOUNT NUMBER(12,2)
        , FINAL_EXPIRATION_DATE DATE
        , CURRENT_FUND_EFFECTIVE_DATE DATE
        , AMOUNT_OBLIGATED_TO_DATE NUMBER(12,2)
        , OBLI_DISTRIBUTABLE_AMOUNT NUMBER(12,2)
        , OBLIGATION_EXPIRATION_DATE DATE
        , TRANSACTION_ID NUMBER(10)
        , ENTRY_TYPE CHAR(1)
        , EOM_PROCESS_FLAG CHAR(1)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , ANTICIPATED_CHANGE NUMBER(12,2)
        , OBLIGATED_CHANGE NUMBER(12,2)
        , OBLIGATED_CHANGE_DIRECT NUMBER(12,2)
        , OBLIGATED_CHANGE_INDIRECT NUMBER(12,2)
        , OBJ_ID VARCHAR2(36)
        , ORIGINATING_AWARD_VERSION NUMBER(4)
    

)
/

ALTER TABLE AWARD_AMOUNT_INFO
    ADD CONSTRAINT AWARD_AMOUNT_INFOP1
PRIMARY KEY (AWARD_AMOUNT_INFO_ID)
/







-----------------------------------------------------------------------------
-- AWARD_AMOUNT_TRANSACTION
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'AWARD_AMOUNT_TRANSACTION';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE AWARD_AMOUNT_TRANSACTION CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE AWARD_AMOUNT_TRANSACTION
(
      AWARD_AMOUNT_TRANSACTION_ID NUMBER(12)
        , AWARD_NUMBER VARCHAR2(12) NOT NULL
        , TRANSACTION_ID VARCHAR2(10) NOT NULL
        , TRANSACTION_TYPE_CODE NUMBER(3)
        , NOTICE_DATE DATE
        , COMMENTS VARCHAR2(2000)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE AWARD_AMOUNT_TRANSACTION
    ADD CONSTRAINT AWARD_AMOUNT_TRANSACTIONP1
PRIMARY KEY (AWARD_AMOUNT_TRANSACTION_ID)
/


CREATE INDEX UQ_AWARD_AMOUNT_TRANSACTIONS 
  ON AWARD_AMOUNT_TRANSACTION 
  (AWARD_NUMBER, TRANSACTION_ID)
/





-----------------------------------------------------------------------------
-- AWARD_AMT_FNA_DISTRIBUTION
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'AWARD_AMT_FNA_DISTRIBUTION';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE AWARD_AMT_FNA_DISTRIBUTION CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE AWARD_AMT_FNA_DISTRIBUTION
(
      AWARD_AMT_FNA_DISTRIBUTION_ID NUMBER(8)
        , AWARD_ID NUMBER(22)
        , AWARD_NUMBER VARCHAR2(12)
        , SEQUENCE_NUMBER NUMBER(8)
        , AMOUNT_SEQUENCE_NUMBER NUMBER(4)
        , BUDGET_PERIOD NUMBER(3)
        , START_DATE DATE
        , END_DATE DATE
        , DIRECT_COST NUMBER(12,2)
        , INDIRECT_COST NUMBER(12,2)
        , UPDATE_TIMESTAMP DATE
        , UPDATE_USER VARCHAR2(60)
        , VER_NBR NUMBER(8) default 1
        , AWARD_AMOUNT_INFO_ID NUMBER(8)
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE AWARD_AMT_FNA_DISTRIBUTION
    ADD CONSTRAINT AWARD_AMT_FNA_DISTRIBUTIONP1
PRIMARY KEY (AWARD_AMT_FNA_DISTRIBUTION_ID)
/


CREATE INDEX U_AWARD_AMT_FNA_DISTRIBUTION 
  ON AWARD_AMT_FNA_DISTRIBUTION 
  (AWARD_AMT_FNA_DISTRIBUTION_ID, AWARD_NUMBER, SEQUENCE_NUMBER, BUDGET_PERIOD)
/





-----------------------------------------------------------------------------
-- AWARD_APPROVED_EQUIPMENT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'AWARD_APPROVED_EQUIPMENT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE AWARD_APPROVED_EQUIPMENT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE AWARD_APPROVED_EQUIPMENT
(
      AWARD_APPROVED_EQUIPMENT_ID NUMBER(22)
        , AWARD_ID NUMBER(22) NOT NULL
        , AWARD_NUMBER VARCHAR2(12) NOT NULL
        , SEQUENCE_NUMBER NUMBER(4) NOT NULL
        , ITEM VARCHAR2(100) NOT NULL
        , VENDOR VARCHAR2(50)
        , MODEL VARCHAR2(50)
        , AMOUNT NUMBER(12,2) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE AWARD_APPROVED_EQUIPMENT
    ADD CONSTRAINT AWARD_APPROVED_EQUIPMENTP1
PRIMARY KEY (AWARD_APPROVED_EQUIPMENT_ID)
/







-----------------------------------------------------------------------------
-- AWARD_APPROVED_FOREIGN_TRAVEL
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'AWARD_APPROVED_FOREIGN_TRAVEL';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE AWARD_APPROVED_FOREIGN_TRAVEL CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE AWARD_APPROVED_FOREIGN_TRAVEL
(
      AWARD_APPR_FORN_TRAVEL_ID NUMBER(22)
        , AWARD_ID NUMBER(22) NOT NULL
        , AWARD_NUMBER VARCHAR2(12) NOT NULL
        , SEQUENCE_NUMBER NUMBER(4) NOT NULL
        , PERSON_ID VARCHAR2(40)
        , ROLODEX_ID NUMBER(6)
        , TRAVELER_NAME VARCHAR2(90)
        , DESTINATION VARCHAR2(30) NOT NULL
        , START_DATE DATE NOT NULL
        , END_DATE DATE
        , AMOUNT NUMBER(12,2)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE AWARD_APPROVED_FOREIGN_TRAVEL
    ADD CONSTRAINT AWARD_APPROVED_FOREIGN_TRAVP1
PRIMARY KEY (AWARD_APPR_FORN_TRAVEL_ID)
/







-----------------------------------------------------------------------------
-- AWARD_APPROVED_SUBAWARDS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'AWARD_APPROVED_SUBAWARDS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE AWARD_APPROVED_SUBAWARDS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE AWARD_APPROVED_SUBAWARDS
(
      AWARD_APPROVED_SUBAWARD_ID NUMBER(8)
        , AWARD_ID NUMBER(22)
        , AWARD_NUMBER VARCHAR2(12)
        , SEQUENCE_NUMBER NUMBER(8)
        , ORGANIZATION_NAME VARCHAR2(60)
        , AMOUNT NUMBER(12,2)
        , UPDATE_TIMESTAMP DATE
        , UPDATE_USER VARCHAR2(60)
        , VER_NBR NUMBER(8) default 1
        , ORGANIZATION_ID VARCHAR2(8)
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE AWARD_APPROVED_SUBAWARDS
    ADD CONSTRAINT AWARD_APPROVED_SUBAWARDSP1
PRIMARY KEY (AWARD_APPROVED_SUBAWARD_ID)
/







-----------------------------------------------------------------------------
-- AWARD_ATTACHMENT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'AWARD_ATTACHMENT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE AWARD_ATTACHMENT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE AWARD_ATTACHMENT
(
      AWARD_ATTACHMENT_ID NUMBER(12)
        , AWARD_ID NUMBER(22) NOT NULL
        , AWARD_NUMBER VARCHAR2(20) NOT NULL
        , SEQUENCE_NUMBER NUMBER(4) NOT NULL
        , TYPE_CODE VARCHAR2(3) NOT NULL
        , DOCUMENT_ID NUMBER(4) NOT NULL
        , FILE_ID NUMBER(22) NOT NULL
        , DESCRIPTION VARCHAR2(200)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE AWARD_ATTACHMENT
    ADD CONSTRAINT AWARD_ATTACHMENTP1
PRIMARY KEY (AWARD_ATTACHMENT_ID)
/







-----------------------------------------------------------------------------
-- AWARD_ATTACHMENT_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'AWARD_ATTACHMENT_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE AWARD_ATTACHMENT_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE AWARD_ATTACHMENT_TYPE
(
      TYPE_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(300) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE AWARD_ATTACHMENT_TYPE
    ADD CONSTRAINT AWARD_ATTACHMENT_TYPEP1
PRIMARY KEY (TYPE_CODE)
/







-----------------------------------------------------------------------------
-- AWARD_BASIS_OF_PAYMENT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'AWARD_BASIS_OF_PAYMENT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE AWARD_BASIS_OF_PAYMENT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE AWARD_BASIS_OF_PAYMENT
(
      VER_NBR NUMBER(8) default 1 NOT NULL
        , BASIS_OF_PAYMENT_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE AWARD_BASIS_OF_PAYMENT
    ADD CONSTRAINT AWARD_BASIS_OF_PAYMENTP1
PRIMARY KEY (BASIS_OF_PAYMENT_CODE)
/







-----------------------------------------------------------------------------
-- AWARD_BUDGET_DETAILS_EXT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'AWARD_BUDGET_DETAILS_EXT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE AWARD_BUDGET_DETAILS_EXT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE AWARD_BUDGET_DETAILS_EXT
(
      BUDGET_DETAILS_ID NUMBER(12)
        , OBLIGATED_AMOUNT NUMBER(12)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE AWARD_BUDGET_DETAILS_EXT
    ADD CONSTRAINT AWARD_BUDGET_DETAILS_EXTP1
PRIMARY KEY (BUDGET_DETAILS_ID)
/







-----------------------------------------------------------------------------
-- AWARD_BUDGET_EXT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'AWARD_BUDGET_EXT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE AWARD_BUDGET_EXT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE AWARD_BUDGET_EXT
(
      BUDGET_ID NUMBER(12)
        , AWARD_BUDGET_STATUS_CODE VARCHAR2(3) NOT NULL
        , AWARD_BUDGET_TYPE_CODE VARCHAR2(3) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , OBLIGATED_AMOUNT NUMBER(12,2)
        , BUDGET_INITIATOR VARCHAR2(60)
        , DESCRIPTION VARCHAR2(255)
        , DOCUMENT_NUMBER NUMBER(10)
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE AWARD_BUDGET_EXT
    ADD CONSTRAINT AWARD_BUDGET_EXTP1
PRIMARY KEY (BUDGET_ID)
/







-----------------------------------------------------------------------------
-- AWARD_BUDGET_PERIOD_EXT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'AWARD_BUDGET_PERIOD_EXT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE AWARD_BUDGET_PERIOD_EXT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE AWARD_BUDGET_PERIOD_EXT
(
      BUDGET_PERIOD_NUMBER NUMBER(12)
        , OBLIGATED_AMOUNT NUMBER(12)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE AWARD_BUDGET_PERIOD_EXT
    ADD CONSTRAINT AWARD_BUDGET_PERIOD_EXTP1
PRIMARY KEY (BUDGET_PERIOD_NUMBER)
/







-----------------------------------------------------------------------------
-- AWARD_BUDGET_STATUS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'AWARD_BUDGET_STATUS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE AWARD_BUDGET_STATUS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE AWARD_BUDGET_STATUS
(
      AWARD_BUDGET_STATUS_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE AWARD_BUDGET_STATUS
    ADD CONSTRAINT AWARD_BUDGET_STATUSP1
PRIMARY KEY (AWARD_BUDGET_STATUS_CODE)
/







-----------------------------------------------------------------------------
-- AWARD_BUDGET_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'AWARD_BUDGET_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE AWARD_BUDGET_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE AWARD_BUDGET_TYPE
(
      AWARD_BUDGET_TYPE_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE AWARD_BUDGET_TYPE
    ADD CONSTRAINT AWARD_BUDGET_TYPEP1
PRIMARY KEY (AWARD_BUDGET_TYPE_CODE)
/







-----------------------------------------------------------------------------
-- AWARD_CLOSEOUT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'AWARD_CLOSEOUT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE AWARD_CLOSEOUT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE AWARD_CLOSEOUT
(
      AWARD_CLOSEOUT_ID NUMBER(12)
        , AWARD_ID NUMBER(22) NOT NULL
        , AWARD_NUMBER VARCHAR2(12) NOT NULL
        , SEQUENCE_NUMBER NUMBER(4) NOT NULL
        , CLOSEOUT_REPORT_CODE VARCHAR2(3) NOT NULL
        , CLOSEOUT_REPORT_NAME VARCHAR2(100) NOT NULL
        , DUE_DATE DATE
        , FINAL_SUBMISSION_DATE DATE
        , MULTIPLE CHAR(1)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE AWARD_CLOSEOUT
    ADD CONSTRAINT AWARD_CLOSEOUTP1
PRIMARY KEY (AWARD_CLOSEOUT_ID)
/







-----------------------------------------------------------------------------
-- AWARD_COMMENT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'AWARD_COMMENT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE AWARD_COMMENT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE AWARD_COMMENT
(
      AWARD_COMMENT_ID NUMBER(8)
        , AWARD_ID NUMBER(22)
        , AWARD_NUMBER VARCHAR2(12)
        , SEQUENCE_NUMBER NUMBER(8)
        , COMMENT_TYPE_CODE VARCHAR2(3)
        , CHECKLIST_PRINT_FLAG VARCHAR2(1)
        , COMMENTS CLOB
        , UPDATE_TIMESTAMP DATE
        , UPDATE_USER VARCHAR2(60)
        , VER_NBR NUMBER(8) default 1
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE AWARD_COMMENT
    ADD CONSTRAINT AWARD_COMMENTP1
PRIMARY KEY (AWARD_COMMENT_ID)
/







-----------------------------------------------------------------------------
-- AWARD_COST_SHARE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'AWARD_COST_SHARE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE AWARD_COST_SHARE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE AWARD_COST_SHARE
(
      VERIFICATION_DATE DATE
        , COST_SHARE_MET NUMBER(12,2)
        , AWARD_COST_SHARE_ID NUMBER(8)
        , AWARD_ID NUMBER(22)
        , AWARD_NUMBER VARCHAR2(12)
        , SEQUENCE_NUMBER NUMBER(8)
        , FISCAL_YEAR VARCHAR2(4)
        , COST_SHARE_PERCENTAGE NUMBER(5,2)
        , COST_SHARE_TYPE_CODE NUMBER(3)
        , SOURCE VARCHAR2(32)
        , DESTINATION VARCHAR2(32)
        , COMMITMENT_AMOUNT NUMBER(12,2)
        , UPDATE_TIMESTAMP DATE
        , UPDATE_USER VARCHAR2(60)
        , VER_NBR NUMBER(8) default 1
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE AWARD_COST_SHARE
    ADD CONSTRAINT AWARD_COST_SHAREP1
PRIMARY KEY (AWARD_COST_SHARE_ID)
/


CREATE INDEX U_AWARD_COST_SHARE 
  ON AWARD_COST_SHARE 
  (AWARD_NUMBER, SEQUENCE_NUMBER, FISCAL_YEAR, COST_SHARE_TYPE_CODE, SOURCE, DESTINATION)
/





-----------------------------------------------------------------------------
-- AWARD_CUSTOM_DATA
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'AWARD_CUSTOM_DATA';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE AWARD_CUSTOM_DATA CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE AWARD_CUSTOM_DATA
(
      AWARD_CUSTOM_DATA_ID NUMBER(8)
        , AWARD_ID NUMBER(22)
        , AWARD_NUMBER VARCHAR2(12)
        , SEQUENCE_NUMBER NUMBER(8)
        , CUSTOM_ATTRIBUTE_ID NUMBER(8)
        , VALUE VARCHAR2(2000)
        , UPDATE_TIMESTAMP DATE
        , UPDATE_USER VARCHAR2(60)
        , VER_NBR NUMBER(8) default 1
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE AWARD_CUSTOM_DATA
    ADD CONSTRAINT AWARD_CUSTOM_DATAP1
PRIMARY KEY (AWARD_CUSTOM_DATA_ID)
/







-----------------------------------------------------------------------------
-- AWARD_DOCUMENT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'AWARD_DOCUMENT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE AWARD_DOCUMENT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE AWARD_DOCUMENT
(
      DOCUMENT_NUMBER VARCHAR2(10)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE AWARD_DOCUMENT
    ADD CONSTRAINT AWARD_DOCUMENTP1
PRIMARY KEY (DOCUMENT_NUMBER)
/







-----------------------------------------------------------------------------
-- AWARD_EXEMPT_NUMBER
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'AWARD_EXEMPT_NUMBER';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE AWARD_EXEMPT_NUMBER CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE AWARD_EXEMPT_NUMBER
(
      AWARD_EXEMPT_NUMBER_ID NUMBER(12)
        , AWARD_SPECIAL_REVIEW_ID NUMBER(12) NOT NULL
        , EXEMPTION_TYPE_CODE VARCHAR2(3) NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE AWARD_EXEMPT_NUMBER
    ADD CONSTRAINT AWARD_EXEMPT_NUMBERP1
PRIMARY KEY (AWARD_EXEMPT_NUMBER_ID)
/







-----------------------------------------------------------------------------
-- AWARD_FUNDING_PROPOSALS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'AWARD_FUNDING_PROPOSALS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE AWARD_FUNDING_PROPOSALS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE AWARD_FUNDING_PROPOSALS
(
      AWARD_FUNDING_PROPOSAL_ID NUMBER(22)
        , AWARD_ID NUMBER(22) NOT NULL
        , PROPOSAL_ID NUMBER(22) NOT NULL
        , UPDATE_TIMESTAMP TIMESTAMP NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , ACTIVE CHAR(1)
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE AWARD_FUNDING_PROPOSALS
    ADD CONSTRAINT AWARD_FUNDING_PROPOSALSP1
PRIMARY KEY (AWARD_FUNDING_PROPOSAL_ID)
/


CREATE INDEX U_AWD_FUND_PROP 
  ON AWARD_FUNDING_PROPOSALS 
  (AWARD_ID, PROPOSAL_ID)
/





-----------------------------------------------------------------------------
-- AWARD_HIERARCHY
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'AWARD_HIERARCHY';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE AWARD_HIERARCHY CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE AWARD_HIERARCHY
(
      AWARD_HIERARCHY_ID NUMBER(22)
        , ROOT_AWARD_NUMBER VARCHAR2(12) NOT NULL
        , AWARD_NUMBER VARCHAR2(12) NOT NULL
        , PARENT_AWARD_NUMBER VARCHAR2(12) NOT NULL
        , ORIGINATING_AWARD_NUMBER VARCHAR2(12) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE AWARD_HIERARCHY
    ADD CONSTRAINT AWARD_HIERARCHYP1
PRIMARY KEY (AWARD_HIERARCHY_ID)
/


CREATE INDEX UQ_AWD_HIER_AWARD_NBR 
  ON AWARD_HIERARCHY 
  (AWARD_NUMBER)
/





-----------------------------------------------------------------------------
-- AWARD_IDC_RATE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'AWARD_IDC_RATE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE AWARD_IDC_RATE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE AWARD_IDC_RATE
(
      AWARD_NUMBER VARCHAR2(12) NOT NULL
        , SEQUENCE_NUMBER NUMBER(8) NOT NULL
        , AWARD_IDC_RATE_ID NUMBER(12)
        , AWARD_ID NUMBER(22) NOT NULL
        , APPLICABLE_IDC_RATE NUMBER(5,2) NOT NULL
        , IDC_RATE_TYPE_CODE NUMBER(3) NOT NULL
        , FISCAL_YEAR VARCHAR2(4) NOT NULL
        , ON_CAMPUS_FLAG VARCHAR2(1) NOT NULL
        , UNDERRECOVERY_OF_IDC NUMBER(12,2)
        , SOURCE_ACCOUNT VARCHAR2(32)
        , DESTINATION_ACCOUNT VARCHAR2(32)
        , START_DATE DATE NOT NULL
        , END_DATE DATE
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE AWARD_IDC_RATE
    ADD CONSTRAINT AWARD_IDC_RATEP1
PRIMARY KEY (AWARD_IDC_RATE_ID)
/







-----------------------------------------------------------------------------
-- AWARD_METHOD_OF_PAYMENT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'AWARD_METHOD_OF_PAYMENT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE AWARD_METHOD_OF_PAYMENT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE AWARD_METHOD_OF_PAYMENT
(
      VER_NBR NUMBER(8) default 1 NOT NULL
        , METHOD_OF_PAYMENT_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE AWARD_METHOD_OF_PAYMENT
    ADD CONSTRAINT AWARD_METHOD_OF_PAYMENTP1
PRIMARY KEY (METHOD_OF_PAYMENT_CODE)
/







-----------------------------------------------------------------------------
-- AWARD_NOTEPAD
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'AWARD_NOTEPAD';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE AWARD_NOTEPAD CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE AWARD_NOTEPAD
(
      AWARD_NOTEPAD_ID NUMBER(12)
        , AWARD_NUMBER VARCHAR2(12) NOT NULL
        , ENTRY_NUMBER NUMBER(4) NOT NULL
        , COMMENTS CLOB NOT NULL
        , RESTRICTED_VIEW CHAR(1) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , CREATE_TIMESTAMP DATE NOT NULL
        , NOTE_TOPIC VARCHAR2(60) NOT NULL
        , AWARD_ID NUMBER(22) NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE AWARD_NOTEPAD
    ADD CONSTRAINT AWARD_NOTEPADP1
PRIMARY KEY (AWARD_NOTEPAD_ID)
/


CREATE INDEX UQ_AWARD_NOTEPAD 
  ON AWARD_NOTEPAD 
  (AWARD_NUMBER, ENTRY_NUMBER)
/





-----------------------------------------------------------------------------
-- AWARD_PAYMENT_SCHEDULE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'AWARD_PAYMENT_SCHEDULE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE AWARD_PAYMENT_SCHEDULE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE AWARD_PAYMENT_SCHEDULE
(
      AWARD_PAYMENT_SCHEDULE_ID NUMBER(12)
        , AWARD_ID NUMBER(22) NOT NULL
        , AWARD_NUMBER VARCHAR2(12) NOT NULL
        , SEQUENCE_NUMBER NUMBER(4) NOT NULL
        , DUE_DATE DATE
        , AMOUNT NUMBER(12,2)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , SUBMIT_DATE DATE
        , SUBMITTED_BY VARCHAR2(9)
        , INVOICE_NUMBER VARCHAR2(10)
        , STATUS_DESCRIPTION VARCHAR2(50)
        , STATUS VARCHAR2(5)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE AWARD_PAYMENT_SCHEDULE
    ADD CONSTRAINT AWARD_PAYMENT_SCHEDULEP1
PRIMARY KEY (AWARD_PAYMENT_SCHEDULE_ID)
/







-----------------------------------------------------------------------------
-- AWARD_PERSONS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'AWARD_PERSONS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE AWARD_PERSONS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE AWARD_PERSONS
(
      KEY_PERSON_PROJECT_ROLE VARCHAR2(60)
        , AWARD_PERSON_ID NUMBER(22)
        , AWARD_ID NUMBER(22) NOT NULL
        , AWARD_NUMBER VARCHAR2(12) NOT NULL
        , SEQUENCE_NUMBER NUMBER(4) NOT NULL
        , PERSON_ID VARCHAR2(40)
        , ROLODEX_ID NUMBER(6)
        , FULL_NAME VARCHAR2(90)
        , CONTACT_ROLE_CODE VARCHAR2(12) NOT NULL
        , ACADEMIC_YEAR_EFFORT NUMBER(5,2)
        , CALENDAR_YEAR_EFFORT NUMBER(5,2)
        , SUMMER_EFFORT NUMBER(5,2)
        , TOTAL_EFFORT NUMBER(5,2)
        , FACULTY_FLAG CHAR(1) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) NOT NULL
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE AWARD_PERSONS
    ADD CONSTRAINT AWARD_PERSONSP1
PRIMARY KEY (AWARD_PERSON_ID)
/







-----------------------------------------------------------------------------
-- AWARD_PERSON_CREDIT_SPLITS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'AWARD_PERSON_CREDIT_SPLITS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE AWARD_PERSON_CREDIT_SPLITS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE AWARD_PERSON_CREDIT_SPLITS
(
      AWARD_PERSON_CREDIT_SPLIT_ID NUMBER(22)
        , AWARD_PERSON_ID NUMBER(22) NOT NULL
        , INV_CREDIT_TYPE_CODE VARCHAR2(3) NOT NULL
        , CREDIT NUMBER(5,2)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) NOT NULL
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE AWARD_PERSON_CREDIT_SPLITS
    ADD CONSTRAINT AWARD_PERSON_CREDIT_SPLITSP1
PRIMARY KEY (AWARD_PERSON_CREDIT_SPLIT_ID)
/


CREATE INDEX UNQ_AP_CREDIT_SPLIT 
  ON AWARD_PERSON_CREDIT_SPLITS 
  (AWARD_PERSON_ID, INV_CREDIT_TYPE_CODE)
/





-----------------------------------------------------------------------------
-- AWARD_PERSON_UNITS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'AWARD_PERSON_UNITS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE AWARD_PERSON_UNITS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE AWARD_PERSON_UNITS
(
      AWARD_PERSON_UNIT_ID NUMBER(22)
        , AWARD_PERSON_ID NUMBER(22) NOT NULL
        , UNIT_NUMBER VARCHAR2(8) NOT NULL
        , LEAD_UNIT_FLAG CHAR(1) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) NOT NULL
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE AWARD_PERSON_UNITS
    ADD CONSTRAINT AWARD_PERSON_UNITSP1
PRIMARY KEY (AWARD_PERSON_UNIT_ID)
/







-----------------------------------------------------------------------------
-- AWARD_PERS_UNIT_CRED_SPLITS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'AWARD_PERS_UNIT_CRED_SPLITS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE AWARD_PERS_UNIT_CRED_SPLITS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE AWARD_PERS_UNIT_CRED_SPLITS
(
      APU_CREDIT_SPLIT_ID NUMBER(22)
        , AWARD_PERSON_UNIT_ID NUMBER(22) NOT NULL
        , INV_CREDIT_TYPE_CODE VARCHAR2(3) NOT NULL
        , CREDIT NUMBER(5,2)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) NOT NULL
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE AWARD_PERS_UNIT_CRED_SPLITS
    ADD CONSTRAINT AWARD_PERS_UNIT_CRED_SPLITSP1
PRIMARY KEY (APU_CREDIT_SPLIT_ID)
/


CREATE INDEX UNQ_APU_CREDIT_SPLIT 
  ON AWARD_PERS_UNIT_CRED_SPLITS 
  (AWARD_PERSON_UNIT_ID, INV_CREDIT_TYPE_CODE)
/





-----------------------------------------------------------------------------
-- AWARD_REPORT_TERMS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'AWARD_REPORT_TERMS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE AWARD_REPORT_TERMS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE AWARD_REPORT_TERMS
(
      AWARD_REPORT_TERMS_ID NUMBER(12)
        , AWARD_ID NUMBER(22) NOT NULL
        , AWARD_NUMBER VARCHAR2(12) NOT NULL
        , SEQUENCE_NUMBER NUMBER(4) NOT NULL
        , REPORT_CLASS_CODE VARCHAR2(3) NOT NULL
        , REPORT_CODE VARCHAR2(3) NOT NULL
        , FREQUENCY_CODE VARCHAR2(3)
        , FREQUENCY_BASE_CODE VARCHAR2(3)
        , OSP_DISTRIBUTION_CODE VARCHAR2(3)
        , DUE_DATE DATE
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE AWARD_REPORT_TERMS
    ADD CONSTRAINT AWARD_REPORT_TERMSP1
PRIMARY KEY (AWARD_REPORT_TERMS_ID)
/







-----------------------------------------------------------------------------
-- AWARD_REP_TERMS_RECNT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'AWARD_REP_TERMS_RECNT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE AWARD_REP_TERMS_RECNT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE AWARD_REP_TERMS_RECNT
(
      CONTACT_ID NUMBER(12)
        , AWARD_REP_TERMS_RECNT_ID NUMBER(12)
        , AWARD_REPORT_TERMS_ID NUMBER(12) NOT NULL
        , CONTACT_TYPE_CODE VARCHAR2(3) NOT NULL
        , ROLODEX_ID NUMBER(6) NOT NULL
        , NUMBER_OF_COPIES NUMBER(2)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE AWARD_REP_TERMS_RECNT
    ADD CONSTRAINT AWARD_REP_TERMS_RECNTP1
PRIMARY KEY (AWARD_REP_TERMS_RECNT_ID)
/







-----------------------------------------------------------------------------
-- AWARD_SCIENCE_KEYWORD
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'AWARD_SCIENCE_KEYWORD';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE AWARD_SCIENCE_KEYWORD CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE AWARD_SCIENCE_KEYWORD
(
      AWARD_SCIENCE_KEYWORD_ID NUMBER(12)
        , AWARD_ID NUMBER(22) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , SCIENCE_KEYWORD_CODE VARCHAR2(15) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE AWARD_SCIENCE_KEYWORD
    ADD CONSTRAINT AWARD_SCIENCE_KEYWORDP1
PRIMARY KEY (AWARD_SCIENCE_KEYWORD_ID)
/







-----------------------------------------------------------------------------
-- AWARD_SPECIAL_REVIEW
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'AWARD_SPECIAL_REVIEW';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE AWARD_SPECIAL_REVIEW CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE AWARD_SPECIAL_REVIEW
(
      EXPIRATION_DATE DATE
        , AWARD_SPECIAL_REVIEW_ID NUMBER(12)
        , AWARD_ID NUMBER(22) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , SPECIAL_REVIEW_NUMBER NUMBER(3) NOT NULL
        , SPECIAL_REVIEW_CODE NUMBER(3) NOT NULL
        , APPROVAL_TYPE_CODE NUMBER(3) NOT NULL
        , PROTOCOL_NUMBER VARCHAR2(20)
        , APPLICATION_DATE DATE
        , APPROVAL_DATE DATE
        , COMMENTS CLOB
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE AWARD_SPECIAL_REVIEW
    ADD CONSTRAINT AWARD_SPECIAL_REVIEWP1
PRIMARY KEY (AWARD_SPECIAL_REVIEW_ID)
/







-----------------------------------------------------------------------------
-- AWARD_SPONSOR_CONTACTS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'AWARD_SPONSOR_CONTACTS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE AWARD_SPONSOR_CONTACTS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE AWARD_SPONSOR_CONTACTS
(
      AWARD_SPONSOR_CONTACT_ID NUMBER(22)
        , AWARD_ID NUMBER(22) NOT NULL
        , AWARD_NUMBER VARCHAR2(12) NOT NULL
        , SEQUENCE_NUMBER NUMBER(4) NOT NULL
        , ROLODEX_ID NUMBER(6)
        , FULL_NAME VARCHAR2(90)
        , CONTACT_ROLE_CODE VARCHAR2(12) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) NOT NULL
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE AWARD_SPONSOR_CONTACTS
    ADD CONSTRAINT AWARD_SPONSOR_CONTACTSP1
PRIMARY KEY (AWARD_SPONSOR_CONTACT_ID)
/







-----------------------------------------------------------------------------
-- AWARD_SPONSOR_TERM
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'AWARD_SPONSOR_TERM';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE AWARD_SPONSOR_TERM CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE AWARD_SPONSOR_TERM
(
      AWARD_SPONSOR_TERM_ID NUMBER(8)
        , AWARD_ID NUMBER(22)
        , AWARD_NUMBER VARCHAR2(12)
        , SEQUENCE_NUMBER NUMBER(8)
        , SPONSOR_TERM_ID NUMBER(12)
        , UPDATE_TIMESTAMP DATE
        , UPDATE_USER VARCHAR2(60)
        , VER_NBR NUMBER(8) default 1
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE AWARD_SPONSOR_TERM
    ADD CONSTRAINT AWARD_SPONSOR_TERMP1
PRIMARY KEY (AWARD_SPONSOR_TERM_ID)
/


CREATE INDEX U_AWARD_SPONSOR_TERM 
  ON AWARD_SPONSOR_TERM 
  (SPONSOR_TERM_ID, AWARD_ID)
/





-----------------------------------------------------------------------------
-- AWARD_STATUS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'AWARD_STATUS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE AWARD_STATUS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE AWARD_STATUS
(
      VER_NBR NUMBER(8) default 1 NOT NULL
        , STATUS_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE AWARD_STATUS
    ADD CONSTRAINT AWARD_STATUSP1
PRIMARY KEY (STATUS_CODE)
/







-----------------------------------------------------------------------------
-- AWARD_TEMPLATE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'AWARD_TEMPLATE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE AWARD_TEMPLATE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE AWARD_TEMPLATE
(
      AWARD_TEMPLATE_CODE NUMBER(5)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , STATUS_CODE VARCHAR2(3) NOT NULL
        , PRIME_SPONSOR_CODE CHAR(6)
        , BASIS_OF_PAYMENT_CODE VARCHAR2(3) NOT NULL
        , METHOD_OF_PAYMENT_CODE VARCHAR2(3) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE AWARD_TEMPLATE
    ADD CONSTRAINT AWARD_TEMPLATEP1
PRIMARY KEY (AWARD_TEMPLATE_CODE)
/







-----------------------------------------------------------------------------
-- AWARD_TEMPLATE_COMMENTS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'AWARD_TEMPLATE_COMMENTS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE AWARD_TEMPLATE_COMMENTS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE AWARD_TEMPLATE_COMMENTS
(
      AWARD_TEMPLATE_COMMENTS_ID NUMBER(12)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , AWARD_TEMPLATE_CODE NUMBER(5) NOT NULL
        , COMMENT_TYPE_CODE VARCHAR2(3) NOT NULL
        , CHECKLIST_PRINT_FLAG CHAR(1) NOT NULL
        , COMMENTS CLOB
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE AWARD_TEMPLATE_COMMENTS
    ADD CONSTRAINT AWARD_TEMPLATE_COMMENTSP1
PRIMARY KEY (AWARD_TEMPLATE_COMMENTS_ID)
/


CREATE INDEX UQ_AWARD_TEMPLATE_COMMENTS 
  ON AWARD_TEMPLATE_COMMENTS 
  (AWARD_TEMPLATE_CODE, COMMENT_TYPE_CODE)
/





-----------------------------------------------------------------------------
-- AWARD_TEMPLATE_CONTACT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'AWARD_TEMPLATE_CONTACT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE AWARD_TEMPLATE_CONTACT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE AWARD_TEMPLATE_CONTACT
(
      AWARD_TEMPLATE_CONTACT_ID NUMBER(12)
        , AWARD_TEMPLATE_CODE NUMBER(5) NOT NULL
        , CONTACT_TYPE_CODE VARCHAR2(3) NOT NULL
        , ROLODEX_ID NUMBER(6) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE AWARD_TEMPLATE_CONTACT
    ADD CONSTRAINT AWARD_TEMPLATE_CONTACTP1
PRIMARY KEY (AWARD_TEMPLATE_CONTACT_ID)
/


CREATE INDEX UQ_AWARD_TEMPLATE_CONTACT 
  ON AWARD_TEMPLATE_CONTACT 
  (AWARD_TEMPLATE_CODE, CONTACT_TYPE_CODE, ROLODEX_ID)
/





-----------------------------------------------------------------------------
-- AWARD_TEMPLATE_REPORT_TERMS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'AWARD_TEMPLATE_REPORT_TERMS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE AWARD_TEMPLATE_REPORT_TERMS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE AWARD_TEMPLATE_REPORT_TERMS
(
      TEMPLATE_REPORT_TERMS_ID NUMBER(12)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , AWARD_TEMPLATE_CODE NUMBER(5) NOT NULL
        , REPORT_CLASS_CODE VARCHAR2(3) NOT NULL
        , REPORT_CODE VARCHAR2(3) NOT NULL
        , FREQUENCY_CODE VARCHAR2(3) NOT NULL
        , FREQUENCY_BASE_CODE VARCHAR2(3) NOT NULL
        , OSP_DISTRIBUTION_CODE VARCHAR2(3) NOT NULL
        , DUE_DATE DATE
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE AWARD_TEMPLATE_REPORT_TERMS
    ADD CONSTRAINT AWARD_TEMPLATE_REPORT_TERMSP1
PRIMARY KEY (TEMPLATE_REPORT_TERMS_ID)
/







-----------------------------------------------------------------------------
-- AWARD_TEMPLATE_TERMS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'AWARD_TEMPLATE_TERMS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE AWARD_TEMPLATE_TERMS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE AWARD_TEMPLATE_TERMS
(
      AWARD_TEMPLATE_TERMS_ID NUMBER(12)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , AWARD_TEMPLATE_CODE NUMBER(5) NOT NULL
        , SPONSOR_TERM_ID NUMBER(12) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE AWARD_TEMPLATE_TERMS
    ADD CONSTRAINT AWARD_TEMPLATE_TERMSP1
PRIMARY KEY (AWARD_TEMPLATE_TERMS_ID)
/







-----------------------------------------------------------------------------
-- AWARD_TEMPL_REP_TERMS_RECNT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'AWARD_TEMPL_REP_TERMS_RECNT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE AWARD_TEMPL_REP_TERMS_RECNT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE AWARD_TEMPL_REP_TERMS_RECNT
(
      TEMPL_REP_TERMS_RECNT_ID NUMBER(12)
        , TEMPLATE_REPORT_TERMS_ID NUMBER(12) NOT NULL
        , CONTACT_TYPE_CODE VARCHAR2(3) NOT NULL
        , ROLODEX_ID NUMBER(6) NOT NULL
        , NUMBER_OF_COPIES NUMBER(2)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE AWARD_TEMPL_REP_TERMS_RECNT
    ADD CONSTRAINT AWARD_TEMPL_REP_TERMS_RECNTP1
PRIMARY KEY (TEMPL_REP_TERMS_RECNT_ID)
/







-----------------------------------------------------------------------------
-- AWARD_TRANSACTION_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'AWARD_TRANSACTION_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE AWARD_TRANSACTION_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE AWARD_TRANSACTION_TYPE
(
      AWARD_TRANSACTION_TYPE_CODE NUMBER(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , SHOW_IN_ACTION_SUMMARY VARCHAR2(1) default 'Y' NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE AWARD_TRANSACTION_TYPE
    ADD CONSTRAINT AWARD_TRANSACTION_TYPEP1
PRIMARY KEY (AWARD_TRANSACTION_TYPE_CODE)
/







-----------------------------------------------------------------------------
-- AWARD_TRANSFERRING_SPONSOR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'AWARD_TRANSFERRING_SPONSOR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE AWARD_TRANSFERRING_SPONSOR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE AWARD_TRANSFERRING_SPONSOR
(
      AWARD_TRANSFERRING_SPONSOR_ID NUMBER(12)
        , AWARD_ID NUMBER(22) NOT NULL
        , AWARD_NUMBER VARCHAR2(12) NOT NULL
        , SEQUENCE_NUMBER NUMBER(4) NOT NULL
        , SPONSOR_CODE CHAR(6) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE AWARD_TRANSFERRING_SPONSOR
    ADD CONSTRAINT AWARD_TRANSFERRING_SPONSORP1
PRIMARY KEY (AWARD_TRANSFERRING_SPONSOR_ID)
/


CREATE INDEX UQ_AWARD_TRANSFERRING_SPONSOR 
  ON AWARD_TRANSFERRING_SPONSOR 
  (AWARD_NUMBER, SEQUENCE_NUMBER, SPONSOR_CODE)
/





-----------------------------------------------------------------------------
-- AWARD_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'AWARD_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE AWARD_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE AWARD_TYPE
(
      AWARD_TYPE_CODE NUMBER(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE AWARD_TYPE
    ADD CONSTRAINT AWARD_TYPEP1
PRIMARY KEY (AWARD_TYPE_CODE)
/







-----------------------------------------------------------------------------
-- AWARD_UNIT_CONTACTS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'AWARD_UNIT_CONTACTS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE AWARD_UNIT_CONTACTS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE AWARD_UNIT_CONTACTS
(
      AWARD_UNIT_CONTACT_ID NUMBER(22)
        , AWARD_ID NUMBER(22) NOT NULL
        , AWARD_NUMBER VARCHAR2(12) NOT NULL
        , SEQUENCE_NUMBER NUMBER(4) NOT NULL
        , PERSON_ID VARCHAR2(40)
        , FULL_NAME VARCHAR2(90)
        , UNIT_ADMINISTRATOR_TYPE_CODE VARCHAR2(3)
        , UNIT_CONTACT_TYPE VARCHAR2(13) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) NOT NULL
        , OBJ_ID VARCHAR2(36) NOT NULL
        , UNIT_ADMINISTRATOR_UNIT_NUMBER VARCHAR2(12)
    

)
/

ALTER TABLE AWARD_UNIT_CONTACTS
    ADD CONSTRAINT AWARD_UNIT_CONTACTSP1
PRIMARY KEY (AWARD_UNIT_CONTACT_ID)
/







-----------------------------------------------------------------------------
-- AWD_BGT_DET_CAL_AMTS_EXT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'AWD_BGT_DET_CAL_AMTS_EXT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE AWD_BGT_DET_CAL_AMTS_EXT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE AWD_BGT_DET_CAL_AMTS_EXT
(
      BUDGET_DETAILS_CAL_AMTS_ID NUMBER(12)
        , OBLIGATED_AMOUNT NUMBER(12)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE AWD_BGT_DET_CAL_AMTS_EXT
    ADD CONSTRAINT AWD_BGT_DET_CAL_AMTS_EXTP1
PRIMARY KEY (BUDGET_DETAILS_CAL_AMTS_ID)
/







-----------------------------------------------------------------------------
-- AWD_BUDGET_PER_CAL_AMTS_EXT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'AWD_BUDGET_PER_CAL_AMTS_EXT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE AWD_BUDGET_PER_CAL_AMTS_EXT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE AWD_BUDGET_PER_CAL_AMTS_EXT
(
      BUDGET_PERSONNEL_CAL_AMTS_ID NUMBER(12)
        , OBLIGATED_AMOUNT NUMBER(12)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE AWD_BUDGET_PER_CAL_AMTS_EXT
    ADD CONSTRAINT AWD_BUDGET_PER_CAL_AMTS_EXTP1
PRIMARY KEY (BUDGET_PERSONNEL_CAL_AMTS_ID)
/







-----------------------------------------------------------------------------
-- AWD_BUDGET_PER_DET_EXT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'AWD_BUDGET_PER_DET_EXT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE AWD_BUDGET_PER_DET_EXT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE AWD_BUDGET_PER_DET_EXT
(
      BUDGET_PERSONNEL_DETAILS_ID NUMBER(12)
        , OBLIGATED_AMOUNT NUMBER(12)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE AWD_BUDGET_PER_DET_EXT
    ADD CONSTRAINT AWD_BUDGET_PER_DET_EXTP1
PRIMARY KEY (BUDGET_PERSONNEL_DETAILS_ID)
/







-----------------------------------------------------------------------------
-- BATCH_CORRESPONDENCE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'BATCH_CORRESPONDENCE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE BATCH_CORRESPONDENCE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE BATCH_CORRESPONDENCE
(
      BATCH_CORRESPONDENCE_TYPE_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , DAYS_TO_EVENT_UI_TEXT VARCHAR2(400) NOT NULL
        , SEND_CORRESPONDENCE VARCHAR2(10) NOT NULL
        , FINAL_ACTION_DAY NUMBER(3)
        , FINAL_ACTION_TYPE_CODE VARCHAR2(3)
        , FINAL_ACTION_CORRESP_TYPE VARCHAR2(3)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE BATCH_CORRESPONDENCE
    ADD CONSTRAINT BATCH_CORRESPONDENCEP1
PRIMARY KEY (BATCH_CORRESPONDENCE_TYPE_CODE)
/







-----------------------------------------------------------------------------
-- BATCH_CORRESPONDENCE_DETAIL
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'BATCH_CORRESPONDENCE_DETAIL';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE BATCH_CORRESPONDENCE_DETAIL CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE BATCH_CORRESPONDENCE_DETAIL
(
      BATCH_CORRESPONDENCE_DETAIL_ID NUMBER(12)
        , BATCH_CORRESPONDENCE_TYPE_CODE VARCHAR2(3) NOT NULL
        , PROTO_CORRESP_TYPE_CODE VARCHAR2(3) NOT NULL
        , DAYS_TO_EVENT NUMBER(3) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE BATCH_CORRESPONDENCE_DETAIL
    ADD CONSTRAINT BATCH_CORRESPONDENCE_DETAILP1
PRIMARY KEY (BATCH_CORRESPONDENCE_DETAIL_ID)
/







-----------------------------------------------------------------------------
-- BUDGET
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'BUDGET';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE BUDGET CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE BUDGET
(
      BUDGET_ID NUMBER(12)
        , BUDGET_JUSTIFICATION CLOB
        , ON_OFF_CAMPUS_FLAG VARCHAR2(1) default 'D' NOT NULL
        , PROPOSAL_NUMBER VARCHAR2(12)
        , VERSION_NUMBER NUMBER(3)
        , DOCUMENT_NUMBER NUMBER(10) NOT NULL
        , START_DATE DATE NOT NULL
        , END_DATE DATE NOT NULL
        , TOTAL_COST NUMBER(12,2)
        , TOTAL_DIRECT_COST NUMBER(12,2)
        , TOTAL_INDIRECT_COST NUMBER(12,2)
        , COST_SHARING_AMOUNT NUMBER(12,2)
        , UNDERRECOVERY_AMOUNT NUMBER(12,2)
        , RESIDUAL_FUNDS NUMBER(12,2)
        , TOTAL_COST_LIMIT NUMBER(12,2)
        , OH_RATE_CLASS_CODE VARCHAR2(3) NOT NULL
        , OH_RATE_TYPE_CODE VARCHAR2(3)
        , COMMENTS CLOB
        , FINAL_VERSION_FLAG CHAR(1)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , UR_RATE_CLASS_CODE VARCHAR2(3) default '1' NOT NULL
        , MODULAR_BUDGET_FLAG VARCHAR2(1) default 'N' NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE BUDGET
    ADD CONSTRAINT BUDGETP1
PRIMARY KEY (BUDGET_ID)
/


CREATE INDEX PK_BUDGET_KRA 
  ON BUDGET 
  (PROPOSAL_NUMBER, VERSION_NUMBER)
/





-----------------------------------------------------------------------------
-- BUDGET_CATEGORY
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'BUDGET_CATEGORY';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE BUDGET_CATEGORY CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE BUDGET_CATEGORY
(
      BUDGET_CATEGORY_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , CATEGORY_TYPE VARCHAR2(3)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE BUDGET_CATEGORY
    ADD CONSTRAINT BUDGET_CATEGORYP1
PRIMARY KEY (BUDGET_CATEGORY_CODE)
/







-----------------------------------------------------------------------------
-- BUDGET_CATEGORY_MAPPING
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'BUDGET_CATEGORY_MAPPING';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE BUDGET_CATEGORY_MAPPING CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE BUDGET_CATEGORY_MAPPING
(
      MAPPING_NAME VARCHAR2(100)
        , TARGET_CATEGORY_CODE VARCHAR2(15)
        , COEUS_CATEGORY_CODE NUMBER(3)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE BUDGET_CATEGORY_MAPPING
    ADD CONSTRAINT BUDGET_CATEGORY_MAPPINGP1
PRIMARY KEY (MAPPING_NAME,TARGET_CATEGORY_CODE,COEUS_CATEGORY_CODE)
/







-----------------------------------------------------------------------------
-- BUDGET_CATEGORY_MAPS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'BUDGET_CATEGORY_MAPS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE BUDGET_CATEGORY_MAPS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE BUDGET_CATEGORY_MAPS
(
      MAPPING_NAME VARCHAR2(100)
        , TARGET_CATEGORY_CODE VARCHAR2(15)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , CATEGORY_TYPE CHAR(200)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE BUDGET_CATEGORY_MAPS
    ADD CONSTRAINT BUDGET_CATEGORY_MAPSP1
PRIMARY KEY (MAPPING_NAME,TARGET_CATEGORY_CODE)
/







-----------------------------------------------------------------------------
-- BUDGET_CATEGORY_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'BUDGET_CATEGORY_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE BUDGET_CATEGORY_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE BUDGET_CATEGORY_TYPE
(
      BUDGET_CATEGORY_TYPE_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , SORT_ID NUMBER(2)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE BUDGET_CATEGORY_TYPE
    ADD CONSTRAINT BUDGET_CATEGORY_TYPEP1
PRIMARY KEY (BUDGET_CATEGORY_TYPE_CODE)
/







-----------------------------------------------------------------------------
-- BUDGET_DETAILS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'BUDGET_DETAILS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE BUDGET_DETAILS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE BUDGET_DETAILS
(
      BUDGET_PERIOD_NUMBER NUMBER(12) NOT NULL
        , GROUP_NAME VARCHAR2(25)
        , BUDGET_ID NUMBER(12)
        , HIERARCHY_PROPOSAL_NUMBER VARCHAR2(12)
        , HIDE_IN_HIERARCHY CHAR(1) default 'N' NOT NULL
        , PROPOSAL_NUMBER VARCHAR2(12)
        , VERSION_NUMBER NUMBER(3)
        , BUDGET_PERIOD NUMBER(3) NOT NULL
        , LINE_ITEM_NUMBER NUMBER(3) NOT NULL
        , BUDGET_CATEGORY_CODE NUMBER(3) NOT NULL
        , COST_ELEMENT VARCHAR2(8) NOT NULL
        , LINE_ITEM_DESCRIPTION VARCHAR2(80)
        , BASED_ON_LINE_ITEM NUMBER(3)
        , LINE_ITEM_SEQUENCE NUMBER(3)
        , START_DATE DATE NOT NULL
        , END_DATE DATE NOT NULL
        , LINE_ITEM_COST NUMBER(12,2)
        , COST_SHARING_AMOUNT NUMBER(12,2)
        , UNDERRECOVERY_AMOUNT NUMBER(12,2)
        , ON_OFF_CAMPUS_FLAG CHAR(1) NOT NULL
        , APPLY_IN_RATE_FLAG CHAR(1) NOT NULL
        , BUDGET_JUSTIFICATION CLOB
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , QUANTITY NUMBER(4)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , BUDGET_DETAILS_ID NUMBER(12)
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE BUDGET_DETAILS
    ADD CONSTRAINT BUDGET_DETAILSP1
PRIMARY KEY (BUDGET_DETAILS_ID)
/


CREATE INDEX PK_BUDGET_DETAILS_KRA 
  ON BUDGET_DETAILS 
  (PROPOSAL_NUMBER, VERSION_NUMBER, BUDGET_PERIOD, LINE_ITEM_NUMBER)
/





-----------------------------------------------------------------------------
-- BUDGET_DETAILS_CAL_AMTS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'BUDGET_DETAILS_CAL_AMTS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE BUDGET_DETAILS_CAL_AMTS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE BUDGET_DETAILS_CAL_AMTS
(
      BUDGET_ID NUMBER(12)
        , BUDGET_PERIOD_NUMBER NUMBER(12)
        , PROPOSAL_NUMBER VARCHAR2(12)
        , VERSION_NUMBER NUMBER(3)
        , BUDGET_PERIOD NUMBER(3) NOT NULL
        , LINE_ITEM_NUMBER NUMBER(3) NOT NULL
        , RATE_CLASS_CODE VARCHAR2(3) NOT NULL
        , RATE_TYPE_CODE VARCHAR2(3) NOT NULL
        , APPLY_RATE_FLAG CHAR(1) NOT NULL
        , CALCULATED_COST NUMBER(12,2)
        , CALCULATED_COST_SHARING NUMBER(12,2)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1
        , BUDGET_DETAILS_CAL_AMTS_ID NUMBER(12)
        , BUDGET_DETAILS_ID NUMBER(12)
        , OBJ_ID VARCHAR2(36)
        , RATE_TYPE_DESCRIPTION VARCHAR2(200)
    

)
/

ALTER TABLE BUDGET_DETAILS_CAL_AMTS
    ADD CONSTRAINT BUDGET_DETAILS_CAL_AMTSP1
PRIMARY KEY (BUDGET_DETAILS_CAL_AMTS_ID)
/


CREATE INDEX PK_BUDGET_DETAILS_CAL_AMTS_KRA 
  ON BUDGET_DETAILS_CAL_AMTS 
  (PROPOSAL_NUMBER, VERSION_NUMBER, BUDGET_PERIOD, LINE_ITEM_NUMBER, RATE_CLASS_CODE, RATE_TYPE_CODE)
/





-----------------------------------------------------------------------------
-- BUDGET_DOCUMENT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'BUDGET_DOCUMENT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE BUDGET_DOCUMENT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE BUDGET_DOCUMENT
(
      DOCUMENT_NUMBER VARCHAR2(10)
        , PARENT_DOCUMENT_KEY VARCHAR2(10)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , PARENT_DOCUMENT_TYPE_CODE VARCHAR2(10)
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE BUDGET_DOCUMENT
    ADD CONSTRAINT BUDGET_DOCUMENTP1
PRIMARY KEY (DOCUMENT_NUMBER)
/







-----------------------------------------------------------------------------
-- BUDGET_MODULAR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'BUDGET_MODULAR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE BUDGET_MODULAR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE BUDGET_MODULAR
(
      BUDGET_PERIOD_NUMBER NUMBER(12)
        , BUDGET_ID NUMBER(12)
        , PROPOSAL_NUMBER VARCHAR2(8)
        , VERSION_NUMBER NUMBER(3)
        , BUDGET_PERIOD NUMBER(3) NOT NULL
        , DIRECT_COST_LESS_CONSOR_FNA NUMBER(12,2)
        , CONSORTIUM_FNA NUMBER(12,2)
        , TOTAL_DIRECT_COST NUMBER(12,2)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE BUDGET_MODULAR
    ADD CONSTRAINT BUDGET_MODULARP1
PRIMARY KEY (BUDGET_PERIOD_NUMBER)
/







-----------------------------------------------------------------------------
-- BUDGET_MODULAR_IDC
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'BUDGET_MODULAR_IDC';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE BUDGET_MODULAR_IDC CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE BUDGET_MODULAR_IDC
(
      BUDGET_PERIOD_NUMBER NUMBER(12)
        , BUDGET_ID NUMBER(12)
        , PROPOSAL_NUMBER VARCHAR2(8)
        , VERSION_NUMBER NUMBER(3)
        , BUDGET_PERIOD NUMBER(3) NOT NULL
        , RATE_NUMBER NUMBER(3)
        , DESCRIPTION VARCHAR2(64)
        , IDC_RATE NUMBER(5,2)
        , IDC_BASE NUMBER(12,2)
        , FUNDS_REQUESTED NUMBER(12,2)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE BUDGET_MODULAR_IDC
    ADD CONSTRAINT BUDGET_MODULAR_IDCP1
PRIMARY KEY (BUDGET_PERIOD_NUMBER,RATE_NUMBER)
/







-----------------------------------------------------------------------------
-- BUDGET_PERIODS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'BUDGET_PERIODS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE BUDGET_PERIODS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE BUDGET_PERIODS
(
      BUDGET_ID NUMBER(12)
        , BUDGET_PERIOD_NUMBER NUMBER(12)
        , PROPOSAL_NUMBER VARCHAR2(12)
        , VERSION_NUMBER NUMBER(3)
        , BUDGET_PERIOD NUMBER(3) NOT NULL
        , START_DATE DATE NOT NULL
        , END_DATE DATE NOT NULL
        , TOTAL_COST NUMBER(12,2)
        , TOTAL_DIRECT_COST NUMBER(12,2)
        , TOTAL_INDIRECT_COST NUMBER(12,2)
        , COST_SHARING_AMOUNT NUMBER(12,2)
        , UNDERRECOVERY_AMOUNT NUMBER(12,2)
        , TOTAL_COST_LIMIT NUMBER(12,2)
        , COMMENTS CLOB
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE BUDGET_PERIODS
    ADD CONSTRAINT BUDGET_PERIODSP1
PRIMARY KEY (BUDGET_PERIOD_NUMBER)
/


CREATE INDEX PK_BUDGET_PERIODS_KRA 
  ON BUDGET_PERIODS 
  (VERSION_NUMBER, BUDGET_PERIOD, PROPOSAL_NUMBER)
/





-----------------------------------------------------------------------------
-- BUDGET_PERIOD_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'BUDGET_PERIOD_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE BUDGET_PERIOD_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE BUDGET_PERIOD_TYPE
(
      BUDGET_PERIOD_TYPE_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE BUDGET_PERIOD_TYPE
    ADD CONSTRAINT BUDGET_PERIOD_TYPEP1
PRIMARY KEY (BUDGET_PERIOD_TYPE_CODE)
/







-----------------------------------------------------------------------------
-- BUDGET_PERSONNEL_CAL_AMTS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'BUDGET_PERSONNEL_CAL_AMTS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE BUDGET_PERSONNEL_CAL_AMTS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE BUDGET_PERSONNEL_CAL_AMTS
(
      BUDGET_PERIOD_NUMBER NUMBER(12)
        , BUDGET_ID NUMBER(12)
        , PROPOSAL_NUMBER VARCHAR2(12)
        , VERSION_NUMBER NUMBER(3)
        , BUDGET_PERIOD NUMBER(3) NOT NULL
        , LINE_ITEM_NUMBER NUMBER(3) NOT NULL
        , PERSON_NUMBER NUMBER(3) NOT NULL
        , RATE_CLASS_CODE VARCHAR2(3) NOT NULL
        , RATE_TYPE_CODE VARCHAR2(3) NOT NULL
        , APPLY_RATE_FLAG CHAR(1) NOT NULL
        , CALCULATED_COST NUMBER(12,2)
        , CALCULATED_COST_SHARING NUMBER(12,2)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1
        , BUDGET_PERSONNEL_CAL_AMTS_ID NUMBER(12)
        , BUDGET_PERSONNEL_DETAILS_ID NUMBER(12)
        , OBJ_ID VARCHAR2(36)
        , RATE_TYPE_DESCRIPTION VARCHAR2(200)
    

)
/

ALTER TABLE BUDGET_PERSONNEL_CAL_AMTS
    ADD CONSTRAINT BUDGET_PERSONNEL_CAL_AMTSP1
PRIMARY KEY (BUDGET_PERSONNEL_CAL_AMTS_ID)
/


CREATE INDEX PK_BUDGET_PERS_CAL_AMTS_KRA 
  ON BUDGET_PERSONNEL_CAL_AMTS 
  (PROPOSAL_NUMBER, VERSION_NUMBER, BUDGET_PERIOD, LINE_ITEM_NUMBER, PERSON_NUMBER, RATE_CLASS_CODE, RATE_TYPE_CODE)
/





-----------------------------------------------------------------------------
-- BUDGET_PERSONNEL_DETAILS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'BUDGET_PERSONNEL_DETAILS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE BUDGET_PERSONNEL_DETAILS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE BUDGET_PERSONNEL_DETAILS
(
      PERSON_SEQUENCE_NUMBER NUMBER(3)
        , BUDGET_PERIOD_NUMBER NUMBER(12)
        , BUDGET_ID NUMBER(12)
        , LINE_ITEM_NUMBER NUMBER(3) NOT NULL
        , PERSON_NUMBER NUMBER(3) NOT NULL
        , PERSON_ID VARCHAR2(40) NOT NULL
        , JOB_CODE VARCHAR2(6) NOT NULL
        , START_DATE DATE NOT NULL
        , END_DATE DATE NOT NULL
        , PERIOD_TYPE VARCHAR2(2)
        , LINE_ITEM_DESCRIPTION VARCHAR2(80)
        , SEQUENCE_NUMBER NUMBER(3)
        , SALARY_REQUESTED NUMBER(12,2)
        , PERCENT_CHARGED NUMBER(5,2)
        , PERCENT_EFFORT NUMBER(5,2)
        , COST_SHARING_PERCENT NUMBER(5,2)
        , COST_SHARING_AMOUNT NUMBER(12,2)
        , UNDERRECOVERY_AMOUNT NUMBER(12,2)
        , ON_OFF_CAMPUS_FLAG CHAR(1) NOT NULL
        , APPLY_IN_RATE_FLAG CHAR(1) NOT NULL
        , BUDGET_JUSTIFICATION CLOB
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , PROPOSAL_NUMBER VARCHAR2(12)
        , VERSION_NUMBER NUMBER(3)
        , BUDGET_PERIOD NUMBER(3) NOT NULL
        , BUDGET_PERSONNEL_DETAILS_ID NUMBER(12)
        , BUDGET_DETAILS_ID NUMBER(12)
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE BUDGET_PERSONNEL_DETAILS
    ADD CONSTRAINT BUDGET_PERSONNEL_DETAILSP1
PRIMARY KEY (BUDGET_PERSONNEL_DETAILS_ID)
/







-----------------------------------------------------------------------------
-- BUDGET_PERSONS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'BUDGET_PERSONS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE BUDGET_PERSONS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE BUDGET_PERSONS
(
      PERSON_SEQUENCE_NUMBER NUMBER(3)
        , ROLODEX_ID NUMBER(6)
        , APPOINTMENT_TYPE_CODE VARCHAR2(3)
        , BUDGET_ID NUMBER(12)
        , TBN_ID VARCHAR2(9)
        , HIERARCHY_PROPOSAL_NUMBER VARCHAR2(12)
        , HIDE_IN_HIERARCHY CHAR(1) default 'N' NOT NULL
        , PROPOSAL_NUMBER VARCHAR2(12)
        , VERSION_NUMBER NUMBER(3)
        , PERSON_ID VARCHAR2(40)
        , JOB_CODE VARCHAR2(6)
        , EFFECTIVE_DATE DATE NOT NULL
        , CALCULATION_BASE NUMBER(12,2)
        , PERSON_NAME VARCHAR2(90)
        , NON_EMPLOYEE_FLAG VARCHAR2(1) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE BUDGET_PERSONS
    ADD CONSTRAINT BUDGET_PERSONSP1
PRIMARY KEY (PERSON_SEQUENCE_NUMBER,BUDGET_ID)
/







-----------------------------------------------------------------------------
-- BUDGET_PER_DET_RATE_AND_BASE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'BUDGET_PER_DET_RATE_AND_BASE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE BUDGET_PER_DET_RATE_AND_BASE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE BUDGET_PER_DET_RATE_AND_BASE
(
      BUDGET_ID NUMBER(12)
        , PROPOSAL_NUMBER VARCHAR2(12)
        , VERSION_NUMBER NUMBER(3)
        , BUDGET_PERIOD NUMBER(3) NOT NULL
        , LINE_ITEM_NUMBER NUMBER(3) NOT NULL
        , PERSON_NUMBER NUMBER(3) NOT NULL
        , RATE_NUMBER NUMBER(3) NOT NULL
        , PERSON_ID VARCHAR2(40) NOT NULL
        , START_DATE DATE NOT NULL
        , END_DATE DATE NOT NULL
        , RATE_CLASS_CODE VARCHAR2(3) NOT NULL
        , RATE_TYPE_CODE VARCHAR2(3) NOT NULL
        , ON_OFF_CAMPUS_FLAG VARCHAR2(1) NOT NULL
        , APPLIED_RATE NUMBER(5,2) NOT NULL
        , SALARY_REQUESTED NUMBER(12,2)
        , BASE_COST_SHARING NUMBER(14,2)
        , CALCULATED_COST NUMBER(12,2)
        , CALCULATED_COST_SHARING NUMBER(12,2)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1
        , UNDERRECOVERY_AMOUNT NUMBER(12,2)
        , BUDGET_PERIOD_NUMBER NUMBER(12)
        , BGT_PER_DET_RATE_AND_BASE_ID NUMBER(12)
        , BUDGET_PERSONNEL_DETAILS_ID NUMBER(12)
        , BUDGET_PERSONNEL_CAL_AMTS_ID NUMBER(12)
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE BUDGET_PER_DET_RATE_AND_BASE
    ADD CONSTRAINT BUDGET_PER_DET_RATE_AND_BASP1
PRIMARY KEY (BGT_PER_DET_RATE_AND_BASE_ID)
/







-----------------------------------------------------------------------------
-- BUDGET_PROJECT_INCOME
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'BUDGET_PROJECT_INCOME';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE BUDGET_PROJECT_INCOME CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE BUDGET_PROJECT_INCOME
(
      BUDGET_ID NUMBER(12)
        , BUDGET_PERIOD_NUMBER NUMBER(12) NOT NULL
        , PROPOSAL_NUMBER VARCHAR2(12)
        , BUDGET_VERSION_NUMBER NUMBER(3)
        , PROJECT_INCOME_ID NUMBER(5)
        , BUDGET_PERIOD NUMBER(3) NOT NULL
        , AMOUNT NUMBER(12,2) NOT NULL
        , DESCRIPTION VARCHAR2(2000) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , HIERARCHY_PROPOSAL_NUMBER VARCHAR2(12)
        , HIDE_IN_HIERARCHY CHAR(1) default 'N' NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE BUDGET_PROJECT_INCOME
    ADD CONSTRAINT BUDGET_PROJECT_INCOMEP1
PRIMARY KEY (BUDGET_ID,PROJECT_INCOME_ID)
/







-----------------------------------------------------------------------------
-- BUDGET_RATE_AND_BASE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'BUDGET_RATE_AND_BASE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE BUDGET_RATE_AND_BASE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE BUDGET_RATE_AND_BASE
(
      BUDGET_PERIOD_NUMBER NUMBER(12)
        , BUDGET_ID NUMBER(12)
        , PROPOSAL_NUMBER VARCHAR2(12)
        , VERSION_NUMBER NUMBER(22)
        , BUDGET_PERIOD NUMBER(3) NOT NULL
        , LINE_ITEM_NUMBER NUMBER(3) NOT NULL
        , RATE_NUMBER NUMBER(3) NOT NULL
        , START_DATE DATE NOT NULL
        , END_DATE DATE NOT NULL
        , RATE_CLASS_CODE VARCHAR2(3) NOT NULL
        , RATE_TYPE_CODE VARCHAR2(3) NOT NULL
        , ON_OFF_CAMPUS_FLAG CHAR(1) NOT NULL
        , APPLIED_RATE NUMBER(5,2) NOT NULL
        , BASE_COST NUMBER(14,2)
        , BASE_COST_SHARING NUMBER(14,2)
        , CALCULATED_COST NUMBER(14,2)
        , CALCULATED_COST_SHARING NUMBER(14,2)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1
        , BUDGET_RATE_AND_BASE_ID NUMBER(12)
        , BUDGET_DETAILS_CAL_AMTS_ID NUMBER(12)
        , BUDGET_DETAILS_ID NUMBER(12)
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE BUDGET_RATE_AND_BASE
    ADD CONSTRAINT BUDGET_RATE_AND_BASEP1
PRIMARY KEY (BUDGET_RATE_AND_BASE_ID)
/


CREATE INDEX PK_BUDGET_RATE_AND_BASE_KRA 
  ON BUDGET_RATE_AND_BASE 
  (PROPOSAL_NUMBER, VERSION_NUMBER, BUDGET_PERIOD, LINE_ITEM_NUMBER, RATE_NUMBER, RATE_CLASS_CODE, RATE_TYPE_CODE)
/





-----------------------------------------------------------------------------
-- BUDGET_STATUS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'BUDGET_STATUS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE BUDGET_STATUS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE BUDGET_STATUS
(
      BUDGET_STATUS_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE BUDGET_STATUS
    ADD CONSTRAINT BUDGET_STATUSP1
PRIMARY KEY (BUDGET_STATUS_CODE)
/







-----------------------------------------------------------------------------
-- BUDGET_SUB_AWARDS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'BUDGET_SUB_AWARDS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE BUDGET_SUB_AWARDS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE BUDGET_SUB_AWARDS
(
      PROPOSAL_NUMBER VARCHAR2(12)
        , VERSION_NUMBER NUMBER(3)
        , SUB_AWARD_NUMBER NUMBER(3)
        , ORGANIZATION_NAME VARCHAR2(60) NOT NULL
        , SUB_AWARD_STATUS_CODE NUMBER(3) NOT NULL
        , SUB_AWARD_XFD_FILE_NAME VARCHAR2(256) NOT NULL
        , COMMENTS VARCHAR2(2000)
        , XFD_UPDATE_USER VARCHAR2(60)
        , XFD_UPDATE_TIMESTAMP DATE
        , TRANSLATION_COMMENTS VARCHAR2(2000)
        , XML_UPDATE_USER VARCHAR2(60)
        , XML_UPDATE_TIMESTAMP DATE
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , BUDGET_ID NUMBER(12)
        , HIERARCHY_PROPOSAL_NUMBER VARCHAR2(12)
        , HIDE_IN_HIERARCHY CHAR(1) default 'N' NOT NULL
        , OBJ_ID VARCHAR2(36)
        , SUB_AWARD_XFD_FILE BLOB NOT NULL
        , SUB_AWARD_XML_FILE CLOB NOT NULL
    

)
/

ALTER TABLE BUDGET_SUB_AWARDS
    ADD CONSTRAINT BUDGET_SUB_AWARDSP1
PRIMARY KEY (SUB_AWARD_NUMBER,BUDGET_ID)
/


CREATE INDEX PK_BUDGET_SUB_AWARDS_KRA 
  ON BUDGET_SUB_AWARDS 
  (PROPOSAL_NUMBER, VERSION_NUMBER, SUB_AWARD_NUMBER)
/





-----------------------------------------------------------------------------
-- BUDGET_SUB_AWARD_ATT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'BUDGET_SUB_AWARD_ATT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE BUDGET_SUB_AWARD_ATT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE BUDGET_SUB_AWARD_ATT
(
      PROPOSAL_NUMBER VARCHAR2(12)
        , VERSION_NUMBER NUMBER(3)
        , SUB_AWARD_NUMBER NUMBER(3) NOT NULL
        , CONTENT_ID VARCHAR2(350) NOT NULL
        , CONTENT_TYPE VARCHAR2(250)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , BUDGET_ID NUMBER(12)
        , SUB_AWARD_ATTACHMENT_ID NUMBER(12)
        , ATTACHMENT BLOB NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE BUDGET_SUB_AWARD_ATT
    ADD CONSTRAINT BUDGET_SUB_AWARD_ATTP1
PRIMARY KEY (SUB_AWARD_ATTACHMENT_ID)
/







-----------------------------------------------------------------------------
-- BUDGET_SUB_AWARD_FILES
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'BUDGET_SUB_AWARD_FILES';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE BUDGET_SUB_AWARD_FILES CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE BUDGET_SUB_AWARD_FILES
(
      BUDGET_ID NUMBER(12)
        , PROPOSAL_NUMBER VARCHAR2(12)
        , VERSION_NUMBER NUMBER(3)
        , SUB_AWARD_NUMBER NUMBER(3)
        , SUB_AWARD_XFD_FILE_NAME VARCHAR2(256) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
        , SUB_AWARD_XFD_FILE BLOB NOT NULL
        , SUB_AWARD_XML_FILE CLOB NOT NULL
    

)
/

ALTER TABLE BUDGET_SUB_AWARD_FILES
    ADD CONSTRAINT BUDGET_SUB_AWARD_FILESP1
PRIMARY KEY (BUDGET_ID,SUB_AWARD_NUMBER)
/







-----------------------------------------------------------------------------
-- CARRIER_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'CARRIER_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE CARRIER_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE CARRIER_TYPE
(
      CARRIER_TYPE_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE CARRIER_TYPE
    ADD CONSTRAINT CARRIER_TYPEP1
PRIMARY KEY (CARRIER_TYPE_CODE)
/







-----------------------------------------------------------------------------
-- CLOSEOUT_REPORT_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'CLOSEOUT_REPORT_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE CLOSEOUT_REPORT_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE CLOSEOUT_REPORT_TYPE
(
      CLOSEOUT_REPORT_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE CLOSEOUT_REPORT_TYPE
    ADD CONSTRAINT CLOSEOUT_REPORT_TYPEP1
PRIMARY KEY (CLOSEOUT_REPORT_CODE)
/







-----------------------------------------------------------------------------
-- COEUS_MODULE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'COEUS_MODULE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE COEUS_MODULE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE COEUS_MODULE
(
      MODULE_CODE NUMBER(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE COEUS_MODULE
    ADD CONSTRAINT COEUS_MODULEP1
PRIMARY KEY (MODULE_CODE)
/







-----------------------------------------------------------------------------
-- COEUS_SUB_MODULE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'COEUS_SUB_MODULE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE COEUS_SUB_MODULE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE COEUS_SUB_MODULE
(
      COEUS_SUB_MODULE_ID NUMBER(12)
        , MODULE_CODE NUMBER(3) NOT NULL
        , SUB_MODULE_CODE NUMBER(3) NOT NULL
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE COEUS_SUB_MODULE
    ADD CONSTRAINT COEUS_SUB_MODULEP1
PRIMARY KEY (COEUS_SUB_MODULE_ID)
/


CREATE INDEX UQ_COEUS_SUB_MODULE 
  ON COEUS_SUB_MODULE 
  (MODULE_CODE, SUB_MODULE_CODE)
/





-----------------------------------------------------------------------------
-- COMMENT_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'COMMENT_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE COMMENT_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE COMMENT_TYPE
(
      COMMENT_TYPE_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200)
        , TEMPLATE_FLAG VARCHAR2(1)
        , CHECKLIST_FLAG VARCHAR2(1)
        , AWARD_COMMENT_SCREEN_FLAG VARCHAR2(1)
        , UPDATE_TIMESTAMP DATE
        , UPDATE_USER VARCHAR2(60)
        , VER_NBR NUMBER(8) default 1
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE COMMENT_TYPE
    ADD CONSTRAINT COMMENT_TYPEP1
PRIMARY KEY (COMMENT_TYPE_CODE)
/







-----------------------------------------------------------------------------
-- COMMITTEE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'COMMITTEE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE COMMITTEE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE COMMITTEE
(
      ID NUMBER(12)
        , DOCUMENT_NUMBER NUMBER(10) NOT NULL
        , COMMITTEE_ID VARCHAR2(15) NOT NULL
        , COMMITTEE_NAME VARCHAR2(60) NOT NULL
        , HOME_UNIT_NUMBER VARCHAR2(8) NOT NULL
        , DESCRIPTION VARCHAR2(2000)
        , SCHEDULE_DESCRIPTION VARCHAR2(2000)
        , COMMITTEE_TYPE_CODE VARCHAR2(3) NOT NULL
        , MINIMUM_MEMBERS_REQUIRED NUMBER(3)
        , MAX_PROTOCOLS NUMBER(4)
        , ADV_SUBMISSION_DAYS_REQ NUMBER(3)
        , DEFAULT_REVIEW_TYPE_CODE VARCHAR2(3)
        , APPLICABLE_REVIEW_TYPE_CODE VARCHAR2(3) NOT NULL
        , CREATE_TIMESTAMP DATE
        , CREATE_USER VARCHAR2(8)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , SEQUENCE_NUMBER NUMBER(4) NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE COMMITTEE
    ADD CONSTRAINT COMMITTEEP1
PRIMARY KEY (ID)
/


CREATE INDEX UQ_COMMITTEE_ID 
  ON COMMITTEE 
  (SEQUENCE_NUMBER, COMMITTEE_ID)
/





-----------------------------------------------------------------------------
-- COMMITTEE_DOCUMENT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'COMMITTEE_DOCUMENT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE COMMITTEE_DOCUMENT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE COMMITTEE_DOCUMENT
(
      DOCUMENT_NUMBER NUMBER(10)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE COMMITTEE_DOCUMENT
    ADD CONSTRAINT COMMITTEE_DOCUMENTP1
PRIMARY KEY (DOCUMENT_NUMBER)
/







-----------------------------------------------------------------------------
-- COMMITTEE_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'COMMITTEE_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE COMMITTEE_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE COMMITTEE_TYPE
(
      COMMITTEE_TYPE_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE COMMITTEE_TYPE
    ADD CONSTRAINT COMMITTEE_TYPEP1
PRIMARY KEY (COMMITTEE_TYPE_CODE)
/







-----------------------------------------------------------------------------
-- COMM_BATCH_CORRESP
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'COMM_BATCH_CORRESP';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE COMM_BATCH_CORRESP CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE COMM_BATCH_CORRESP
(
      COMM_BATCH_CORRESP_ID VARCHAR2(10)
        , COMMITTEE_ID VARCHAR2(15) NOT NULL
        , BATCH_CORRESPONDENCE_TYPE_CODE VARCHAR2(3) NOT NULL
        , BATCH_RUN_DATE DATE NOT NULL
        , TIME_WINDOW_START DATE
        , TIME_WINDOW_END DATE
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE COMM_BATCH_CORRESP
    ADD CONSTRAINT COMM_BATCH_CORRESPP1
PRIMARY KEY (COMM_BATCH_CORRESP_ID)
/







-----------------------------------------------------------------------------
-- COMM_BATCH_CORRESP_DETAIL
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'COMM_BATCH_CORRESP_DETAIL';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE COMM_BATCH_CORRESP_DETAIL CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE COMM_BATCH_CORRESP_DETAIL
(
      COMM_BATCH_CORRESP_DETAIL_ID NUMBER(12)
        , COMM_BATCH_CORRESP_ID VARCHAR2(10) NOT NULL
        , PROTOCOL_ACTION_ID NUMBER(12) NOT NULL
        , PROTOCOL_CORRESPONDENCE_ID NUMBER(12) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36) NOT NULL
    
    , CONSTRAINT UQ_COMM_BATCH_CORRESP_DETAIL UNIQUE (COMM_BATCH_CORRESP_ID, PROTOCOL_ACTION_ID)

)
/

ALTER TABLE COMM_BATCH_CORRESP_DETAIL
    ADD CONSTRAINT COMM_BATCH_CORRESP_DETAILP1
PRIMARY KEY (COMM_BATCH_CORRESP_DETAIL_ID)
/







-----------------------------------------------------------------------------
-- COMM_MEMBERSHIPS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'COMM_MEMBERSHIPS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE COMM_MEMBERSHIPS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE COMM_MEMBERSHIPS
(
      COMM_MEMBERSHIP_ID NUMBER(12)
        , COMMITTEE_ID_FK NUMBER(12) NOT NULL
        , PERSON_ID VARCHAR2(40)
        , ROLODEX_ID NUMBER(12)
        , PERSON_NAME VARCHAR2(90) NOT NULL
        , MEMBERSHIP_ID VARCHAR2(10) NOT NULL
        , PAID_MEMBER_FLAG VARCHAR2(1) NOT NULL
        , TERM_START_DATE DATE NOT NULL
        , TERM_END_DATE DATE
        , MEMBERSHIP_TYPE_CODE VARCHAR2(3) NOT NULL
        , COMMENTS CLOB
        , CONTACT_NOTES CLOB
        , TRAINING_NOTES CLOB
        , UPDATE_TIMESTAMP DATE
        , UPDATE_USER VARCHAR2(60)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE COMM_MEMBERSHIPS
    ADD CONSTRAINT COMM_MEMBERSHIPSP1
PRIMARY KEY (COMM_MEMBERSHIP_ID)
/







-----------------------------------------------------------------------------
-- COMM_MEMBERSHIP_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'COMM_MEMBERSHIP_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE COMM_MEMBERSHIP_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE COMM_MEMBERSHIP_TYPE
(
      MEMBERSHIP_TYPE_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE COMM_MEMBERSHIP_TYPE
    ADD CONSTRAINT COMM_MEMBERSHIP_TYPEP1
PRIMARY KEY (MEMBERSHIP_TYPE_CODE)
/







-----------------------------------------------------------------------------
-- COMM_MEMBER_EXPERTISE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'COMM_MEMBER_EXPERTISE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE COMM_MEMBER_EXPERTISE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE COMM_MEMBER_EXPERTISE
(
      COMM_MEMBER_EXPERTISE_ID NUMBER(12)
        , COMM_MEMBERSHIP_ID_FK NUMBER(12) NOT NULL
        , RESEARCH_AREA_CODE VARCHAR2(8) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE COMM_MEMBER_EXPERTISE
    ADD CONSTRAINT COMM_MEMBER_EXPERTISEP1
PRIMARY KEY (COMM_MEMBER_EXPERTISE_ID)
/







-----------------------------------------------------------------------------
-- COMM_MEMBER_ROLES
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'COMM_MEMBER_ROLES';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE COMM_MEMBER_ROLES CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE COMM_MEMBER_ROLES
(
      UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , COMM_MEMBER_ROLES_ID NUMBER(12)
        , COMM_MEMBERSHIP_ID_FK NUMBER(12) NOT NULL
        , MEMBERSHIP_ROLE_CODE VARCHAR2(3) NOT NULL
        , START_DATE DATE NOT NULL
        , END_DATE DATE NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE COMM_MEMBER_ROLES
    ADD CONSTRAINT COMM_MEMBER_ROLESP1
PRIMARY KEY (COMM_MEMBER_ROLES_ID)
/







-----------------------------------------------------------------------------
-- COMM_RESEARCH_AREAS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'COMM_RESEARCH_AREAS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE COMM_RESEARCH_AREAS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE COMM_RESEARCH_AREAS
(
      ID NUMBER(12)
        , COMMITTEE_ID_FK NUMBER(12) NOT NULL
        , RESEARCH_AREA_CODE VARCHAR2(8) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE COMM_RESEARCH_AREAS
    ADD CONSTRAINT COMM_RESEARCH_AREASP1
PRIMARY KEY (ID)
/







-----------------------------------------------------------------------------
-- COMM_SCHEDULE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'COMM_SCHEDULE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE COMM_SCHEDULE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE COMM_SCHEDULE
(
      ID NUMBER(12)
        , SCHEDULE_ID VARCHAR2(10) NOT NULL
        , COMMITTEE_ID_FK NUMBER(12) NOT NULL
        , SCHEDULED_DATE DATE NOT NULL
        , PLACE VARCHAR2(200)
        , TIME DATE
        , PROTOCOL_SUB_DEADLINE DATE NOT NULL
        , SCHEDULE_STATUS_CODE NUMBER(3) NOT NULL
        , MEETING_DATE DATE
        , START_TIME DATE
        , END_TIME DATE
        , AGENDA_PROD_REV_DATE DATE
        , MAX_PROTOCOLS NUMBER(4)
        , COMMENTS VARCHAR2(2000)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE COMM_SCHEDULE
    ADD CONSTRAINT COMM_SCHEDULEP1
PRIMARY KEY (ID)
/







-----------------------------------------------------------------------------
-- COMM_SCHEDULE_ACT_ITEMS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'COMM_SCHEDULE_ACT_ITEMS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE COMM_SCHEDULE_ACT_ITEMS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE COMM_SCHEDULE_ACT_ITEMS
(
      COMM_SCHEDULE_ACT_ITEMS_ID NUMBER(12)
        , SCHEDULE_ID_FK NUMBER(12) NOT NULL
        , ACTION_ITEM_NUMBER NUMBER(4) NOT NULL
        , SCHEDULE_ACT_ITEM_TYPE_CODE VARCHAR2(3) NOT NULL
        , ITEM_DESCTIPTION VARCHAR2(2000) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE COMM_SCHEDULE_ACT_ITEMS
    ADD CONSTRAINT COMM_SCHEDULE_ACT_ITEMSP1
PRIMARY KEY (COMM_SCHEDULE_ACT_ITEMS_ID)
/


CREATE INDEX UQ_COMM_SCHEDULE_ACT_ITEMS 
  ON COMM_SCHEDULE_ACT_ITEMS 
  (SCHEDULE_ID_FK, ACTION_ITEM_NUMBER)
/





-----------------------------------------------------------------------------
-- COMM_SCHEDULE_ATTENDANCE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'COMM_SCHEDULE_ATTENDANCE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE COMM_SCHEDULE_ATTENDANCE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE COMM_SCHEDULE_ATTENDANCE
(
      PERSON_NAME VARCHAR2(90) NOT NULL
        , COMM_SCHEDULE_ATTENDANCE_ID NUMBER(12)
        , SCHEDULE_ID_FK NUMBER(12) NOT NULL
        , PERSON_ID VARCHAR2(40) NOT NULL
        , GUEST_FLAG VARCHAR2(1) NOT NULL
        , ALTERNATE_FLAG VARCHAR2(1) NOT NULL
        , ALTERNATE_FOR VARCHAR2(40)
        , NON_EMPLOYEE_FLAG VARCHAR2(1) NOT NULL
        , COMMENTS VARCHAR2(2000)
        , UPDATE_TIMESTAMP DATE
        , UPDATE_USER VARCHAR2(60)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE COMM_SCHEDULE_ATTENDANCE
    ADD CONSTRAINT COMM_SCHEDULE_ATTENDANCEP1
PRIMARY KEY (COMM_SCHEDULE_ATTENDANCE_ID)
/


CREATE INDEX UQ_COMM_SCHEDULE_ATTENDANCE 
  ON COMM_SCHEDULE_ATTENDANCE 
  (SCHEDULE_ID_FK, PERSON_ID)
/





-----------------------------------------------------------------------------
-- COMM_SCHEDULE_FREQUENCY
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'COMM_SCHEDULE_FREQUENCY';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE COMM_SCHEDULE_FREQUENCY CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE COMM_SCHEDULE_FREQUENCY
(
      FREQUENCY_CODE NUMBER(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , NO_OF_DAYS NUMBER(3)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE COMM_SCHEDULE_FREQUENCY
    ADD CONSTRAINT COMM_SCHEDULE_FREQUENCYP1
PRIMARY KEY (FREQUENCY_CODE)
/







-----------------------------------------------------------------------------
-- COMM_SCHEDULE_MINUTES
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'COMM_SCHEDULE_MINUTES';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE COMM_SCHEDULE_MINUTES CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE COMM_SCHEDULE_MINUTES
(
      FINAL_FLAG VARCHAR2(1)
        , REVIEWER_ID_FK NUMBER(12)
        , COMM_SCHEDULE_MINUTES_ID NUMBER(12)
        , SCHEDULE_ID_FK NUMBER(12) NOT NULL
        , PROTOCOL_ID_FK NUMBER(12)
        , ENTRY_NUMBER NUMBER(12) NOT NULL
        , MINUTE_ENTRY_TYPE_CODE VARCHAR2(3) NOT NULL
        , SUBMISSION_ID_FK NUMBER(12)
        , PRIVATE_COMMENT_FLAG VARCHAR2(1)
        , PROTOCOL_CONTINGENCY_CODE VARCHAR2(4)
        , MINUTE_ENTRY CLOB
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE COMM_SCHEDULE_MINUTES
    ADD CONSTRAINT COMM_SCHEDULE_MINUTESP1
PRIMARY KEY (COMM_SCHEDULE_MINUTES_ID)
/


CREATE INDEX UQ_COMM_SCHEDULE_MINUTES 
  ON COMM_SCHEDULE_MINUTES 
  (SCHEDULE_ID_FK, ENTRY_NUMBER)
/





-----------------------------------------------------------------------------
-- COMM_SCHEDULE_MINUTE_DOC
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'COMM_SCHEDULE_MINUTE_DOC';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE COMM_SCHEDULE_MINUTE_DOC CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE COMM_SCHEDULE_MINUTE_DOC
(
      COMM_SCHEDULE_MINUTE_DOC_ID NUMBER(12)
        , SCHEDULE_ID_FK NUMBER(12) NOT NULL
        , MINUTE_NUMBER NUMBER(4) NOT NULL
        , MINUTE_NAME VARCHAR2(200) NOT NULL
        , CREATE_TIMESTAMP DATE NOT NULL
        , CREATE_USER VARCHAR2(60) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
        , PDF_STORE BLOB NOT NULL
    

)
/

ALTER TABLE COMM_SCHEDULE_MINUTE_DOC
    ADD CONSTRAINT COMM_SCHEDULE_MINUTE_DOCP1
PRIMARY KEY (COMM_SCHEDULE_MINUTE_DOC_ID)
/


CREATE INDEX UQ_COMM_SCHEDULE_MINUTE_DOC 
  ON COMM_SCHEDULE_MINUTE_DOC 
  (SCHEDULE_ID_FK, MINUTE_NUMBER)
/





-----------------------------------------------------------------------------
-- CONTACT_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'CONTACT_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE CONTACT_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE CONTACT_TYPE
(
      VER_NBR NUMBER(8) default 1 NOT NULL
        , CONTACT_TYPE_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE CONTACT_TYPE
    ADD CONSTRAINT CONTACT_TYPEP1
PRIMARY KEY (CONTACT_TYPE_CODE)
/







-----------------------------------------------------------------------------
-- CORRESPONDENT_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'CORRESPONDENT_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE CORRESPONDENT_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE CORRESPONDENT_TYPE
(
      CORRESPONDENT_TYPE_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , QUALIFIER VARCHAR2(1) default 'p' NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE CORRESPONDENT_TYPE
    ADD CONSTRAINT CORRESPONDENT_TYPEP1
PRIMARY KEY (CORRESPONDENT_TYPE_CODE)
/







-----------------------------------------------------------------------------
-- COST_ELEMENT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'COST_ELEMENT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE COST_ELEMENT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE COST_ELEMENT
(
      COST_ELEMENT VARCHAR2(8)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , BUDGET_CATEGORY_CODE VARCHAR2(3)
        , ON_OFF_CAMPUS_FLAG CHAR(1) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE COST_ELEMENT
    ADD CONSTRAINT COST_ELEMENTP1
PRIMARY KEY (COST_ELEMENT)
/







-----------------------------------------------------------------------------
-- COST_SHARE_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'COST_SHARE_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE COST_SHARE_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE COST_SHARE_TYPE
(
      COST_SHARE_TYPE_CODE NUMBER(3)
        , DESCRIPTION VARCHAR2(200)
        , UPDATE_TIMESTAMP DATE
        , UPDATE_USER VARCHAR2(60)
        , VER_NBR NUMBER(8)
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE COST_SHARE_TYPE
    ADD CONSTRAINT COST_SHARE_TYPEP1
PRIMARY KEY (COST_SHARE_TYPE_CODE)
/







-----------------------------------------------------------------------------
-- COUNTRY_CODE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'COUNTRY_CODE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE COUNTRY_CODE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE COUNTRY_CODE
(
      COUNTRY_CODE CHAR(3)
        , COUNTRY_NAME VARCHAR2(40) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE COUNTRY_CODE
    ADD CONSTRAINT COUNTRY_CODEP1
PRIMARY KEY (COUNTRY_CODE)
/







-----------------------------------------------------------------------------
-- CUSTOM_ATTRIBUTE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'CUSTOM_ATTRIBUTE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE CUSTOM_ATTRIBUTE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE CUSTOM_ATTRIBUTE
(
      ID NUMBER(12)
        , NAME VARCHAR2(30) NOT NULL
        , LABEL VARCHAR2(30) NOT NULL
        , DATA_TYPE_CODE VARCHAR2(3) NOT NULL
        , DATA_LENGTH NUMBER(4)
        , DEFAULT_VALUE VARCHAR2(2000)
        , LOOKUP_CLASS VARCHAR2(100)
        , LOOKUP_RETURN VARCHAR2(30)
        , GROUP_NAME VARCHAR2(250)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE CUSTOM_ATTRIBUTE
    ADD CONSTRAINT CUSTOM_ATTRIBUTEP1
PRIMARY KEY (ID)
/







-----------------------------------------------------------------------------
-- CUSTOM_ATTRIBUTE_DATA_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'CUSTOM_ATTRIBUTE_DATA_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE CUSTOM_ATTRIBUTE_DATA_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE CUSTOM_ATTRIBUTE_DATA_TYPE
(
      DATA_TYPE_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE CUSTOM_ATTRIBUTE_DATA_TYPE
    ADD CONSTRAINT CUSTOM_ATTRIBUTE_DATA_TYPEP1
PRIMARY KEY (DATA_TYPE_CODE)
/







-----------------------------------------------------------------------------
-- CUSTOM_ATTRIBUTE_DOCUMENT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'CUSTOM_ATTRIBUTE_DOCUMENT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE CUSTOM_ATTRIBUTE_DOCUMENT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE CUSTOM_ATTRIBUTE_DOCUMENT
(
      DOCUMENT_TYPE_CODE VARCHAR2(4)
        , CUSTOM_ATTRIBUTE_ID NUMBER(12)
        , TYPE_NAME VARCHAR2(100)
        , IS_REQUIRED CHAR(1)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , ACTIVE_FLAG CHAR(1)
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE CUSTOM_ATTRIBUTE_DOCUMENT
    ADD CONSTRAINT CUSTOM_ATTRIBUTE_DOCUMENTP1
PRIMARY KEY (DOCUMENT_TYPE_CODE,CUSTOM_ATTRIBUTE_ID)
/







-----------------------------------------------------------------------------
-- CUSTOM_ATTRIBUTE_DOC_VALUE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'CUSTOM_ATTRIBUTE_DOC_VALUE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE CUSTOM_ATTRIBUTE_DOC_VALUE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE CUSTOM_ATTRIBUTE_DOC_VALUE
(
      DOCUMENT_NUMBER NUMBER(10)
        , CUSTOM_ATTRIBUTE_ID NUMBER(12)
        , VALUE VARCHAR2(2000)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE CUSTOM_ATTRIBUTE_DOC_VALUE
    ADD CONSTRAINT CUSTOM_ATTRIBUTE_DOC_VALUEP1
PRIMARY KEY (DOCUMENT_NUMBER,CUSTOM_ATTRIBUTE_ID)
/







-----------------------------------------------------------------------------
-- DEADLINE_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'DEADLINE_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE DEADLINE_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE DEADLINE_TYPE
(
      DEADLINE_TYPE_CODE CHAR(1)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE DEADLINE_TYPE
    ADD CONSTRAINT DEADLINE_TYPEP1
PRIMARY KEY (DEADLINE_TYPE_CODE)
/







-----------------------------------------------------------------------------
-- DEGREE_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'DEGREE_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE DEGREE_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE DEGREE_TYPE
(
      DEGREE_CODE VARCHAR2(6)
        , DESCRIPTION VARCHAR2(200)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE DEGREE_TYPE
    ADD CONSTRAINT DEGREE_TYPEP1
PRIMARY KEY (DEGREE_CODE)
/







-----------------------------------------------------------------------------
-- DISTRIBUTION
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'DISTRIBUTION';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE DISTRIBUTION CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE DISTRIBUTION
(
      VER_NBR NUMBER(8) default 1 NOT NULL
        , OSP_DISTRIBUTION_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE DISTRIBUTION
    ADD CONSTRAINT DISTRIBUTIONP1
PRIMARY KEY (OSP_DISTRIBUTION_CODE)
/







-----------------------------------------------------------------------------
-- DOCUMENT_NEXTVALUE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'DOCUMENT_NEXTVALUE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE DOCUMENT_NEXTVALUE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE DOCUMENT_NEXTVALUE
(
      DOCUMENT_NUMBER NUMBER(12)
        , PROPERTY_NAME VARCHAR2(200)
        , NEXT_VALUE NUMBER(12) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE DOCUMENT_NEXTVALUE
    ADD CONSTRAINT DOCUMENT_NEXTVALUEP1
PRIMARY KEY (DOCUMENT_NUMBER,PROPERTY_NAME)
/







-----------------------------------------------------------------------------
-- EPS_PROPOSAL
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'EPS_PROPOSAL';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE EPS_PROPOSAL CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE EPS_PROPOSAL
(
      POST_SUB_STATUS_CODE NUMBER(3)
        , SUBMIT_FLAG CHAR(1) default 'N' NOT NULL
        , IS_HIERARCHY CHAR(1) default 'N' NOT NULL
        , HIERARCHY_PROPOSAL_NUMBER VARCHAR2(12)
        , HIERARCHY_HASH_CODE NUMBER(10)
        , HIERARCHY_BUDGET_TYPE CHAR(1)
        , PROGRAM_ANNOUNCEMENT_NUMBER VARCHAR2(50)
        , PROGRAM_ANNOUNCEMENT_TITLE VARCHAR2(255)
        , ACTIVITY_TYPE_CODE VARCHAR2(3)
        , REQUESTED_START_DATE_INITIAL DATE
        , REQUESTED_START_DATE_TOTAL DATE
        , REQUESTED_END_DATE_INITIAL DATE
        , REQUESTED_END_DATE_TOTAL DATE
        , DURATION_MONTHS NUMBER(3)
        , NUMBER_OF_COPIES VARCHAR2(7)
        , DEADLINE_DATE DATE
        , DEADLINE_TYPE CHAR(1)
        , MAILING_ADDRESS_ID NUMBER(6)
        , MAIL_BY CHAR(1)
        , MAIL_TYPE VARCHAR2(3)
        , CARRIER_CODE_TYPE VARCHAR2(3)
        , CARRIER_CODE VARCHAR2(20)
        , MAIL_DESCRIPTION VARCHAR2(80)
        , MAIL_ACCOUNT_NUMBER VARCHAR2(9)
        , SUBCONTRACT_FLAG CHAR(1)
        , NARRATIVE_STATUS CHAR(1)
        , BUDGET_STATUS CHAR(1)
        , OWNED_BY_UNIT VARCHAR2(8)
        , CREATE_TIMESTAMP DATE
        , CREATE_USER VARCHAR2(60)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , NSF_CODE VARCHAR2(15)
        , PRIME_SPONSOR_CODE CHAR(6)
        , CFDA_NUMBER VARCHAR2(7)
        , AGENCY_PROGRAM_CODE VARCHAR2(50)
        , AGENCY_DIVISION_CODE VARCHAR2(50)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , DOCUMENT_NUMBER NUMBER(10) NOT NULL
        , PROPOSAL_NUMBER VARCHAR2(12)
        , PROPOSAL_TYPE_CODE VARCHAR2(3)
        , STATUS_CODE NUMBER(3)
        , CREATION_STATUS_CODE NUMBER(3)
        , BASE_PROPOSAL_NUMBER VARCHAR2(8)
        , CONTINUED_FROM VARCHAR2(8)
        , TEMPLATE_FLAG CHAR(1)
        , ORGANIZATION_ID VARCHAR2(8)
        , PERFORMING_ORGANIZATION_ID VARCHAR2(8)
        , CURRENT_ACCOUNT_NUMBER CHAR(7)
        , CURRENT_AWARD_NUMBER VARCHAR2(12)
        , TITLE VARCHAR2(150)
        , SPONSOR_CODE CHAR(6)
        , SPONSOR_PROPOSAL_NUMBER VARCHAR2(70)
        , INTR_COOP_ACTIVITIES_FLAG CHAR(1)
        , INTR_COUNTRY_LIST VARCHAR2(150)
        , OTHER_AGENCY_FLAG CHAR(1)
        , NOTICE_OF_OPPORTUNITY_CODE NUMBER(3)
        , HIERARCHY_ORIG_CHILD_PROP_NBR VARCHAR2(12)
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE EPS_PROPOSAL
    ADD CONSTRAINT EPS_PROPOSALP1
PRIMARY KEY (PROPOSAL_NUMBER)
/







-----------------------------------------------------------------------------
-- EPS_PROPOSAL_BUDGET_EXT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'EPS_PROPOSAL_BUDGET_EXT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE EPS_PROPOSAL_BUDGET_EXT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE EPS_PROPOSAL_BUDGET_EXT
(
      BUDGET_ID NUMBER(12)
        , FINAL_VERSION_FLAG VARCHAR2(1)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , DOCUMENT_NUMBER NUMBER(10)
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE EPS_PROPOSAL_BUDGET_EXT
    ADD CONSTRAINT EPS_PROPOSAL_BUDGET_EXTP1
PRIMARY KEY (BUDGET_ID)
/







-----------------------------------------------------------------------------
-- EPS_PROPOSAL_BUDGET_STATUS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'EPS_PROPOSAL_BUDGET_STATUS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE EPS_PROPOSAL_BUDGET_STATUS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE EPS_PROPOSAL_BUDGET_STATUS
(
      PROPOSAL_NUMBER VARCHAR2(12)
        , BUDGET_STATUS_CODE CHAR(1)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE EPS_PROPOSAL_BUDGET_STATUS
    ADD CONSTRAINT EPS_PROPOSAL_BUDGET_STATUSP1
PRIMARY KEY (PROPOSAL_NUMBER)
/







-----------------------------------------------------------------------------
-- EPS_PROPOSAL_DOCUMENT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'EPS_PROPOSAL_DOCUMENT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE EPS_PROPOSAL_DOCUMENT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE EPS_PROPOSAL_DOCUMENT
(
      DOCUMENT_NUMBER NUMBER(10)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE EPS_PROPOSAL_DOCUMENT
    ADD CONSTRAINT EPS_PROPOSAL_DOCUMENTP1
PRIMARY KEY (DOCUMENT_NUMBER)
/







-----------------------------------------------------------------------------
-- EPS_PROPOSAL_STATUS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'EPS_PROPOSAL_STATUS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE EPS_PROPOSAL_STATUS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE EPS_PROPOSAL_STATUS
(
      STATUS_CODE NUMBER(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
    

)
/

ALTER TABLE EPS_PROPOSAL_STATUS
    ADD CONSTRAINT EPS_PROPOSAL_STATUSP1
PRIMARY KEY (STATUS_CODE)
/







-----------------------------------------------------------------------------
-- EPS_PROP_ABSTRACT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'EPS_PROP_ABSTRACT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE EPS_PROP_ABSTRACT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE EPS_PROP_ABSTRACT
(
      TIMESTAMP_DISPLAY DATE
        , USER_DISPLAY VARCHAR2(60)
        , PROPOSAL_NUMBER VARCHAR2(12)
        , ABSTRACT_TYPE_CODE VARCHAR2(3)
        , ABSTRACT_DETAILS CLOB NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE EPS_PROP_ABSTRACT
    ADD CONSTRAINT EPS_PROP_ABSTRACTP1
PRIMARY KEY (PROPOSAL_NUMBER,ABSTRACT_TYPE_CODE)
/







-----------------------------------------------------------------------------
-- EPS_PROP_CHANGED_DATA
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'EPS_PROP_CHANGED_DATA';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE EPS_PROP_CHANGED_DATA CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE EPS_PROP_CHANGED_DATA
(
      PROPOSAL_NUMBER VARCHAR2(8)
        , COLUMN_NAME VARCHAR2(30)
        , CHANGE_NUMBER NUMBER(3)
        , CHANGED_VALUE VARCHAR2(200)
        , DISPLAY_VALUE VARCHAR2(200)
        , OLD_DISPLAY_VALUE VARCHAR2(200)
        , COMMENTS VARCHAR2(300)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE EPS_PROP_CHANGED_DATA
    ADD CONSTRAINT EPS_PROP_CHANGED_DATAP1
PRIMARY KEY (PROPOSAL_NUMBER,COLUMN_NAME,CHANGE_NUMBER)
/







-----------------------------------------------------------------------------
-- EPS_PROP_COLUMNS_TO_ALTER
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'EPS_PROP_COLUMNS_TO_ALTER';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE EPS_PROP_COLUMNS_TO_ALTER CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE EPS_PROP_COLUMNS_TO_ALTER
(
      LOOKUP_RETURN VARCHAR2(50)
        , COLUMN_NAME VARCHAR2(30)
        , COLUMN_LABEL VARCHAR2(30) NOT NULL
        , DATA_TYPE VARCHAR2(9) NOT NULL
        , DATA_LENGTH NUMBER(4)
        , HAS_LOOKUP CHAR(1) NOT NULL
        , LOOKUP_ARGUMENT VARCHAR2(100)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE EPS_PROP_COLUMNS_TO_ALTER
    ADD CONSTRAINT EPS_PROP_COLUMNS_TO_ALTERP1
PRIMARY KEY (COLUMN_NAME)
/







-----------------------------------------------------------------------------
-- EPS_PROP_CONG_DISTRICT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'EPS_PROP_CONG_DISTRICT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE EPS_PROP_CONG_DISTRICT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE EPS_PROP_CONG_DISTRICT
(
      PROPOSAL_NUMBER VARCHAR2(8) NOT NULL
        , SITE_NUMBER NUMBER(3) NOT NULL
        , CONG_DISTRICT VARCHAR2(50) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , CONG_DISTRICT_ID NUMBER(22)
    

)
/

ALTER TABLE EPS_PROP_CONG_DISTRICT
    ADD CONSTRAINT EPS_PROP_CONG_DISTRICTP1
PRIMARY KEY (CONG_DISTRICT_ID)
/







-----------------------------------------------------------------------------
-- EPS_PROP_COST_SHARING
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'EPS_PROP_COST_SHARING';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE EPS_PROP_COST_SHARING CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE EPS_PROP_COST_SHARING
(
      BUDGET_ID NUMBER(12)
        , PROPOSAL_NUMBER VARCHAR2(12)
        , BUDGET_VERSION_NUMBER NUMBER(3)
        , COST_SHARE_ID NUMBER(5)
        , FISCAL_YEAR NUMBER(4)
        , AMOUNT NUMBER(12,2)
        , COST_SHARING_PERCENTAGE NUMBER(5,2)
        , SOURCE_ACCOUNT VARCHAR2(32)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , HIERARCHY_PROPOSAL_NUMBER VARCHAR2(12)
        , HIDE_IN_HIERARCHY CHAR(1) default 'N' NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE EPS_PROP_COST_SHARING
    ADD CONSTRAINT EPS_PROP_COST_SHARINGP1
PRIMARY KEY (BUDGET_ID,COST_SHARE_ID)
/







-----------------------------------------------------------------------------
-- EPS_PROP_EXEMPT_NUMBER
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'EPS_PROP_EXEMPT_NUMBER';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE EPS_PROP_EXEMPT_NUMBER CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE EPS_PROP_EXEMPT_NUMBER
(
      PROPOSAL_NUMBER VARCHAR2(12)
        , SPECIAL_REVIEW_NUMBER NUMBER(3)
        , EXEMPTION_TYPE_CODE VARCHAR2(3)
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE EPS_PROP_EXEMPT_NUMBER
    ADD CONSTRAINT EPS_PROP_EXEMPT_NUMBERP1
PRIMARY KEY (PROPOSAL_NUMBER,SPECIAL_REVIEW_NUMBER,EXEMPTION_TYPE_CODE)
/







-----------------------------------------------------------------------------
-- EPS_PROP_IDC_RATE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'EPS_PROP_IDC_RATE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE EPS_PROP_IDC_RATE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE EPS_PROP_IDC_RATE
(
      BUDGET_ID NUMBER(12)
        , BUDGET_VERSION_NUMBER NUMBER(3)
        , UNRECOVERED_FNA_ID NUMBER(5)
        , FISCAL_YEAR NUMBER(4)
        , UNDERRECOVERY_OF_IDC NUMBER(12,2)
        , APPLICABLE_IDC_RATE NUMBER(6,3)
        , ON_CAMPUS_FLAG CHAR(1)
        , SOURCE_ACCOUNT VARCHAR2(32)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , PROPOSAL_NUMBER VARCHAR2(12)
        , HIERARCHY_PROPOSAL_NUMBER VARCHAR2(12)
        , HIDE_IN_HIERARCHY CHAR(1) default 'N' NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE EPS_PROP_IDC_RATE
    ADD CONSTRAINT EPS_PROP_IDC_RATEP1
PRIMARY KEY (BUDGET_ID,UNRECOVERED_FNA_ID)
/







-----------------------------------------------------------------------------
-- EPS_PROP_LA_RATES
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'EPS_PROP_LA_RATES';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE EPS_PROP_LA_RATES CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE EPS_PROP_LA_RATES
(
      BUDGET_ID NUMBER(12)
        , PROPOSAL_NUMBER VARCHAR2(8)
        , VERSION_NUMBER NUMBER(3)
        , RATE_TYPE_CODE VARCHAR2(3)
        , FISCAL_YEAR CHAR(4)
        , ON_OFF_CAMPUS_FLAG CHAR(1)
        , START_DATE DATE
        , APPLICABLE_RATE NUMBER(5,2) NOT NULL
        , INSTITUTE_RATE NUMBER(5,2)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , RATE_CLASS_CODE VARCHAR2(3)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE EPS_PROP_LA_RATES
    ADD CONSTRAINT EPS_PROP_LA_RATESP1
PRIMARY KEY (BUDGET_ID,RATE_TYPE_CODE,FISCAL_YEAR,ON_OFF_CAMPUS_FLAG,START_DATE,RATE_CLASS_CODE)
/


CREATE INDEX PK_EPS_PROP_LA_RATES_KRA 
  ON EPS_PROP_LA_RATES 
  (RATE_TYPE_CODE, FISCAL_YEAR, START_DATE, ON_OFF_CAMPUS_FLAG, PROPOSAL_NUMBER, VERSION_NUMBER, RATE_CLASS_CODE)
/





-----------------------------------------------------------------------------
-- EPS_PROP_LOCATION
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'EPS_PROP_LOCATION';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE EPS_PROP_LOCATION CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE EPS_PROP_LOCATION
(
      PROPOSAL_NUMBER VARCHAR2(12)
        , LOCATION_SEQUENCE_NUMBER NUMBER(3)
        , LOCATION VARCHAR2(60) NOT NULL
        , ROLODEX_ID NUMBER(6)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE EPS_PROP_LOCATION
    ADD CONSTRAINT EPS_PROP_LOCATIONP1
PRIMARY KEY (PROPOSAL_NUMBER,LOCATION_SEQUENCE_NUMBER)
/







-----------------------------------------------------------------------------
-- EPS_PROP_PERSON
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'EPS_PROP_PERSON';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE EPS_PROP_PERSON CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE EPS_PROP_PERSON
(
      HIERARCHY_PROPOSAL_NUMBER VARCHAR2(12)
        , HIDE_IN_HIERARCHY CHAR(1) default 'N' NOT NULL
        , PROPOSAL_NUMBER VARCHAR2(12)
        , PROP_PERSON_NUMBER NUMBER(12)
        , PROP_PERSON_ROLE_ID VARCHAR2(12)
        , PERSON_ID VARCHAR2(40)
        , ROLODEX_ID NUMBER(6)
        , SSN VARCHAR2(9)
        , LAST_NAME VARCHAR2(30)
        , FIRST_NAME VARCHAR2(30)
        , MIDDLE_NAME VARCHAR2(30)
        , FULL_NAME VARCHAR2(90)
        , PRIOR_NAME VARCHAR2(30)
        , USER_NAME VARCHAR2(60)
        , EMAIL_ADDRESS VARCHAR2(60)
        , DATE_OF_BIRTH DATE
        , AGE NUMBER(3)
        , AGE_BY_FISCAL_YEAR NUMBER(3)
        , GENDER VARCHAR2(30)
        , RACE VARCHAR2(30)
        , EDUCATION_LEVEL VARCHAR2(30)
        , DEGREE VARCHAR2(11)
        , MAJOR VARCHAR2(30)
        , IS_HANDICAPPED CHAR(1)
        , HANDICAP_TYPE VARCHAR2(30)
        , IS_VETERAN CHAR(1)
        , VETERAN_TYPE VARCHAR2(30)
        , VISA_CODE VARCHAR2(20)
        , VISA_TYPE VARCHAR2(30)
        , VISA_RENEWAL_DATE DATE
        , HAS_VISA CHAR(1)
        , OFFICE_LOCATION VARCHAR2(30)
        , OFFICE_PHONE VARCHAR2(20)
        , SECONDRY_OFFICE_LOCATION VARCHAR2(30)
        , SECONDRY_OFFICE_PHONE VARCHAR2(20)
        , SCHOOL VARCHAR2(50)
        , YEAR_GRADUATED VARCHAR2(30)
        , DIRECTORY_DEPARTMENT VARCHAR2(30)
        , SALUTATION VARCHAR2(30)
        , COUNTRY_OF_CITIZENSHIP VARCHAR2(30)
        , PRIMARY_TITLE VARCHAR2(51)
        , DIRECTORY_TITLE VARCHAR2(50)
        , HOME_UNIT VARCHAR2(8)
        , IS_FACULTY CHAR(1)
        , IS_GRADUATE_STUDENT_STAFF CHAR(1)
        , IS_RESEARCH_STAFF CHAR(1)
        , IS_SERVICE_STAFF CHAR(1)
        , IS_SUPPORT_STAFF CHAR(1)
        , IS_OTHER_ACCADEMIC_GROUP CHAR(1)
        , IS_MEDICAL_STAFF CHAR(1)
        , VACATION_ACCURAL CHAR(1)
        , IS_ON_SABBATICAL CHAR(1)
        , ID_PROVIDED VARCHAR2(30)
        , ID_VERIFIED VARCHAR2(30)
        , ADDRESS_LINE_1 VARCHAR2(80)
        , ADDRESS_LINE_2 VARCHAR2(80)
        , ADDRESS_LINE_3 VARCHAR2(80)
        , CITY VARCHAR2(30)
        , COUNTY VARCHAR2(30)
        , STATE VARCHAR2(30)
        , POSTAL_CODE VARCHAR2(15)
        , COUNTRY_CODE CHAR(3)
        , FAX_NUMBER VARCHAR2(20)
        , PAGER_NUMBER VARCHAR2(20)
        , MOBILE_PHONE_NUMBER VARCHAR2(20)
        , ERA_COMMONS_USER_NAME VARCHAR2(20)
        , CONFLICT_OF_INTEREST_FLAG CHAR(1)
        , PERCENTAGE_EFFORT NUMBER(5,2)
        , FEDR_DEBR_FLAG CHAR(1)
        , FEDR_DELQ_FLAG CHAR(1)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OPT_IN_UNIT_STATUS CHAR(1) default 'Y' NOT NULL
        , IS_OSC CHAR(1)
        , OPT_IN_CERTIFICATION_STATUS CHAR(1) default 'Y' NOT NULL
        , ORDINAL_POSITION NUMBER(4)
        , PROJECT_ROLE VARCHAR2(60)
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE EPS_PROP_PERSON
    ADD CONSTRAINT EPS_PROP_PERSONP1
PRIMARY KEY (PROPOSAL_NUMBER,PROP_PERSON_NUMBER,PROP_PERSON_ROLE_ID)
/







-----------------------------------------------------------------------------
-- EPS_PROP_PERSON_BIO
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'EPS_PROP_PERSON_BIO';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE EPS_PROP_PERSON_BIO CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE EPS_PROP_PERSON_BIO
(
      PROPOSAL_NUMBER VARCHAR2(12)
        , PROP_PERSON_NUMBER NUMBER(12)
        , BIO_NUMBER NUMBER(3)
        , PERSON_ID VARCHAR2(40)
        , ROLODEX_ID NUMBER(6)
        , DESCRIPTION VARCHAR2(200)
        , DOCUMENT_TYPE_CODE VARCHAR2(3)
        , FILE_NAME VARCHAR2(150)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE EPS_PROP_PERSON_BIO
    ADD CONSTRAINT EPS_PROP_PERSON_BIOP1
PRIMARY KEY (PROPOSAL_NUMBER,PROP_PERSON_NUMBER,BIO_NUMBER)
/







-----------------------------------------------------------------------------
-- EPS_PROP_PERSON_BIO_ATTACHMENT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'EPS_PROP_PERSON_BIO_ATTACHMENT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE EPS_PROP_PERSON_BIO_ATTACHMENT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE EPS_PROP_PERSON_BIO_ATTACHMENT
(
      PROPOSAL_NUMBER VARCHAR2(12)
        , PROP_PERSON_NUMBER NUMBER(12)
        , BIO_NUMBER NUMBER(3)
        , BIO_DATA BLOB
        , FILE_NAME VARCHAR2(150)
        , CONTENT_TYPE VARCHAR2(250)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE EPS_PROP_PERSON_BIO_ATTACHMENT
    ADD CONSTRAINT EPS_PROP_PERSON_BIO_ATTACHMP1
PRIMARY KEY (PROPOSAL_NUMBER,PROP_PERSON_NUMBER,BIO_NUMBER)
/







-----------------------------------------------------------------------------
-- EPS_PROP_PERSON_DEGREE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'EPS_PROP_PERSON_DEGREE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE EPS_PROP_PERSON_DEGREE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE EPS_PROP_PERSON_DEGREE
(
      PROPOSAL_NUMBER VARCHAR2(12)
        , PROP_PERSON_NUMBER NUMBER(12)
        , DEGREE_SEQUENCE_NUMBER NUMBER(3)
        , GRADUATION_YEAR VARCHAR2(4)
        , DEGREE_CODE VARCHAR2(6)
        , DEGREE VARCHAR2(80)
        , FIELD_OF_STUDY VARCHAR2(80)
        , SPECIALIZATION VARCHAR2(80)
        , SCHOOL VARCHAR2(50)
        , SCHOOL_ID_CODE VARCHAR2(3)
        , SCHOOL_ID VARCHAR2(20)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE EPS_PROP_PERSON_DEGREE
    ADD CONSTRAINT EPS_PROP_PERSON_DEGREEP1
PRIMARY KEY (PROPOSAL_NUMBER,PROP_PERSON_NUMBER,DEGREE_SEQUENCE_NUMBER)
/







-----------------------------------------------------------------------------
-- EPS_PROP_PERSON_ROLE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'EPS_PROP_PERSON_ROLE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE EPS_PROP_PERSON_ROLE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE EPS_PROP_PERSON_ROLE
(
      UNIT_DETAILS_REQUIRED CHAR(1) default 'Y' NOT NULL
        , PROP_PERSON_ROLE_ID VARCHAR2(12)
        , DESCRIPTION VARCHAR2(25) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , CERTIFICATION_REQUIRED CHAR(1) default 'Y' NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE EPS_PROP_PERSON_ROLE
    ADD CONSTRAINT EPS_PROP_PERSON_ROLEP1
PRIMARY KEY (PROP_PERSON_ROLE_ID)
/







-----------------------------------------------------------------------------
-- EPS_PROP_PERSON_UNITS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'EPS_PROP_PERSON_UNITS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE EPS_PROP_PERSON_UNITS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE EPS_PROP_PERSON_UNITS
(
      PROPOSAL_NUMBER VARCHAR2(12)
        , PROP_PERSON_NUMBER NUMBER(12)
        , UNIT_NUMBER VARCHAR2(8)
        , LEAD_UNIT_FLAG CHAR(1)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE EPS_PROP_PERSON_UNITS
    ADD CONSTRAINT EPS_PROP_PERSON_UNITSP1
PRIMARY KEY (PROPOSAL_NUMBER,PROP_PERSON_NUMBER,UNIT_NUMBER)
/







-----------------------------------------------------------------------------
-- EPS_PROP_PERS_YNQ
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'EPS_PROP_PERS_YNQ';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE EPS_PROP_PERS_YNQ CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE EPS_PROP_PERS_YNQ
(
      PROPOSAL_NUMBER VARCHAR2(12)
        , PROP_PERSON_NUMBER NUMBER(12)
        , QUESTION_ID VARCHAR2(4)
        , ANSWER CHAR(1)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE EPS_PROP_PERS_YNQ
    ADD CONSTRAINT EPS_PROP_PERS_YNQP1
PRIMARY KEY (PROPOSAL_NUMBER,PROP_PERSON_NUMBER,QUESTION_ID)
/







-----------------------------------------------------------------------------
-- EPS_PROP_PER_CREDIT_SPLIT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'EPS_PROP_PER_CREDIT_SPLIT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE EPS_PROP_PER_CREDIT_SPLIT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE EPS_PROP_PER_CREDIT_SPLIT
(
      PROPOSAL_NUMBER VARCHAR2(12)
        , INV_CREDIT_TYPE_CODE VARCHAR2(3)
        , PROP_PERSON_NUMBER NUMBER(12)
        , CREDIT NUMBER(5,2)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE EPS_PROP_PER_CREDIT_SPLIT
    ADD CONSTRAINT EPS_PROP_PER_CREDIT_SPLITP1
PRIMARY KEY (PROPOSAL_NUMBER,INV_CREDIT_TYPE_CODE,PROP_PERSON_NUMBER)
/







-----------------------------------------------------------------------------
-- EPS_PROP_PER_DOC_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'EPS_PROP_PER_DOC_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE EPS_PROP_PER_DOC_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE EPS_PROP_PER_DOC_TYPE
(
      DOCUMENT_TYPE_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE EPS_PROP_PER_DOC_TYPE
    ADD CONSTRAINT EPS_PROP_PER_DOC_TYPEP1
PRIMARY KEY (DOCUMENT_TYPE_CODE)
/







-----------------------------------------------------------------------------
-- EPS_PROP_POST_SUB_STATUS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'EPS_PROP_POST_SUB_STATUS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE EPS_PROP_POST_SUB_STATUS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE EPS_PROP_POST_SUB_STATUS
(
      STATUS_CODE NUMBER(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , DEFINITION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE EPS_PROP_POST_SUB_STATUS
    ADD CONSTRAINT EPS_PROP_POST_SUB_STATUSP1
PRIMARY KEY (STATUS_CODE)
/







-----------------------------------------------------------------------------
-- EPS_PROP_RATES
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'EPS_PROP_RATES';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE EPS_PROP_RATES CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE EPS_PROP_RATES
(
      BUDGET_ID NUMBER(12)
        , PROPOSAL_NUMBER VARCHAR2(12)
        , VERSION_NUMBER NUMBER(3)
        , RATE_CLASS_CODE VARCHAR2(3)
        , RATE_TYPE_CODE VARCHAR2(3)
        , FISCAL_YEAR CHAR(4)
        , ON_OFF_CAMPUS_FLAG CHAR(1)
        , ACTIVITY_TYPE_CODE VARCHAR2(3) NOT NULL
        , START_DATE DATE
        , APPLICABLE_RATE NUMBER(5,2) NOT NULL
        , INSTITUTE_RATE NUMBER(5,2)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE EPS_PROP_RATES
    ADD CONSTRAINT EPS_PROP_RATESP1
PRIMARY KEY (BUDGET_ID,RATE_CLASS_CODE,RATE_TYPE_CODE,FISCAL_YEAR,ON_OFF_CAMPUS_FLAG,START_DATE)
/


CREATE INDEX PK_EPS_PROP_RATES_KRA 
  ON EPS_PROP_RATES 
  (PROPOSAL_NUMBER, VERSION_NUMBER, RATE_CLASS_CODE, RATE_TYPE_CODE, FISCAL_YEAR, START_DATE, ON_OFF_CAMPUS_FLAG)
/





-----------------------------------------------------------------------------
-- EPS_PROP_SCIENCE_KEYWORD
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'EPS_PROP_SCIENCE_KEYWORD';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE EPS_PROP_SCIENCE_KEYWORD CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE EPS_PROP_SCIENCE_KEYWORD
(
      HIERARCHY_PROPOSAL_NUMBER VARCHAR2(12)
        , HIDE_IN_HIERARCHY CHAR(1) default 'N' NOT NULL
        , PROPOSAL_NUMBER VARCHAR2(12)
        , SCIENCE_KEYWORD_CODE VARCHAR2(3)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE EPS_PROP_SCIENCE_KEYWORD
    ADD CONSTRAINT EPS_PROP_SCIENCE_KEYWORDP1
PRIMARY KEY (PROPOSAL_NUMBER,SCIENCE_KEYWORD_CODE)
/







-----------------------------------------------------------------------------
-- EPS_PROP_SITES
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'EPS_PROP_SITES';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE EPS_PROP_SITES CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE EPS_PROP_SITES
(
      PROPOSAL_NUMBER VARCHAR2(8)
        , SITE_NUMBER NUMBER(3)
        , LOCATION_NAME VARCHAR2(60)
        , LOCATION_TYPE_CODE NUMBER(3) NOT NULL
        , ORGANIZATION_ID VARCHAR2(8)
        , ROLODEX_ID NUMBER(6)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE EPS_PROP_SITES
    ADD CONSTRAINT EPS_PROP_SITESP1
PRIMARY KEY (PROPOSAL_NUMBER,SITE_NUMBER)
/







-----------------------------------------------------------------------------
-- EPS_PROP_SPECIAL_REVIEW
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'EPS_PROP_SPECIAL_REVIEW';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE EPS_PROP_SPECIAL_REVIEW CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE EPS_PROP_SPECIAL_REVIEW
(
      EXPIRATION_DATE DATE
        , HIERARCHY_PROPOSAL_NUMBER VARCHAR2(12)
        , HIDE_IN_HIERARCHY CHAR(1) default 'N' NOT NULL
        , PROPOSAL_NUMBER VARCHAR2(12)
        , SPECIAL_REVIEW_NUMBER NUMBER(3)
        , SPECIAL_REVIEW_CODE VARCHAR2(3) NOT NULL
        , APPROVAL_TYPE_CODE VARCHAR2(3) NOT NULL
        , PROTOCOL_NUMBER VARCHAR2(20)
        , APPLICATION_DATE DATE
        , APPROVAL_DATE DATE
        , COMMENTS CLOB
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE EPS_PROP_SPECIAL_REVIEW
    ADD CONSTRAINT EPS_PROP_SPECIAL_REVIEWP1
PRIMARY KEY (PROPOSAL_NUMBER,SPECIAL_REVIEW_NUMBER)
/







-----------------------------------------------------------------------------
-- EPS_PROP_UNIT_CREDIT_SPLIT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'EPS_PROP_UNIT_CREDIT_SPLIT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE EPS_PROP_UNIT_CREDIT_SPLIT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE EPS_PROP_UNIT_CREDIT_SPLIT
(
      PROPOSAL_NUMBER VARCHAR2(12)
        , INV_CREDIT_TYPE_CODE VARCHAR2(3)
        , PROP_PERSON_NUMBER NUMBER(12)
        , UNIT_NUMBER VARCHAR2(8)
        , CREDIT NUMBER(5,2)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE EPS_PROP_UNIT_CREDIT_SPLIT
    ADD CONSTRAINT EPS_PROP_UNIT_CREDIT_SPLITP1
PRIMARY KEY (PROPOSAL_NUMBER,INV_CREDIT_TYPE_CODE,PROP_PERSON_NUMBER,UNIT_NUMBER)
/







-----------------------------------------------------------------------------
-- EPS_PROP_USER_ROLES
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'EPS_PROP_USER_ROLES';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE EPS_PROP_USER_ROLES CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE EPS_PROP_USER_ROLES
(
      PROPOSAL_NUMBER VARCHAR2(12)
        , USER_ID VARCHAR2(40)
        , ROLE_ID NUMBER(5)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE EPS_PROP_USER_ROLES
    ADD CONSTRAINT EPS_PROP_USER_ROLESP1
PRIMARY KEY (PROPOSAL_NUMBER,USER_ID,ROLE_ID)
/







-----------------------------------------------------------------------------
-- EPS_PROP_YNQ
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'EPS_PROP_YNQ';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE EPS_PROP_YNQ CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE EPS_PROP_YNQ
(
      PROPOSAL_NUMBER VARCHAR2(12)
        , QUESTION_ID VARCHAR2(4)
        , ANSWER CHAR(1)
        , EXPLANATION CLOB
        , REVIEW_DATE DATE
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE EPS_PROP_YNQ
    ADD CONSTRAINT EPS_PROP_YNQP1
PRIMARY KEY (PROPOSAL_NUMBER,QUESTION_ID)
/







-----------------------------------------------------------------------------
-- EXEMPTION_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'EXEMPTION_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE EXEMPTION_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE EXEMPTION_TYPE
(
      EXEMPTION_TYPE_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , DETAILED_DESCRIPTION CLOB
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE EXEMPTION_TYPE
    ADD CONSTRAINT EXEMPTION_TYPEP1
PRIMARY KEY (EXEMPTION_TYPE_CODE)
/







-----------------------------------------------------------------------------
-- EXEMPT_STUDIES_CHECKLIST
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'EXEMPT_STUDIES_CHECKLIST';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE EXEMPT_STUDIES_CHECKLIST CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE EXEMPT_STUDIES_CHECKLIST
(
      EXEMPT_STUDIES_CHECKLIST_CODE VARCHAR2(4)
        , DESCRIPTION VARCHAR2(2000) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE EXEMPT_STUDIES_CHECKLIST
    ADD CONSTRAINT EXEMPT_STUDIES_CHECKLISTP1
PRIMARY KEY (EXEMPT_STUDIES_CHECKLIST_CODE)
/







-----------------------------------------------------------------------------
-- EXPEDITED_REVIEW_CHECKLIST
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'EXPEDITED_REVIEW_CHECKLIST';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE EXPEDITED_REVIEW_CHECKLIST CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE EXPEDITED_REVIEW_CHECKLIST
(
      EXPEDITED_REV_CHKLST_CODE VARCHAR2(4)
        , DESCRIPTION VARCHAR2(2000) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE EXPEDITED_REVIEW_CHECKLIST
    ADD CONSTRAINT EXPEDITED_REVIEW_CHECKLISTP1
PRIMARY KEY (EXPEDITED_REV_CHKLST_CODE)
/







-----------------------------------------------------------------------------
-- FP_DOC_TYPE_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'FP_DOC_TYPE_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE FP_DOC_TYPE_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE FP_DOC_TYPE_T
(
      FDOC_TYP_CD VARCHAR2(4)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , FDOC_NM VARCHAR2(40)
        , FDOC_TYP_ACTIVE_CD VARCHAR2(1)
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE FP_DOC_TYPE_T
    ADD CONSTRAINT FP_DOC_TYPE_TP1
PRIMARY KEY (FDOC_TYP_CD)
/







-----------------------------------------------------------------------------
-- FREQUENCY
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'FREQUENCY';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE FREQUENCY CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE FREQUENCY
(
      VER_NBR NUMBER(8) default 1 NOT NULL
        , FREQUENCY_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , NUMBER_OF_DAYS NUMBER(3)
        , NUMBER_OF_MONTHS NUMBER(2)
        , REPEAT_FLAG CHAR(1) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , ADVANCE_NUMBER_OF_DAYS NUMBER(3)
        , ADVANCE_NUMBER_OF_MONTHS NUMBER(2)
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE FREQUENCY
    ADD CONSTRAINT FREQUENCYP1
PRIMARY KEY (FREQUENCY_CODE)
/







-----------------------------------------------------------------------------
-- FREQUENCY_BASE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'FREQUENCY_BASE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE FREQUENCY_BASE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE FREQUENCY_BASE
(
      VER_NBR NUMBER(8) default 1 NOT NULL
        , FREQUENCY_BASE_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE FREQUENCY_BASE
    ADD CONSTRAINT FREQUENCY_BASEP1
PRIMARY KEY (FREQUENCY_BASE_CODE)
/







-----------------------------------------------------------------------------
-- FUNDING_SOURCE_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'FUNDING_SOURCE_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE FUNDING_SOURCE_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE FUNDING_SOURCE_TYPE
(
      FUNDING_SOURCE_TYPE_CODE NUMBER(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , FUNDING_SOURCE_TYPE_FLAG VARCHAR2(1)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE FUNDING_SOURCE_TYPE
    ADD CONSTRAINT FUNDING_SOURCE_TYPEP1
PRIMARY KEY (FUNDING_SOURCE_TYPE_CODE)
/







-----------------------------------------------------------------------------
-- GROUP_TYPES
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'GROUP_TYPES';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE GROUP_TYPES CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE GROUP_TYPES
(
      GROUP_TYPE_CODE NUMBER(3)
        , GROUP_NAME VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE GROUP_TYPES
    ADD CONSTRAINT GROUP_TYPESP1
PRIMARY KEY (GROUP_TYPE_CODE)
/







-----------------------------------------------------------------------------
-- IDC_RATE_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'IDC_RATE_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE IDC_RATE_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE IDC_RATE_TYPE
(
      IDC_RATE_TYPE_CODE NUMBER(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE IDC_RATE_TYPE
    ADD CONSTRAINT IDC_RATE_TYPEP1
PRIMARY KEY (IDC_RATE_TYPE_CODE)
/







-----------------------------------------------------------------------------
-- INSTITUTE_LA_RATES
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'INSTITUTE_LA_RATES';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE INSTITUTE_LA_RATES CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE INSTITUTE_LA_RATES
(
      ACTIVE_FLAG CHAR(1) default 'Y' NOT NULL
        , UNIT_NUMBER VARCHAR2(8)
        , RATE_TYPE_CODE VARCHAR2(3)
        , FISCAL_YEAR CHAR(4)
        , START_DATE DATE
        , ON_OFF_CAMPUS_FLAG CHAR(1)
        , RATE NUMBER(5,2) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , RATE_CLASS_CODE VARCHAR2(3)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE INSTITUTE_LA_RATES
    ADD CONSTRAINT INSTITUTE_LA_RATESP1
PRIMARY KEY (UNIT_NUMBER,RATE_TYPE_CODE,FISCAL_YEAR,START_DATE,ON_OFF_CAMPUS_FLAG,RATE_CLASS_CODE)
/







-----------------------------------------------------------------------------
-- INSTITUTE_PROPOSAL_DOCUMENT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'INSTITUTE_PROPOSAL_DOCUMENT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE INSTITUTE_PROPOSAL_DOCUMENT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE INSTITUTE_PROPOSAL_DOCUMENT
(
      DOCUMENT_NUMBER VARCHAR2(10)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE INSTITUTE_PROPOSAL_DOCUMENT
    ADD CONSTRAINT INSTITUTE_PROPOSAL_DOCUMENTP1
PRIMARY KEY (DOCUMENT_NUMBER)
/







-----------------------------------------------------------------------------
-- INSTITUTE_RATES
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'INSTITUTE_RATES';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE INSTITUTE_RATES CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE INSTITUTE_RATES
(
      ACTIVE_FLAG CHAR(1) default 'Y' NOT NULL
        , RATE_CLASS_CODE VARCHAR2(3)
        , RATE_TYPE_CODE VARCHAR2(3)
        , ACTIVITY_TYPE_CODE VARCHAR2(3)
        , FISCAL_YEAR CHAR(4)
        , START_DATE DATE
        , ON_OFF_CAMPUS_FLAG CHAR(1)
        , RATE NUMBER(5,2) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , UNIT_NUMBER VARCHAR2(8)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE INSTITUTE_RATES
    ADD CONSTRAINT INSTITUTE_RATESP1
PRIMARY KEY (RATE_CLASS_CODE,RATE_TYPE_CODE,ACTIVITY_TYPE_CODE,FISCAL_YEAR,START_DATE,ON_OFF_CAMPUS_FLAG,UNIT_NUMBER)
/







-----------------------------------------------------------------------------
-- INV_CREDIT_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'INV_CREDIT_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE INV_CREDIT_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE INV_CREDIT_TYPE
(
      INV_CREDIT_TYPE_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(300) NOT NULL
        , ADDS_TO_HUNDRED CHAR(1) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , ACTIVE_FLAG CHAR(1)
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE INV_CREDIT_TYPE
    ADD CONSTRAINT INV_CREDIT_TYPEP1
PRIMARY KEY (INV_CREDIT_TYPE_CODE)
/







-----------------------------------------------------------------------------
-- IP_REVIEW
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'IP_REVIEW';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE IP_REVIEW CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE IP_REVIEW
(
      IP_REVIEW_ID NUMBER(12)
        , PROPOSAL_NUMBER VARCHAR2(8) NOT NULL
        , SEQUENCE_NUMBER NUMBER(4) NOT NULL
        , IP_REVIEW_REQ_TYPE_CODE NUMBER(3)
        , REVIEW_SUBMISSION_DATE DATE
        , REVIEW_RECEIVE_DATE DATE
        , REVIEW_RESULT_CODE NUMBER(3)
        , IP_REVIEWER VARCHAR2(40)
        , IP_REVIEW_SEQUENCE_STATUS VARCHAR2(10) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE IP_REVIEW
    ADD CONSTRAINT IP_REVIEWP1
PRIMARY KEY (IP_REVIEW_ID)
/







-----------------------------------------------------------------------------
-- IP_REVIEW_ACTIVITY_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'IP_REVIEW_ACTIVITY_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE IP_REVIEW_ACTIVITY_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE IP_REVIEW_ACTIVITY_TYPE
(
      IP_REVIEW_ACTIVITY_TYPE_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE IP_REVIEW_ACTIVITY_TYPE
    ADD CONSTRAINT IP_REVIEW_ACTIVITY_TYPEP1
PRIMARY KEY (IP_REVIEW_ACTIVITY_TYPE_CODE)
/







-----------------------------------------------------------------------------
-- IP_REVIEW_REQ_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'IP_REVIEW_REQ_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE IP_REVIEW_REQ_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE IP_REVIEW_REQ_TYPE
(
      IP_REVIEW_REQ_TYPE_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE IP_REVIEW_REQ_TYPE
    ADD CONSTRAINT IP_REVIEW_REQ_TYPEP1
PRIMARY KEY (IP_REVIEW_REQ_TYPE_CODE)
/







-----------------------------------------------------------------------------
-- IP_REVIEW_RESULT_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'IP_REVIEW_RESULT_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE IP_REVIEW_RESULT_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE IP_REVIEW_RESULT_TYPE
(
      IP_REVIEW_RESULT_TYPE_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE IP_REVIEW_RESULT_TYPE
    ADD CONSTRAINT IP_REVIEW_RESULT_TYPEP1
PRIMARY KEY (IP_REVIEW_RESULT_TYPE_CODE)
/







-----------------------------------------------------------------------------
-- JOB_CODE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'JOB_CODE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE JOB_CODE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE JOB_CODE
(
      JOB_CODE VARCHAR2(6)
        , JOB_TITLE VARCHAR2(50) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE JOB_CODE
    ADD CONSTRAINT JOB_CODEP1
PRIMARY KEY (JOB_CODE)
/







-----------------------------------------------------------------------------
-- KC_COUNTRY_CODES_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KC_COUNTRY_CODES_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KC_COUNTRY_CODES_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KC_COUNTRY_CODES_T
(
      ID NUMBER(8)
        , COUNTRY_NAME VARCHAR2(50) NOT NULL
        , TWO_CHAR_CODE VARCHAR2(2) NOT NULL
        , THREE_CHAR_CODE VARCHAR2(3) NOT NULL
        , VER_NBR VARCHAR2(8) NOT NULL
        , UPDATE_USER VARCHAR2(60)
        , UPDATE_TIMESTAMP DATE
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE KC_COUNTRY_CODES_T
    ADD CONSTRAINT KC_COUNTRY_CODES_TP1
PRIMARY KEY (ID)
/


CREATE INDEX KC_COUNTRY_CODES_T_UK1 
  ON KC_COUNTRY_CODES_T 
  (TWO_CHAR_CODE)
/
CREATE INDEX KC_COUNTRY_CODES_T_UK2 
  ON KC_COUNTRY_CODES_T 
  (THREE_CHAR_CODE)
/





-----------------------------------------------------------------------------
-- KRA_USER
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRA_USER';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRA_USER CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRA_USER
(
      USER_ID VARCHAR2(10)
        , USER_NAME VARCHAR2(90)
        , NON_MIT_PERSON_FLAG CHAR(1)
        , PERSON_ID VARCHAR2(40)
        , USER_TYPE CHAR(1)
        , UNIT_NUMBER VARCHAR2(8)
        , STATUS CHAR(1)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE KRA_USER
    ADD CONSTRAINT KRA_USERP1
PRIMARY KEY (USER_ID)
/







-----------------------------------------------------------------------------
-- KREN_CHNL_PRODCR_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREN_CHNL_PRODCR_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREN_CHNL_PRODCR_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREN_CHNL_PRODCR_T
(
      CHNL_ID NUMBER(8)
        , PRODCR_ID NUMBER(8)
    

)
/

ALTER TABLE KREN_CHNL_PRODCR_T
    ADD CONSTRAINT KREN_CHNL_PRODCR_TP1
PRIMARY KEY (CHNL_ID,PRODCR_ID)
/


CREATE INDEX KREN_CHNL_PRODCR_TI1 
  ON KREN_CHNL_PRODCR_T 
  (CHNL_ID)
/
CREATE INDEX KREN_CHNL_PRODCR_TI2 
  ON KREN_CHNL_PRODCR_T 
  (PRODCR_ID)
/





-----------------------------------------------------------------------------
-- KREN_CHNL_SUBSCRP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREN_CHNL_SUBSCRP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREN_CHNL_SUBSCRP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREN_CHNL_SUBSCRP_T
(
      CHNL_SUBSCRP_ID NUMBER(8)
        , CHNL_ID NUMBER(8) NOT NULL
        , PRNCPL_ID VARCHAR2(40) NOT NULL
    

)
/

ALTER TABLE KREN_CHNL_SUBSCRP_T
    ADD CONSTRAINT KREN_CHNL_SUBSCRP_TP1
PRIMARY KEY (CHNL_SUBSCRP_ID)
/


CREATE INDEX KREN_CHNL_SUBSCRP_TC0 
  ON KREN_CHNL_SUBSCRP_T 
  (CHNL_ID, PRNCPL_ID)
/
CREATE INDEX KREN_CHNL_SUBSCRP_TI1 
  ON KREN_CHNL_SUBSCRP_T 
  (CHNL_ID)
/





-----------------------------------------------------------------------------
-- KREN_CHNL_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREN_CHNL_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREN_CHNL_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREN_CHNL_T
(
      CHNL_ID NUMBER(8)
        , NM VARCHAR2(200) NOT NULL
        , DESC_TXT VARCHAR2(4000) NOT NULL
        , SUBSCRB_IND CHAR(1) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE KREN_CHNL_T
    ADD CONSTRAINT KREN_CHNL_TP1
PRIMARY KEY (CHNL_ID)
/


CREATE INDEX KREN_CHNL_TC0 
  ON KREN_CHNL_T 
  (NM)
/





-----------------------------------------------------------------------------
-- KREN_CNTNT_TYP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREN_CNTNT_TYP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREN_CNTNT_TYP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREN_CNTNT_TYP_T
(
      CNTNT_TYP_ID NUMBER(8)
        , NM VARCHAR2(200) NOT NULL
        , CUR_IND CHAR(1) default 'T' NOT NULL
        , CNTNT_TYP_VER_NBR NUMBER(8) default 0 NOT NULL
        , DESC_TXT VARCHAR2(1000) NOT NULL
        , NMSPC_CD VARCHAR2(1000) NOT NULL
        , XSD CLOB NOT NULL
        , XSL CLOB NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE KREN_CNTNT_TYP_T
    ADD CONSTRAINT KREN_CNTNT_TYP_TP1
PRIMARY KEY (CNTNT_TYP_ID)
/


CREATE INDEX KREN_CONTENT_TYPE_UK1 
  ON KREN_CNTNT_TYP_T 
  (NM, CNTNT_TYP_VER_NBR)
/





-----------------------------------------------------------------------------
-- KREN_MSG_DELIV_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREN_MSG_DELIV_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREN_MSG_DELIV_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREN_MSG_DELIV_T
(
      MSG_DELIV_ID NUMBER(8)
        , MSG_ID NUMBER(8) NOT NULL
        , TYP_NM VARCHAR2(200) NOT NULL
        , SYS_ID VARCHAR2(300)
        , STAT_CD VARCHAR2(15) NOT NULL
        , PROC_CNT NUMBER(4) default 0 NOT NULL
        , LOCKD_DTTM TIMESTAMP
        , VER_NBR NUMBER(8) default 0 NOT NULL
    

)
/

ALTER TABLE KREN_MSG_DELIV_T
    ADD CONSTRAINT KREN_MSG_DELIV_TP1
PRIMARY KEY (MSG_DELIV_ID)
/


CREATE INDEX KREN_MSG_DELIV_TC0 
  ON KREN_MSG_DELIV_T 
  (MSG_ID, TYP_NM)
/
CREATE INDEX KREN_MSG_DELIV_TI1 
  ON KREN_MSG_DELIV_T 
  (MSG_ID)
/





-----------------------------------------------------------------------------
-- KREN_MSG_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREN_MSG_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREN_MSG_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREN_MSG_T
(
      MSG_ID NUMBER(8)
        , ORGN_ID VARCHAR2(128)
        , DELIV_TYP VARCHAR2(500) NOT NULL
        , CRTE_DTTM TIMESTAMP NOT NULL
        , TTL VARCHAR2(255)
        , CHNL VARCHAR2(300) NOT NULL
        , PRODCR VARCHAR2(300)
        , CNTNT CLOB NOT NULL
        , CNTNT_TYP VARCHAR2(128)
        , URL VARCHAR2(512)
        , RECIP_ID VARCHAR2(300) NOT NULL
        , VER_NBR NUMBER(8) default 0 NOT NULL
    

)
/

ALTER TABLE KREN_MSG_T
    ADD CONSTRAINT KREN_MSG_TP1
PRIMARY KEY (MSG_ID)
/


CREATE INDEX KREN_MSG_TC0 
  ON KREN_MSG_T 
  (ORGN_ID)
/





-----------------------------------------------------------------------------
-- KREN_NTFCTN_MSG_DELIV_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREN_NTFCTN_MSG_DELIV_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREN_NTFCTN_MSG_DELIV_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREN_NTFCTN_MSG_DELIV_T
(
      NTFCTN_MSG_DELIV_ID NUMBER(8)
        , NTFCTN_ID NUMBER(8) NOT NULL
        , RECIP_ID VARCHAR2(40) NOT NULL
        , STAT_CD VARCHAR2(15) NOT NULL
        , SYS_ID VARCHAR2(300)
        , LOCKD_DTTM TIMESTAMP
        , VER_NBR NUMBER(8) default 0 NOT NULL
    

)
/

ALTER TABLE KREN_NTFCTN_MSG_DELIV_T
    ADD CONSTRAINT KREN_NTFCTN_MSG_DELIV_TP1
PRIMARY KEY (NTFCTN_MSG_DELIV_ID)
/


CREATE INDEX KREN_MSG_DELIVSI1 
  ON KREN_NTFCTN_MSG_DELIV_T 
  (NTFCTN_ID)
/
CREATE INDEX KREN_NTFCTN_MSG_DELIV_TC0 
  ON KREN_NTFCTN_MSG_DELIV_T 
  (NTFCTN_ID, RECIP_ID)
/





-----------------------------------------------------------------------------
-- KREN_NTFCTN_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREN_NTFCTN_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREN_NTFCTN_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREN_NTFCTN_T
(
      NTFCTN_ID NUMBER(8)
        , DELIV_TYP VARCHAR2(3) NOT NULL
        , CRTE_DTTM TIMESTAMP NOT NULL
        , SND_DTTM TIMESTAMP
        , AUTO_RMV_DTTM TIMESTAMP
        , PRIO_ID NUMBER(8) NOT NULL
        , TTL VARCHAR2(255)
        , CNTNT CLOB NOT NULL
        , CNTNT_TYP_ID NUMBER(8) NOT NULL
        , CHNL_ID NUMBER(8) NOT NULL
        , PRODCR_ID NUMBER(8) NOT NULL
        , PROCESSING_FLAG VARCHAR2(15) NOT NULL
        , LOCKD_DTTM TIMESTAMP
        , VER_NBR NUMBER(8) default 0 NOT NULL
    

)
/

ALTER TABLE KREN_NTFCTN_T
    ADD CONSTRAINT KREN_NTFCTN_TP1
PRIMARY KEY (NTFCTN_ID)
/


CREATE INDEX KREN_CNTNT_TYP_TC0 
  ON KREN_NTFCTN_T 
  (CNTNT_TYP_ID)
/
CREATE INDEX KREN_PRIO_TC0 
  ON KREN_NTFCTN_T 
  (PRIO_ID)
/
CREATE INDEX KREN_PRODCR_TC0 
  ON KREN_NTFCTN_T 
  (PRODCR_ID)
/





-----------------------------------------------------------------------------
-- KREN_PRIO_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREN_PRIO_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREN_PRIO_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREN_PRIO_T
(
      PRIO_ID NUMBER(8)
        , NM VARCHAR2(40) NOT NULL
        , DESC_TXT VARCHAR2(500) NOT NULL
        , PRIO_ORD NUMBER(4) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE KREN_PRIO_T
    ADD CONSTRAINT KREN_PRIO_TP1
PRIMARY KEY (PRIO_ID)
/


CREATE INDEX KREN_NOTIFICATION_PRIO_UK1 
  ON KREN_PRIO_T 
  (NM)
/





-----------------------------------------------------------------------------
-- KREN_PRODCR_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREN_PRODCR_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREN_PRODCR_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREN_PRODCR_T
(
      PRODCR_ID NUMBER(8)
        , NM VARCHAR2(200) NOT NULL
        , DESC_TXT VARCHAR2(1000) NOT NULL
        , CNTCT_INFO VARCHAR2(1000) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE KREN_PRODCR_T
    ADD CONSTRAINT KREN_PRODCR_TP1
PRIMARY KEY (PRODCR_ID)
/


CREATE INDEX KREN_NOTIFN_PRODUCERS_UK1 
  ON KREN_PRODCR_T 
  (NM)
/





-----------------------------------------------------------------------------
-- KREN_RECIP_DELIV_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREN_RECIP_DELIV_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREN_RECIP_DELIV_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREN_RECIP_DELIV_T
(
      RECIP_DELIV_ID NUMBER(8)
        , RECIP_ID VARCHAR2(40) NOT NULL
        , CHNL VARCHAR2(300) NOT NULL
        , NM VARCHAR2(200) NOT NULL
        , VER_NBR NUMBER(8) default 0 NOT NULL
    

)
/

ALTER TABLE KREN_RECIP_DELIV_T
    ADD CONSTRAINT KREN_RECIP_DELIV_TP1
PRIMARY KEY (RECIP_DELIV_ID)
/







-----------------------------------------------------------------------------
-- KREN_RECIP_LIST_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREN_RECIP_LIST_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREN_RECIP_LIST_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREN_RECIP_LIST_T
(
      RECIP_LIST_ID NUMBER(8)
        , CHNL_ID NUMBER(8) NOT NULL
        , RECIP_TYP_CD VARCHAR2(10) NOT NULL
        , RECIP_ID VARCHAR2(40) NOT NULL
    

)
/

ALTER TABLE KREN_RECIP_LIST_T
    ADD CONSTRAINT KREN_RECIP_LIST_TP1
PRIMARY KEY (RECIP_LIST_ID)
/


CREATE INDEX KREN_RECIP_LIST_TC0 
  ON KREN_RECIP_LIST_T 
  (CHNL_ID, RECIP_TYP_CD, RECIP_ID)
/
CREATE INDEX KREN_RECIP_LIST_TI1 
  ON KREN_RECIP_LIST_T 
  (CHNL_ID)
/





-----------------------------------------------------------------------------
-- KREN_RECIP_PREFS_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREN_RECIP_PREFS_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREN_RECIP_PREFS_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREN_RECIP_PREFS_T
(
      RECIP_PREFS_ID NUMBER(8)
        , RECIP_ID VARCHAR2(40) NOT NULL
        , PROP VARCHAR2(200) NOT NULL
        , VAL VARCHAR2(1000) NOT NULL
        , VER_NBR NUMBER(8) default 0 NOT NULL
    

)
/

ALTER TABLE KREN_RECIP_PREFS_T
    ADD CONSTRAINT KREN_RECIP_PREFS_TP1
PRIMARY KEY (RECIP_PREFS_ID)
/


CREATE INDEX KREN_RECIP_PREFS_TC0 
  ON KREN_RECIP_PREFS_T 
  (RECIP_ID, PROP)
/





-----------------------------------------------------------------------------
-- KREN_RECIP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREN_RECIP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREN_RECIP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREN_RECIP_T
(
      RECIP_ID NUMBER(8)
        , NTFCTN_ID NUMBER(8) NOT NULL
        , RECIP_TYP_CD VARCHAR2(10) NOT NULL
        , PRNCPL_ID VARCHAR2(40) NOT NULL
    

)
/

ALTER TABLE KREN_RECIP_T
    ADD CONSTRAINT KREN_RECIP_TP1
PRIMARY KEY (RECIP_ID)
/


CREATE INDEX KREN_RECIP_TC0 
  ON KREN_RECIP_T 
  (NTFCTN_ID, RECIP_TYP_CD, PRNCPL_ID)
/
CREATE INDEX KREN_RECIP_TI1 
  ON KREN_RECIP_T 
  (NTFCTN_ID)
/





-----------------------------------------------------------------------------
-- KREN_RVWER_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREN_RVWER_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREN_RVWER_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREN_RVWER_T
(
      RVWER_ID NUMBER(8)
        , CHNL_ID NUMBER(8) NOT NULL
        , TYP VARCHAR2(10) NOT NULL
        , PRNCPL_ID VARCHAR2(40) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE KREN_RVWER_T
    ADD CONSTRAINT KREN_RVWER_TP1
PRIMARY KEY (RVWER_ID)
/


CREATE INDEX KREN_RVWER_TC0 
  ON KREN_RVWER_T 
  (CHNL_ID, TYP, PRNCPL_ID)
/
CREATE INDEX KREN_RVWER_TI1 
  ON KREN_RVWER_T 
  (CHNL_ID)
/





-----------------------------------------------------------------------------
-- KREN_SNDR_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREN_SNDR_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREN_SNDR_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREN_SNDR_T
(
      SNDR_ID NUMBER(8)
        , NTFCTN_ID NUMBER(8) NOT NULL
        , NM VARCHAR2(200) NOT NULL
    

)
/

ALTER TABLE KREN_SNDR_T
    ADD CONSTRAINT KREN_SNDR_TP1
PRIMARY KEY (SNDR_ID)
/


CREATE INDEX KREN_SNDR_TC0 
  ON KREN_SNDR_T 
  (NTFCTN_ID, NM)
/
CREATE INDEX KREN_SNDR_TI1 
  ON KREN_SNDR_T 
  (NTFCTN_ID)
/





-----------------------------------------------------------------------------
-- KREW_ACTN_ITM_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_ACTN_ITM_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_ACTN_ITM_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_ACTN_ITM_T
(
      ACTN_ITM_ID NUMBER(14)
        , PRNCPL_ID VARCHAR2(40) NOT NULL
        , ASND_DT DATE NOT NULL
        , RQST_CD CHAR(1) NOT NULL
        , ACTN_RQST_ID NUMBER(14) NOT NULL
        , DOC_HDR_ID NUMBER(14) NOT NULL
        , ROLE_NM VARCHAR2(2000)
        , DLGN_PRNCPL_ID VARCHAR2(40)
        , DOC_HDR_TTL VARCHAR2(255)
        , DOC_TYP_LBL VARCHAR2(128) NOT NULL
        , DOC_HDLR_URL VARCHAR2(255) NOT NULL
        , DOC_TYP_NM VARCHAR2(64) NOT NULL
        , RSP_ID NUMBER(14) NOT NULL
        , DLGN_TYP VARCHAR2(1)
        , VER_NBR NUMBER(8) default 0
        , DTYPE VARCHAR2(50)
        , GRP_ID VARCHAR2(40)
        , DLGN_GRP_ID VARCHAR2(40)
        , RQST_LBL VARCHAR2(255)
    

)
/

ALTER TABLE KREW_ACTN_ITM_T
    ADD CONSTRAINT KREW_ACTN_ITM_TP1
PRIMARY KEY (ACTN_ITM_ID)
/


CREATE INDEX KREW_ACTN_ITM_T1 
  ON KREW_ACTN_ITM_T 
  (PRNCPL_ID)
/
CREATE INDEX KREW_ACTN_ITM_TI2 
  ON KREW_ACTN_ITM_T 
  (DOC_HDR_ID)
/
CREATE INDEX KREW_ACTN_ITM_TI3 
  ON KREW_ACTN_ITM_T 
  (ACTN_RQST_ID)
/
CREATE INDEX KREW_ACTN_ITM_TI5 
  ON KREW_ACTN_ITM_T 
  (PRNCPL_ID, DLGN_TYP, DOC_HDR_ID)
/





-----------------------------------------------------------------------------
-- KREW_ACTN_RQST_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_ACTN_RQST_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_ACTN_RQST_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_ACTN_RQST_T
(
      ACTN_RQST_ID NUMBER(14)
        , PARNT_ID NUMBER(14)
        , ACTN_RQST_CD CHAR(1) NOT NULL
        , DOC_HDR_ID NUMBER(14) NOT NULL
        , RULE_ID NUMBER(19)
        , STAT_CD CHAR(1) NOT NULL
        , RSP_ID NUMBER(14) NOT NULL
        , PRNCPL_ID VARCHAR2(40)
        , ROLE_NM VARCHAR2(2000)
        , QUAL_ROLE_NM VARCHAR2(2000)
        , QUAL_ROLE_NM_LBL_TXT VARCHAR2(2000)
        , RECIP_TYP_CD CHAR(1)
        , PRIO_NBR NUMBER(8) NOT NULL
        , RTE_TYP_NM VARCHAR2(255)
        , RTE_LVL_NBR NUMBER(8) NOT NULL
        , RTE_NODE_INSTN_ID NUMBER(19)
        , ACTN_TKN_ID NUMBER(14)
        , DOC_VER_NBR NUMBER(8) NOT NULL
        , CRTE_DT DATE NOT NULL
        , RSP_DESC_TXT VARCHAR2(200)
        , FRC_ACTN NUMBER(1) default 0
        , ACTN_RQST_ANNOTN_TXT VARCHAR2(2000)
        , DLGN_TYP CHAR(1)
        , APPR_PLCY CHAR(1)
        , CUR_IND NUMBER(1) default 1
        , VER_NBR NUMBER(8) default 0
        , GRP_ID VARCHAR2(40)
        , RQST_LBL VARCHAR2(255)
    

)
/

ALTER TABLE KREW_ACTN_RQST_T
    ADD CONSTRAINT KREW_ACTN_RQST_TP1
PRIMARY KEY (ACTN_RQST_ID)
/


CREATE INDEX KREW_ACTN_RQST_T11 
  ON KREW_ACTN_RQST_T 
  (DOC_HDR_ID)
/
CREATE INDEX KREW_ACTN_RQST_T12 
  ON KREW_ACTN_RQST_T 
  (PRNCPL_ID)
/
CREATE INDEX KREW_ACTN_RQST_T13 
  ON KREW_ACTN_RQST_T 
  (ACTN_TKN_ID)
/
CREATE INDEX KREW_ACTN_RQST_T14 
  ON KREW_ACTN_RQST_T 
  (PARNT_ID)
/
CREATE INDEX KREW_ACTN_RQST_T15 
  ON KREW_ACTN_RQST_T 
  (RSP_ID)
/
CREATE INDEX KREW_ACTN_RQST_T16 
  ON KREW_ACTN_RQST_T 
  (STAT_CD, RSP_ID)
/
CREATE INDEX KREW_ACTN_RQST_T17 
  ON KREW_ACTN_RQST_T 
  (RTE_NODE_INSTN_ID)
/
CREATE INDEX KREW_ACTN_RQST_T19 
  ON KREW_ACTN_RQST_T 
  (STAT_CD, DOC_HDR_ID)
/





-----------------------------------------------------------------------------
-- KREW_ACTN_TKN_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_ACTN_TKN_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_ACTN_TKN_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_ACTN_TKN_T
(
      ACTN_TKN_ID NUMBER(14)
        , DOC_HDR_ID NUMBER(14) NOT NULL
        , PRNCPL_ID VARCHAR2(40) NOT NULL
        , DLGTR_PRNCPL_ID VARCHAR2(40)
        , ACTN_CD CHAR(1) NOT NULL
        , ACTN_DT DATE NOT NULL
        , DOC_VER_NBR NUMBER(8) NOT NULL
        , ANNOTN VARCHAR2(2000)
        , CUR_IND NUMBER(1) default 1
        , VER_NBR NUMBER(8) default 0
        , DLGTR_GRP_ID VARCHAR2(40)
    

)
/

ALTER TABLE KREW_ACTN_TKN_T
    ADD CONSTRAINT KREW_ACTN_TKN_TP1
PRIMARY KEY (ACTN_TKN_ID)
/


CREATE INDEX KREW_ACTN_TKN_TI1 
  ON KREW_ACTN_TKN_T 
  (DOC_HDR_ID, PRNCPL_ID)
/
CREATE INDEX KREW_ACTN_TKN_TI2 
  ON KREW_ACTN_TKN_T 
  (DOC_HDR_ID, PRNCPL_ID, ACTN_CD)
/
CREATE INDEX KREW_ACTN_TKN_TI3 
  ON KREW_ACTN_TKN_T 
  (PRNCPL_ID)
/
CREATE INDEX KREW_ACTN_TKN_TI4 
  ON KREW_ACTN_TKN_T 
  (DLGTR_PRNCPL_ID)
/
CREATE INDEX KREW_ACTN_TKN_TI5 
  ON KREW_ACTN_TKN_T 
  (DOC_HDR_ID)
/





-----------------------------------------------------------------------------
-- KREW_APP_DOC_STAT_TRAN_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_APP_DOC_STAT_TRAN_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_APP_DOC_STAT_TRAN_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_APP_DOC_STAT_TRAN_T
(
      APP_DOC_STAT_TRAN_ID NUMBER(19)
        , DOC_HDR_ID NUMBER(14)
        , APP_DOC_STAT_FROM VARCHAR2(64)
        , APP_DOC_STAT_TO VARCHAR2(64)
        , STAT_TRANS_DATE DATE
        , VER_NBR NUMBER(8) default 0
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE KREW_APP_DOC_STAT_TRAN_T
    ADD CONSTRAINT KREW_APP_DOC_STAT_TRAN_TP1
PRIMARY KEY (APP_DOC_STAT_TRAN_ID)
/


CREATE INDEX KREW_APP_DOC_STAT_TI1 
  ON KREW_APP_DOC_STAT_TRAN_T 
  (DOC_HDR_ID, STAT_TRANS_DATE)
/
CREATE INDEX KREW_APP_DOC_STAT_TI2 
  ON KREW_APP_DOC_STAT_TRAN_T 
  (DOC_HDR_ID, APP_DOC_STAT_FROM)
/
CREATE INDEX KREW_APP_DOC_STAT_TI3 
  ON KREW_APP_DOC_STAT_TRAN_T 
  (DOC_HDR_ID, APP_DOC_STAT_TO)
/
CREATE INDEX KREW_APP_DOC_STAT_TRAN_TC0 
  ON KREW_APP_DOC_STAT_TRAN_T 
  (OBJ_ID)
/





-----------------------------------------------------------------------------
-- KREW_ATT_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_ATT_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_ATT_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_ATT_T
(
      ATTACHMENT_ID NUMBER(19)
        , NTE_ID NUMBER(19) NOT NULL
        , FILE_NM VARCHAR2(255) NOT NULL
        , FILE_LOC VARCHAR2(255) NOT NULL
        , MIME_TYP VARCHAR2(255) NOT NULL
        , VER_NBR NUMBER(8) default 0
    

)
/

ALTER TABLE KREW_ATT_T
    ADD CONSTRAINT KREW_ATT_TP1
PRIMARY KEY (ATTACHMENT_ID)
/







-----------------------------------------------------------------------------
-- KREW_DLGN_RSP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_DLGN_RSP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_DLGN_RSP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_DLGN_RSP_T
(
      DLGN_RULE_ID NUMBER(19)
        , RSP_ID NUMBER(19) NOT NULL
        , DLGN_RULE_BASE_VAL_ID NUMBER(19) NOT NULL
        , DLGN_TYP VARCHAR2(20) NOT NULL
        , VER_NBR NUMBER(8) default 0
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE KREW_DLGN_RSP_T
    ADD CONSTRAINT KREW_DLGN_RSP_TP1
PRIMARY KEY (DLGN_RULE_ID)
/


CREATE INDEX KREW_DLGN_RSP_TC0 
  ON KREW_DLGN_RSP_T 
  (OBJ_ID)
/





-----------------------------------------------------------------------------
-- KREW_DOC_HDR_CNTNT_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_DOC_HDR_CNTNT_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_DOC_HDR_CNTNT_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_DOC_HDR_CNTNT_T
(
      DOC_HDR_ID NUMBER(14)
        , DOC_CNTNT_TXT CLOB
    

)
/

ALTER TABLE KREW_DOC_HDR_CNTNT_T
    ADD CONSTRAINT KREW_DOC_HDR_CNTNT_TP1
PRIMARY KEY (DOC_HDR_ID)
/







-----------------------------------------------------------------------------
-- KREW_DOC_HDR_EXT_DT_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_DOC_HDR_EXT_DT_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_DOC_HDR_EXT_DT_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_DOC_HDR_EXT_DT_T
(
      DOC_HDR_EXT_DT_ID NUMBER(19)
        , DOC_HDR_ID NUMBER(14) NOT NULL
        , KEY_CD VARCHAR2(256) NOT NULL
        , VAL DATE
    

)
/

ALTER TABLE KREW_DOC_HDR_EXT_DT_T
    ADD CONSTRAINT KREW_DOC_HDR_EXT_DT_TP1
PRIMARY KEY (DOC_HDR_EXT_DT_ID)
/


CREATE INDEX KREW_DOC_HDR_EXT_DT_TI1 
  ON KREW_DOC_HDR_EXT_DT_T 
  (KEY_CD, VAL)
/
CREATE INDEX KREW_DOC_HDR_EXT_DT_TI2 
  ON KREW_DOC_HDR_EXT_DT_T 
  (DOC_HDR_ID)
/
CREATE INDEX KREW_DOC_HDR_EXT_DT_TI3 
  ON KREW_DOC_HDR_EXT_DT_T 
  (VAL)
/





-----------------------------------------------------------------------------
-- KREW_DOC_HDR_EXT_FLT_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_DOC_HDR_EXT_FLT_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_DOC_HDR_EXT_FLT_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_DOC_HDR_EXT_FLT_T
(
      DOC_HDR_EXT_FLT_ID NUMBER(19)
        , DOC_HDR_ID NUMBER(14) NOT NULL
        , KEY_CD VARCHAR2(256) NOT NULL
        , VAL NUMBER(30,15)
    

)
/

ALTER TABLE KREW_DOC_HDR_EXT_FLT_T
    ADD CONSTRAINT KREW_DOC_HDR_EXT_FLT_TP1
PRIMARY KEY (DOC_HDR_EXT_FLT_ID)
/


CREATE INDEX KREW_DOC_HDR_EXT_FLT_TI1 
  ON KREW_DOC_HDR_EXT_FLT_T 
  (KEY_CD, VAL)
/
CREATE INDEX KREW_DOC_HDR_EXT_FLT_TI2 
  ON KREW_DOC_HDR_EXT_FLT_T 
  (DOC_HDR_ID)
/
CREATE INDEX KREW_DOC_HDR_EXT_FLT_TI3 
  ON KREW_DOC_HDR_EXT_FLT_T 
  (VAL)
/





-----------------------------------------------------------------------------
-- KREW_DOC_HDR_EXT_LONG_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_DOC_HDR_EXT_LONG_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_DOC_HDR_EXT_LONG_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_DOC_HDR_EXT_LONG_T
(
      DOC_HDR_EXT_LONG_ID NUMBER(19)
        , DOC_HDR_ID NUMBER(14) NOT NULL
        , KEY_CD VARCHAR2(256) NOT NULL
        , VAL NUMBER(22)
    

)
/

ALTER TABLE KREW_DOC_HDR_EXT_LONG_T
    ADD CONSTRAINT KREW_DOC_HDR_EXT_LONG_TP1
PRIMARY KEY (DOC_HDR_EXT_LONG_ID)
/


CREATE INDEX KREW_DOC_HDR_EXT_LONG_TI1 
  ON KREW_DOC_HDR_EXT_LONG_T 
  (KEY_CD, VAL)
/
CREATE INDEX KREW_DOC_HDR_EXT_LONG_TI2 
  ON KREW_DOC_HDR_EXT_LONG_T 
  (DOC_HDR_ID)
/
CREATE INDEX KREW_DOC_HDR_EXT_LONG_TI3 
  ON KREW_DOC_HDR_EXT_LONG_T 
  (VAL)
/





-----------------------------------------------------------------------------
-- KREW_DOC_HDR_EXT_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_DOC_HDR_EXT_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_DOC_HDR_EXT_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_DOC_HDR_EXT_T
(
      DOC_HDR_EXT_ID NUMBER(19)
        , DOC_HDR_ID NUMBER(14) NOT NULL
        , KEY_CD VARCHAR2(256) NOT NULL
        , VAL VARCHAR2(2000)
    

)
/

ALTER TABLE KREW_DOC_HDR_EXT_T
    ADD CONSTRAINT KREW_DOC_HDR_EXT_TP1
PRIMARY KEY (DOC_HDR_EXT_ID)
/


CREATE INDEX KREW_DOC_HDR_EXT_TI1 
  ON KREW_DOC_HDR_EXT_T 
  (KEY_CD, VAL)
/
CREATE INDEX KREW_DOC_HDR_EXT_TI2 
  ON KREW_DOC_HDR_EXT_T 
  (DOC_HDR_ID)
/
CREATE INDEX KREW_DOC_HDR_EXT_TI3 
  ON KREW_DOC_HDR_EXT_T 
  (VAL)
/





-----------------------------------------------------------------------------
-- KREW_DOC_HDR_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_DOC_HDR_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_DOC_HDR_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_DOC_HDR_T
(
      DOC_HDR_ID NUMBER(14)
        , APP_DOC_STAT VARCHAR2(64)
        , APP_DOC_STAT_MDFN_DT DATE
        , DOC_TYP_ID NUMBER(19)
        , DOC_HDR_STAT_CD CHAR(1) NOT NULL
        , RTE_LVL NUMBER(8) NOT NULL
        , STAT_MDFN_DT DATE NOT NULL
        , CRTE_DT DATE NOT NULL
        , APRV_DT DATE
        , FNL_DT DATE
        , RTE_STAT_MDFN_DT DATE
        , RTE_LVL_MDFN_DT DATE
        , TTL VARCHAR2(255)
        , APP_DOC_ID VARCHAR2(255)
        , DOC_VER_NBR NUMBER(8) NOT NULL
        , INITR_PRNCPL_ID VARCHAR2(40) NOT NULL
        , VER_NBR NUMBER(8) default 0
        , RTE_PRNCPL_ID VARCHAR2(40)
        , DTYPE VARCHAR2(50)
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE KREW_DOC_HDR_T
    ADD CONSTRAINT KREW_DOC_HDR_TP1
PRIMARY KEY (DOC_HDR_ID)
/


CREATE INDEX KREW_DOC_HDR_T10 
  ON KREW_DOC_HDR_T 
  (APP_DOC_STAT)
/
CREATE INDEX KREW_DOC_HDR_T12 
  ON KREW_DOC_HDR_T 
  (APP_DOC_STAT_MDFN_DT)
/
CREATE INDEX KREW_DOC_HDR_TC0 
  ON KREW_DOC_HDR_T 
  (OBJ_ID)
/
CREATE INDEX KREW_DOC_HDR_TI1 
  ON KREW_DOC_HDR_T 
  (DOC_TYP_ID)
/
CREATE INDEX KREW_DOC_HDR_TI2 
  ON KREW_DOC_HDR_T 
  (INITR_PRNCPL_ID)
/
CREATE INDEX KREW_DOC_HDR_TI3 
  ON KREW_DOC_HDR_T 
  (DOC_HDR_STAT_CD)
/
CREATE INDEX KREW_DOC_HDR_TI4 
  ON KREW_DOC_HDR_T 
  (TTL)
/
CREATE INDEX KREW_DOC_HDR_TI5 
  ON KREW_DOC_HDR_T 
  (CRTE_DT)
/
CREATE INDEX KREW_DOC_HDR_TI6 
  ON KREW_DOC_HDR_T 
  (RTE_STAT_MDFN_DT)
/
CREATE INDEX KREW_DOC_HDR_TI7 
  ON KREW_DOC_HDR_T 
  (APRV_DT)
/
CREATE INDEX KREW_DOC_HDR_TI8 
  ON KREW_DOC_HDR_T 
  (FNL_DT)
/
CREATE INDEX KREW_DOC_HDR_TI9 
  ON KREW_DOC_HDR_T 
  (APP_DOC_ID)
/





-----------------------------------------------------------------------------
-- KREW_DOC_LNK_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_DOC_LNK_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_DOC_LNK_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_DOC_LNK_T
(
      DOC_LNK_ID NUMBER(19)
        , ORGN_DOC_ID NUMBER(14) NOT NULL
        , DEST_DOC_ID NUMBER(14) NOT NULL
    

)
/

ALTER TABLE KREW_DOC_LNK_T
    ADD CONSTRAINT KREW_DOC_LNK_TP1
PRIMARY KEY (DOC_LNK_ID)
/


CREATE INDEX KREW_DOC_LNK_TI1 
  ON KREW_DOC_LNK_T 
  (ORGN_DOC_ID)
/





-----------------------------------------------------------------------------
-- KREW_DOC_NTE_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_DOC_NTE_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_DOC_NTE_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_DOC_NTE_T
(
      DOC_NTE_ID NUMBER(19)
        , DOC_HDR_ID NUMBER(14) NOT NULL
        , AUTH_PRNCPL_ID VARCHAR2(40) NOT NULL
        , CRT_DT DATE NOT NULL
        , TXT VARCHAR2(4000)
        , VER_NBR NUMBER(8) default 0
    

)
/

ALTER TABLE KREW_DOC_NTE_T
    ADD CONSTRAINT KREW_DOC_NTE_TP1
PRIMARY KEY (DOC_NTE_ID)
/


CREATE INDEX KREW_DOC_NTE_TI1 
  ON KREW_DOC_NTE_T 
  (DOC_HDR_ID)
/





-----------------------------------------------------------------------------
-- KREW_DOC_TYP_APP_DOC_STAT_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_DOC_TYP_APP_DOC_STAT_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_DOC_TYP_APP_DOC_STAT_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_DOC_TYP_APP_DOC_STAT_T
(
      DOC_TYP_ID NUMBER(19)
        , DOC_STAT_NM VARCHAR2(64)
        , VER_NBR NUMBER(8) default 0
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE KREW_DOC_TYP_APP_DOC_STAT_T
    ADD CONSTRAINT KREW_DOC_TYP_APP_DOC_STAT_TP1
PRIMARY KEY (DOC_TYP_ID,DOC_STAT_NM)
/


CREATE INDEX KREW_DOC_TYP_APP_DOC_STAT_T1 
  ON KREW_DOC_TYP_APP_DOC_STAT_T 
  (DOC_TYP_ID)
/
CREATE INDEX KREW_DOC_TYP_APP_DOC_STAT_TC0 
  ON KREW_DOC_TYP_APP_DOC_STAT_T 
  (OBJ_ID)
/





-----------------------------------------------------------------------------
-- KREW_DOC_TYP_ATTR_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_DOC_TYP_ATTR_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_DOC_TYP_ATTR_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_DOC_TYP_ATTR_T
(
      DOC_TYP_ATTRIB_ID NUMBER(19)
        , DOC_TYP_ID NUMBER(19) NOT NULL
        , RULE_ATTR_ID NUMBER(19) NOT NULL
        , ORD_INDX NUMBER(4) default 0
    

)
/

ALTER TABLE KREW_DOC_TYP_ATTR_T
    ADD CONSTRAINT KREW_DOC_TYP_ATTR_TP1
PRIMARY KEY (DOC_TYP_ATTRIB_ID)
/


CREATE INDEX KREW_DOC_TYP_ATTR_TI1 
  ON KREW_DOC_TYP_ATTR_T 
  (DOC_TYP_ID)
/





-----------------------------------------------------------------------------
-- KREW_DOC_TYP_PLCY_RELN_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_DOC_TYP_PLCY_RELN_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_DOC_TYP_PLCY_RELN_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_DOC_TYP_PLCY_RELN_T
(
      PLCY_VAL VARCHAR2(64)
        , DOC_TYP_ID NUMBER(19)
        , DOC_PLCY_NM VARCHAR2(255)
        , PLCY_NM NUMBER(1) NOT NULL
        , VER_NBR NUMBER(8) default 0
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE KREW_DOC_TYP_PLCY_RELN_T
    ADD CONSTRAINT KREW_DOC_TYP_PLCY_RELN_TP1
PRIMARY KEY (DOC_TYP_ID,DOC_PLCY_NM)
/


CREATE INDEX KREW_DOC_TYP_PLCY_RELN_TC0 
  ON KREW_DOC_TYP_PLCY_RELN_T 
  (OBJ_ID)
/





-----------------------------------------------------------------------------
-- KREW_DOC_TYP_PROC_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_DOC_TYP_PROC_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_DOC_TYP_PROC_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_DOC_TYP_PROC_T
(
      DOC_TYP_PROC_ID NUMBER(19)
        , DOC_TYP_ID NUMBER(19) NOT NULL
        , INIT_RTE_NODE_ID NUMBER(22)
        , NM VARCHAR2(255) NOT NULL
        , INIT_IND NUMBER(1) default 0 NOT NULL
        , VER_NBR NUMBER(8) default 0
    

)
/

ALTER TABLE KREW_DOC_TYP_PROC_T
    ADD CONSTRAINT KREW_DOC_TYP_PROC_TP1
PRIMARY KEY (DOC_TYP_PROC_ID)
/


CREATE INDEX KREW_DOC_TYP_PROC_TI1 
  ON KREW_DOC_TYP_PROC_T 
  (DOC_TYP_ID)
/
CREATE INDEX KREW_DOC_TYP_PROC_TI2 
  ON KREW_DOC_TYP_PROC_T 
  (INIT_RTE_NODE_ID)
/
CREATE INDEX KREW_DOC_TYP_PROC_TI3 
  ON KREW_DOC_TYP_PROC_T 
  (NM)
/





-----------------------------------------------------------------------------
-- KREW_DOC_TYP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_DOC_TYP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_DOC_TYP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_DOC_TYP_T
(
      DOC_TYP_ID NUMBER(19)
        , PARNT_ID NUMBER(19)
        , DOC_TYP_NM VARCHAR2(64)
        , DOC_TYP_VER_NBR NUMBER(10) default 0
        , ACTV_IND NUMBER(1)
        , CUR_IND NUMBER(1)
        , LBL VARCHAR2(128)
        , PREV_DOC_TYP_VER_NBR NUMBER(19)
        , DOC_HDR_ID NUMBER(14)
        , DOC_TYP_DESC VARCHAR2(4000)
        , DOC_HDLR_URL VARCHAR2(255)
        , POST_PRCSR VARCHAR2(255)
        , JNDI_URL VARCHAR2(255)
        , BLNKT_APPR_PLCY VARCHAR2(10)
        , ADV_DOC_SRCH_URL VARCHAR2(255)
        , CSTM_ACTN_LIST_ATTRIB_CLS_NM VARCHAR2(255)
        , CSTM_ACTN_EMAIL_ATTRIB_CLS_NM VARCHAR2(255)
        , CSTM_DOC_NTE_ATTRIB_CLS_NM VARCHAR2(255)
        , RTE_VER_NBR VARCHAR2(2) default '1'
        , NOTIFY_ADDR VARCHAR2(255)
        , SVC_NMSPC VARCHAR2(255)
        , EMAIL_XSL VARCHAR2(255)
        , SEC_XML CLOB
        , VER_NBR NUMBER(8) default 0
        , BLNKT_APPR_GRP_ID VARCHAR2(40)
        , RPT_GRP_ID VARCHAR2(40)
        , GRP_ID VARCHAR2(40)
        , HELP_DEF_URL VARCHAR2(4000)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , DOC_SEARCH_HELP_URL VARCHAR2(4000)
    

)
/

ALTER TABLE KREW_DOC_TYP_T
    ADD CONSTRAINT KREW_DOC_TYP_TP1
PRIMARY KEY (DOC_TYP_ID)
/


CREATE INDEX KREW_DOC_TYP_TC0 
  ON KREW_DOC_TYP_T 
  (OBJ_ID)
/
CREATE INDEX KREW_DOC_TYP_TI1 
  ON KREW_DOC_TYP_T 
  (DOC_TYP_NM, DOC_TYP_VER_NBR)
/
CREATE INDEX KREW_DOC_TYP_TI2 
  ON KREW_DOC_TYP_T 
  (PARNT_ID)
/
CREATE INDEX KREW_DOC_TYP_TI3 
  ON KREW_DOC_TYP_T 
  (DOC_TYP_ID, PARNT_ID)
/
CREATE INDEX KREW_DOC_TYP_TI4 
  ON KREW_DOC_TYP_T 
  (PREV_DOC_TYP_VER_NBR)
/
CREATE INDEX KREW_DOC_TYP_TI5 
  ON KREW_DOC_TYP_T 
  (CUR_IND)
/
CREATE INDEX KREW_DOC_TYP_TI6 
  ON KREW_DOC_TYP_T 
  (DOC_TYP_NM)
/





-----------------------------------------------------------------------------
-- KREW_EDL_ASSCTN_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_EDL_ASSCTN_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_EDL_ASSCTN_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_EDL_ASSCTN_T
(
      EDOCLT_ASSOC_ID NUMBER(19)
        , DOC_TYP_NM VARCHAR2(64) NOT NULL
        , EDL_DEF_NM VARCHAR2(200)
        , STYLE_NM VARCHAR2(200)
        , ACTV_IND NUMBER(1) NOT NULL
        , VER_NBR NUMBER(8) default 0
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE KREW_EDL_ASSCTN_T
    ADD CONSTRAINT KREW_EDL_ASSCTN_TP1
PRIMARY KEY (EDOCLT_ASSOC_ID)
/


CREATE INDEX KREW_EDL_ASSCTN_TC0 
  ON KREW_EDL_ASSCTN_T 
  (OBJ_ID)
/





-----------------------------------------------------------------------------
-- KREW_EDL_DEF_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_EDL_DEF_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_EDL_DEF_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_EDL_DEF_T
(
      EDOCLT_DEF_ID NUMBER(19)
        , NM VARCHAR2(200) NOT NULL
        , XML CLOB NOT NULL
        , ACTV_IND NUMBER(1) NOT NULL
        , VER_NBR NUMBER(8) default 0
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE KREW_EDL_DEF_T
    ADD CONSTRAINT KREW_EDL_DEF_TP1
PRIMARY KEY (EDOCLT_DEF_ID)
/


CREATE INDEX KREW_EDL_DEF_TC0 
  ON KREW_EDL_DEF_T 
  (OBJ_ID)
/





-----------------------------------------------------------------------------
-- KREW_EDL_DMP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_EDL_DMP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_EDL_DMP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_EDL_DMP_T
(
      DOC_HDR_ID NUMBER(14)
        , DOC_TYP_NM VARCHAR2(64) NOT NULL
        , DOC_HDR_STAT_CD CHAR(1) NOT NULL
        , DOC_HDR_MDFN_DT DATE NOT NULL
        , DOC_HDR_CRTE_DT DATE NOT NULL
        , DOC_HDR_TTL VARCHAR2(255)
        , DOC_HDR_INITR_PRNCPL_ID VARCHAR2(40) NOT NULL
        , CRNT_NODE_NM VARCHAR2(30) NOT NULL
        , VER_NBR NUMBER(8) default 0
    

)
/

ALTER TABLE KREW_EDL_DMP_T
    ADD CONSTRAINT KREW_EDL_DMP_TP1
PRIMARY KEY (DOC_HDR_ID)
/


CREATE INDEX KREW_EDL_DMP_TI1 
  ON KREW_EDL_DMP_T 
  (DOC_TYP_NM, DOC_HDR_ID)
/





-----------------------------------------------------------------------------
-- KREW_EDL_FLD_DMP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_EDL_FLD_DMP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_EDL_FLD_DMP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_EDL_FLD_DMP_T
(
      EDL_FIELD_DMP_ID NUMBER(14)
        , DOC_HDR_ID NUMBER(14) NOT NULL
        , FLD_NM VARCHAR2(255) NOT NULL
        , FLD_VAL VARCHAR2(4000)
        , VER_NBR NUMBER(8) default 0
    

)
/

ALTER TABLE KREW_EDL_FLD_DMP_T
    ADD CONSTRAINT KREW_EDL_FLD_DMP_TP1
PRIMARY KEY (EDL_FIELD_DMP_ID)
/







-----------------------------------------------------------------------------
-- KREW_HLP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_HLP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_HLP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_HLP_T
(
      HLP_ID NUMBER(19)
        , NM VARCHAR2(500) NOT NULL
        , KEY_CD VARCHAR2(500) NOT NULL
        , HLP_TXT VARCHAR2(4000) NOT NULL
        , VER_NBR NUMBER(8) default 0
    

)
/

ALTER TABLE KREW_HLP_T
    ADD CONSTRAINT KREW_HLP_TP1
PRIMARY KEY (HLP_ID)
/


CREATE INDEX KREW_HLP_TI1 
  ON KREW_HLP_T 
  (KEY_CD)
/





-----------------------------------------------------------------------------
-- KREW_INIT_RTE_NODE_INSTN_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_INIT_RTE_NODE_INSTN_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_INIT_RTE_NODE_INSTN_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_INIT_RTE_NODE_INSTN_T
(
      DOC_HDR_ID NUMBER(19)
        , RTE_NODE_INSTN_ID NUMBER(19)
    

)
/

ALTER TABLE KREW_INIT_RTE_NODE_INSTN_T
    ADD CONSTRAINT KREW_INIT_RTE_NODE_INSTN_TP1
PRIMARY KEY (DOC_HDR_ID,RTE_NODE_INSTN_ID)
/


CREATE INDEX KREW_INIT_RTE_NODE_INSTN_TI1 
  ON KREW_INIT_RTE_NODE_INSTN_T 
  (DOC_HDR_ID)
/
CREATE INDEX KREW_INIT_RTE_NODE_INSTN_TI2 
  ON KREW_INIT_RTE_NODE_INSTN_T 
  (RTE_NODE_INSTN_ID)
/





-----------------------------------------------------------------------------
-- KREW_OUT_BOX_ITM_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_OUT_BOX_ITM_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_OUT_BOX_ITM_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_OUT_BOX_ITM_T
(
      ACTN_ITM_ID NUMBER(14)
        , PRNCPL_ID VARCHAR2(40) NOT NULL
        , ASND_DT DATE NOT NULL
        , RQST_CD CHAR(1) NOT NULL
        , ACTN_RQST_ID NUMBER(14) NOT NULL
        , DOC_HDR_ID NUMBER(14) NOT NULL
        , ROLE_NM VARCHAR2(2000)
        , DLGN_PRNCPL_ID VARCHAR2(40)
        , DOC_HDR_TTL VARCHAR2(255)
        , DOC_TYP_LBL VARCHAR2(128) NOT NULL
        , DOC_HDLR_URL VARCHAR2(255) NOT NULL
        , DOC_TYP_NM VARCHAR2(64) NOT NULL
        , RSP_ID NUMBER(14) NOT NULL
        , DLGN_TYP VARCHAR2(1)
        , VER_NBR NUMBER(8) default 0
        , GRP_ID VARCHAR2(40)
        , DLGN_GRP_ID VARCHAR2(40)
        , RQST_LBL VARCHAR2(255)
    

)
/

ALTER TABLE KREW_OUT_BOX_ITM_T
    ADD CONSTRAINT KREW_OUT_BOX_ITM_TP1
PRIMARY KEY (ACTN_ITM_ID)
/


CREATE INDEX KREW_OUT_BOX_ITM_TI1 
  ON KREW_OUT_BOX_ITM_T 
  (PRNCPL_ID)
/
CREATE INDEX KREW_OUT_BOX_ITM_TI2 
  ON KREW_OUT_BOX_ITM_T 
  (DOC_HDR_ID)
/
CREATE INDEX KREW_OUT_BOX_ITM_TI3 
  ON KREW_OUT_BOX_ITM_T 
  (ACTN_RQST_ID)
/





-----------------------------------------------------------------------------
-- KREW_RMV_RPLC_DOC_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_RMV_RPLC_DOC_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_RMV_RPLC_DOC_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_RMV_RPLC_DOC_T
(
      DOC_HDR_ID NUMBER(14)
        , OPRN CHAR(1) NOT NULL
        , PRNCPL_ID VARCHAR2(40) NOT NULL
        , RPLC_PRNCPL_ID VARCHAR2(40)
        , VER_NBR NUMBER(8) default 0
    

)
/

ALTER TABLE KREW_RMV_RPLC_DOC_T
    ADD CONSTRAINT KREW_RMV_RPLC_DOC_TP1
PRIMARY KEY (DOC_HDR_ID)
/







-----------------------------------------------------------------------------
-- KREW_RMV_RPLC_GRP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_RMV_RPLC_GRP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_RMV_RPLC_GRP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_RMV_RPLC_GRP_T
(
      DOC_HDR_ID NUMBER(14)
        , GRP_ID NUMBER(14)
    

)
/

ALTER TABLE KREW_RMV_RPLC_GRP_T
    ADD CONSTRAINT KREW_RMV_RPLC_GRP_TP1
PRIMARY KEY (DOC_HDR_ID,GRP_ID)
/







-----------------------------------------------------------------------------
-- KREW_RMV_RPLC_RULE_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_RMV_RPLC_RULE_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_RMV_RPLC_RULE_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_RMV_RPLC_RULE_T
(
      DOC_HDR_ID NUMBER(14)
        , RULE_ID NUMBER(19)
    

)
/

ALTER TABLE KREW_RMV_RPLC_RULE_T
    ADD CONSTRAINT KREW_RMV_RPLC_RULE_TP1
PRIMARY KEY (DOC_HDR_ID,RULE_ID)
/







-----------------------------------------------------------------------------
-- KREW_RTE_BRCH_PROTO_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_RTE_BRCH_PROTO_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_RTE_BRCH_PROTO_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_RTE_BRCH_PROTO_T
(
      RTE_BRCH_PROTO_ID NUMBER(19)
        , BRCH_NM VARCHAR2(255) NOT NULL
        , VER_NBR NUMBER(8) default 0
    

)
/

ALTER TABLE KREW_RTE_BRCH_PROTO_T
    ADD CONSTRAINT KREW_RTE_BRCH_PROTO_TP1
PRIMARY KEY (RTE_BRCH_PROTO_ID)
/


CREATE INDEX KREW_RTE_BRCH_PROTO_TI1 
  ON KREW_RTE_BRCH_PROTO_T 
  (BRCH_NM)
/





-----------------------------------------------------------------------------
-- KREW_RTE_BRCH_ST_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_RTE_BRCH_ST_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_RTE_BRCH_ST_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_RTE_BRCH_ST_T
(
      RTE_BRCH_ST_ID NUMBER(19)
        , RTE_BRCH_ID NUMBER(19) NOT NULL
        , KEY_CD VARCHAR2(255) NOT NULL
        , VAL VARCHAR2(2000)
        , VER_NBR NUMBER(8) default 0
    

)
/

ALTER TABLE KREW_RTE_BRCH_ST_T
    ADD CONSTRAINT KREW_RTE_BRCH_ST_TP1
PRIMARY KEY (RTE_BRCH_ST_ID)
/


CREATE INDEX KREW_RTE_BRCH_ST_TI1 
  ON KREW_RTE_BRCH_ST_T 
  (RTE_BRCH_ID, KEY_CD)
/
CREATE INDEX KREW_RTE_BRCH_ST_TI2 
  ON KREW_RTE_BRCH_ST_T 
  (RTE_BRCH_ID)
/
CREATE INDEX KREW_RTE_BRCH_ST_TI3 
  ON KREW_RTE_BRCH_ST_T 
  (KEY_CD, VAL)
/





-----------------------------------------------------------------------------
-- KREW_RTE_BRCH_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_RTE_BRCH_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_RTE_BRCH_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_RTE_BRCH_T
(
      RTE_BRCH_ID NUMBER(19)
        , NM VARCHAR2(255) NOT NULL
        , PARNT_ID NUMBER(19)
        , INIT_RTE_NODE_INSTN_ID NUMBER(19)
        , SPLT_RTE_NODE_INSTN_ID NUMBER(19)
        , JOIN_RTE_NODE_INSTN_ID NUMBER(19)
        , VER_NBR NUMBER(8) default 0
    

)
/

ALTER TABLE KREW_RTE_BRCH_T
    ADD CONSTRAINT KREW_RTE_BRCH_TP1
PRIMARY KEY (RTE_BRCH_ID)
/


CREATE INDEX KREW_RTE_BRCH_TI1 
  ON KREW_RTE_BRCH_T 
  (NM)
/
CREATE INDEX KREW_RTE_BRCH_TI2 
  ON KREW_RTE_BRCH_T 
  (PARNT_ID)
/
CREATE INDEX KREW_RTE_BRCH_TI3 
  ON KREW_RTE_BRCH_T 
  (INIT_RTE_NODE_INSTN_ID)
/
CREATE INDEX KREW_RTE_BRCH_TI4 
  ON KREW_RTE_BRCH_T 
  (SPLT_RTE_NODE_INSTN_ID)
/
CREATE INDEX KREW_RTE_BRCH_TI5 
  ON KREW_RTE_BRCH_T 
  (JOIN_RTE_NODE_INSTN_ID)
/





-----------------------------------------------------------------------------
-- KREW_RTE_NODE_CFG_PARM_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_RTE_NODE_CFG_PARM_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_RTE_NODE_CFG_PARM_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_RTE_NODE_CFG_PARM_T
(
      RTE_NODE_CFG_PARM_ID NUMBER(19)
        , RTE_NODE_ID NUMBER(19) NOT NULL
        , KEY_CD VARCHAR2(255) NOT NULL
        , VAL VARCHAR2(4000)
    

)
/

ALTER TABLE KREW_RTE_NODE_CFG_PARM_T
    ADD CONSTRAINT KREW_RTE_NODE_CFG_PARM_TP1
PRIMARY KEY (RTE_NODE_CFG_PARM_ID)
/


CREATE INDEX KREW_RTE_NODE_CFG_PARM_TI1 
  ON KREW_RTE_NODE_CFG_PARM_T 
  (RTE_NODE_ID)
/





-----------------------------------------------------------------------------
-- KREW_RTE_NODE_INSTN_LNK_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_RTE_NODE_INSTN_LNK_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_RTE_NODE_INSTN_LNK_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_RTE_NODE_INSTN_LNK_T
(
      FROM_RTE_NODE_INSTN_ID NUMBER(19)
        , TO_RTE_NODE_INSTN_ID NUMBER(19)
    

)
/

ALTER TABLE KREW_RTE_NODE_INSTN_LNK_T
    ADD CONSTRAINT KREW_RTE_NODE_INSTN_LNK_TP1
PRIMARY KEY (FROM_RTE_NODE_INSTN_ID,TO_RTE_NODE_INSTN_ID)
/


CREATE INDEX KREW_RTE_NODE_INSTN_LNK_TI1 
  ON KREW_RTE_NODE_INSTN_LNK_T 
  (FROM_RTE_NODE_INSTN_ID)
/
CREATE INDEX KREW_RTE_NODE_INSTN_LNK_TI2 
  ON KREW_RTE_NODE_INSTN_LNK_T 
  (TO_RTE_NODE_INSTN_ID)
/





-----------------------------------------------------------------------------
-- KREW_RTE_NODE_INSTN_ST_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_RTE_NODE_INSTN_ST_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_RTE_NODE_INSTN_ST_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_RTE_NODE_INSTN_ST_T
(
      RTE_NODE_INSTN_ST_ID NUMBER(19)
        , RTE_NODE_INSTN_ID NUMBER(19) NOT NULL
        , KEY_CD VARCHAR2(255) NOT NULL
        , VAL VARCHAR2(2000)
        , VER_NBR NUMBER(8) default 0
    

)
/

ALTER TABLE KREW_RTE_NODE_INSTN_ST_T
    ADD CONSTRAINT KREW_RTE_NODE_INSTN_ST_TP1
PRIMARY KEY (RTE_NODE_INSTN_ST_ID)
/


CREATE INDEX KREW_RTE_NODE_INSTN_ST_TI1 
  ON KREW_RTE_NODE_INSTN_ST_T 
  (RTE_NODE_INSTN_ID, KEY_CD)
/
CREATE INDEX KREW_RTE_NODE_INSTN_ST_TI2 
  ON KREW_RTE_NODE_INSTN_ST_T 
  (RTE_NODE_INSTN_ID)
/
CREATE INDEX KREW_RTE_NODE_INSTN_ST_TI3 
  ON KREW_RTE_NODE_INSTN_ST_T 
  (KEY_CD, VAL)
/





-----------------------------------------------------------------------------
-- KREW_RTE_NODE_INSTN_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_RTE_NODE_INSTN_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_RTE_NODE_INSTN_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_RTE_NODE_INSTN_T
(
      RTE_NODE_INSTN_ID NUMBER(19)
        , DOC_HDR_ID NUMBER(19) NOT NULL
        , RTE_NODE_ID NUMBER(19) NOT NULL
        , BRCH_ID NUMBER(19)
        , PROC_RTE_NODE_INSTN_ID NUMBER(19)
        , ACTV_IND NUMBER(1) default 0 NOT NULL
        , CMPLT_IND NUMBER(1) default 0 NOT NULL
        , INIT_IND NUMBER(1) default 0 NOT NULL
        , VER_NBR NUMBER(8) default 0
    

)
/

ALTER TABLE KREW_RTE_NODE_INSTN_T
    ADD CONSTRAINT KREW_RTE_NODE_INSTN_TP1
PRIMARY KEY (RTE_NODE_INSTN_ID)
/


CREATE INDEX KREW_RTE_NODE_INSTN_TI1 
  ON KREW_RTE_NODE_INSTN_T 
  (DOC_HDR_ID, ACTV_IND, CMPLT_IND)
/
CREATE INDEX KREW_RTE_NODE_INSTN_TI2 
  ON KREW_RTE_NODE_INSTN_T 
  (RTE_NODE_ID)
/
CREATE INDEX KREW_RTE_NODE_INSTN_TI3 
  ON KREW_RTE_NODE_INSTN_T 
  (BRCH_ID)
/
CREATE INDEX KREW_RTE_NODE_INSTN_TI4 
  ON KREW_RTE_NODE_INSTN_T 
  (PROC_RTE_NODE_INSTN_ID)
/





-----------------------------------------------------------------------------
-- KREW_RTE_NODE_LNK_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_RTE_NODE_LNK_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_RTE_NODE_LNK_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_RTE_NODE_LNK_T
(
      FROM_RTE_NODE_ID NUMBER(19)
        , TO_RTE_NODE_ID NUMBER(19)
    

)
/

ALTER TABLE KREW_RTE_NODE_LNK_T
    ADD CONSTRAINT KREW_RTE_NODE_LNK_TP1
PRIMARY KEY (FROM_RTE_NODE_ID,TO_RTE_NODE_ID)
/


CREATE INDEX KREW_RTE_NODE_LNK_TI1 
  ON KREW_RTE_NODE_LNK_T 
  (FROM_RTE_NODE_ID)
/
CREATE INDEX KREW_RTE_NODE_LNK_TI2 
  ON KREW_RTE_NODE_LNK_T 
  (TO_RTE_NODE_ID)
/





-----------------------------------------------------------------------------
-- KREW_RTE_NODE_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_RTE_NODE_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_RTE_NODE_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_RTE_NODE_T
(
      RTE_NODE_ID NUMBER(19)
        , DOC_TYP_ID NUMBER(19)
        , NM VARCHAR2(255) NOT NULL
        , TYP VARCHAR2(255) NOT NULL
        , RTE_MTHD_NM VARCHAR2(255)
        , RTE_MTHD_CD VARCHAR2(2)
        , FNL_APRVR_IND NUMBER(1)
        , MNDTRY_RTE_IND NUMBER(1)
        , ACTVN_TYP VARCHAR2(250)
        , BRCH_PROTO_ID NUMBER(19)
        , VER_NBR NUMBER(8) default 0
        , CONTENT_FRAGMENT VARCHAR2(4000)
        , GRP_ID VARCHAR2(40)
        , NEXT_DOC_STAT VARCHAR2(64)
    

)
/

ALTER TABLE KREW_RTE_NODE_T
    ADD CONSTRAINT KREW_RTE_NODE_TP1
PRIMARY KEY (RTE_NODE_ID)
/


CREATE INDEX KREW_RTE_NODE_TI1 
  ON KREW_RTE_NODE_T 
  (NM, DOC_TYP_ID)
/
CREATE INDEX KREW_RTE_NODE_TI2 
  ON KREW_RTE_NODE_T 
  (DOC_TYP_ID, FNL_APRVR_IND)
/
CREATE INDEX KREW_RTE_NODE_TI3 
  ON KREW_RTE_NODE_T 
  (BRCH_PROTO_ID)
/
CREATE INDEX KREW_RTE_NODE_TI4 
  ON KREW_RTE_NODE_T 
  (DOC_TYP_ID)
/





-----------------------------------------------------------------------------
-- KREW_RULE_ATTR_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_RULE_ATTR_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_RULE_ATTR_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_RULE_ATTR_T
(
      RULE_ATTR_ID NUMBER(19)
        , NM VARCHAR2(255) NOT NULL
        , LBL VARCHAR2(2000) NOT NULL
        , RULE_ATTR_TYP_CD VARCHAR2(2000) NOT NULL
        , DESC_TXT VARCHAR2(2000)
        , CLS_NM VARCHAR2(2000)
        , XML CLOB
        , VER_NBR NUMBER(8) default 0
        , SVC_NMSPC VARCHAR2(255)
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE KREW_RULE_ATTR_T
    ADD CONSTRAINT KREW_RULE_ATTR_TP1
PRIMARY KEY (RULE_ATTR_ID)
/


CREATE INDEX KREW_RULE_ATTR_TC0 
  ON KREW_RULE_ATTR_T 
  (OBJ_ID)
/





-----------------------------------------------------------------------------
-- KREW_RULE_EXPR_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_RULE_EXPR_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_RULE_EXPR_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_RULE_EXPR_T
(
      RULE_EXPR_ID NUMBER(19)
        , TYP VARCHAR2(256) NOT NULL
        , RULE_EXPR VARCHAR2(4000)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 0
    

)
/

ALTER TABLE KREW_RULE_EXPR_T
    ADD CONSTRAINT KREW_RULE_EXPR_TP1
PRIMARY KEY (RULE_EXPR_ID)
/


CREATE INDEX KREW_RULE_EXPR_TC0 
  ON KREW_RULE_EXPR_T 
  (OBJ_ID)
/





-----------------------------------------------------------------------------
-- KREW_RULE_EXT_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_RULE_EXT_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_RULE_EXT_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_RULE_EXT_T
(
      RULE_EXT_ID NUMBER(19)
        , RULE_TMPL_ATTR_ID NUMBER(19) NOT NULL
        , RULE_ID NUMBER(19) NOT NULL
        , VER_NBR NUMBER(8) default 0
    

)
/

ALTER TABLE KREW_RULE_EXT_T
    ADD CONSTRAINT KREW_RULE_EXT_TP1
PRIMARY KEY (RULE_EXT_ID)
/


CREATE INDEX KREW_RULE_EXT_T1 
  ON KREW_RULE_EXT_T 
  (RULE_ID)
/





-----------------------------------------------------------------------------
-- KREW_RULE_EXT_VAL_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_RULE_EXT_VAL_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_RULE_EXT_VAL_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_RULE_EXT_VAL_T
(
      RULE_EXT_VAL_ID NUMBER(19)
        , RULE_EXT_ID NUMBER(19) NOT NULL
        , VAL VARCHAR2(2000) NOT NULL
        , KEY_CD VARCHAR2(2000) NOT NULL
        , VER_NBR NUMBER(8) default 0
    

)
/

ALTER TABLE KREW_RULE_EXT_VAL_T
    ADD CONSTRAINT KREW_RULE_EXT_VAL_TP1
PRIMARY KEY (RULE_EXT_VAL_ID)
/


CREATE INDEX KREW_RULE_EXT_VAL_T1 
  ON KREW_RULE_EXT_VAL_T 
  (RULE_EXT_ID)
/
CREATE INDEX KREW_RULE_EXT_VAL_T2 
  ON KREW_RULE_EXT_VAL_T 
  (RULE_EXT_VAL_ID, KEY_CD)
/





-----------------------------------------------------------------------------
-- KREW_RULE_RSP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_RULE_RSP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_RULE_RSP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_RULE_RSP_T
(
      RULE_RSP_ID NUMBER(19)
        , RSP_ID NUMBER(19) NOT NULL
        , RULE_ID NUMBER(19) NOT NULL
        , PRIO NUMBER(5)
        , ACTN_RQST_CD VARCHAR2(2000)
        , NM VARCHAR2(200)
        , TYP VARCHAR2(1)
        , APPR_PLCY CHAR(1)
        , VER_NBR NUMBER(8) default 0
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE KREW_RULE_RSP_T
    ADD CONSTRAINT KREW_RULE_RSP_TP1
PRIMARY KEY (RULE_RSP_ID)
/


CREATE INDEX KREW_RULE_RSP_TC0 
  ON KREW_RULE_RSP_T 
  (OBJ_ID)
/
CREATE INDEX KREW_RULE_RSP_TI1 
  ON KREW_RULE_RSP_T 
  (RULE_ID)
/





-----------------------------------------------------------------------------
-- KREW_RULE_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_RULE_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_RULE_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_RULE_T
(
      RULE_ID NUMBER(19)
        , NM VARCHAR2(256)
        , RULE_TMPL_ID NUMBER(19)
        , RULE_EXPR_ID NUMBER(19)
        , ACTV_IND NUMBER(1) NOT NULL
        , RULE_BASE_VAL_DESC VARCHAR2(2000)
        , FRC_ACTN NUMBER(1) NOT NULL
        , DOC_TYP_NM VARCHAR2(64) NOT NULL
        , DOC_HDR_ID NUMBER(14)
        , TMPL_RULE_IND NUMBER(1)
        , FRM_DT DATE
        , TO_DT DATE
        , DACTVN_DT DATE
        , CUR_IND NUMBER(1) default 0
        , RULE_VER_NBR NUMBER(8) default 0
        , DLGN_IND NUMBER(1)
        , PREV_RULE_VER_NBR NUMBER(19)
        , ACTVN_DT DATE
        , VER_NBR NUMBER(8) default 0
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE KREW_RULE_T
    ADD CONSTRAINT KREW_RULE_TP1
PRIMARY KEY (RULE_ID)
/


CREATE INDEX KREW_RULE_TC0 
  ON KREW_RULE_T 
  (OBJ_ID)
/





-----------------------------------------------------------------------------
-- KREW_RULE_TMPL_ATTR_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_RULE_TMPL_ATTR_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_RULE_TMPL_ATTR_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_RULE_TMPL_ATTR_T
(
      RULE_TMPL_ATTR_ID NUMBER(19)
        , RULE_TMPL_ID NUMBER(19) NOT NULL
        , RULE_ATTR_ID NUMBER(19) NOT NULL
        , REQ_IND NUMBER(1) NOT NULL
        , ACTV_IND NUMBER(1) NOT NULL
        , DSPL_ORD NUMBER(5) NOT NULL
        , DFLT_VAL VARCHAR2(2000)
        , VER_NBR NUMBER(8) default 0
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE KREW_RULE_TMPL_ATTR_T
    ADD CONSTRAINT KREW_RULE_TMPL_ATTR_TP1
PRIMARY KEY (RULE_TMPL_ATTR_ID)
/


CREATE INDEX KREW_RULE_TMPL_ATTR_TC0 
  ON KREW_RULE_TMPL_ATTR_T 
  (OBJ_ID)
/
CREATE INDEX KREW_RULE_TMPL_ATTR_TI1 
  ON KREW_RULE_TMPL_ATTR_T 
  (RULE_TMPL_ID)
/
CREATE INDEX KREW_RULE_TMPL_ATTR_TI2 
  ON KREW_RULE_TMPL_ATTR_T 
  (RULE_ATTR_ID)
/





-----------------------------------------------------------------------------
-- KREW_RULE_TMPL_OPTN_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_RULE_TMPL_OPTN_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_RULE_TMPL_OPTN_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_RULE_TMPL_OPTN_T
(
      RULE_TMPL_OPTN_ID NUMBER(19)
        , RULE_TMPL_ID NUMBER(19)
        , KEY_CD VARCHAR2(250)
        , VAL VARCHAR2(2000)
        , VER_NBR NUMBER(8) default 0
    

)
/

ALTER TABLE KREW_RULE_TMPL_OPTN_T
    ADD CONSTRAINT KREW_RULE_TMPL_OPTN_TP1
PRIMARY KEY (RULE_TMPL_OPTN_ID)
/







-----------------------------------------------------------------------------
-- KREW_RULE_TMPL_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_RULE_TMPL_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_RULE_TMPL_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_RULE_TMPL_T
(
      RULE_TMPL_ID NUMBER(19)
        , NM VARCHAR2(250) NOT NULL
        , RULE_TMPL_DESC VARCHAR2(2000)
        , DLGN_RULE_TMPL_ID NUMBER(19)
        , VER_NBR NUMBER(8) default 0
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE KREW_RULE_TMPL_T
    ADD CONSTRAINT KREW_RULE_TMPL_TP1
PRIMARY KEY (RULE_TMPL_ID)
/


CREATE INDEX KREW_RULE_TMPL_TC0 
  ON KREW_RULE_TMPL_T 
  (OBJ_ID)
/
CREATE INDEX KREW_RULE_TMPL_TI1 
  ON KREW_RULE_TMPL_T 
  (NM)
/





-----------------------------------------------------------------------------
-- KREW_STYLE_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_STYLE_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_STYLE_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_STYLE_T
(
      STYLE_ID NUMBER(19)
        , NM VARCHAR2(200) NOT NULL
        , XML CLOB NOT NULL
        , ACTV_IND NUMBER(1) NOT NULL
        , VER_NBR NUMBER(8) default 0
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE KREW_STYLE_T
    ADD CONSTRAINT KREW_STYLE_TP1
PRIMARY KEY (STYLE_ID)
/


CREATE INDEX KREW_STYLE_TC0 
  ON KREW_STYLE_T 
  (OBJ_ID)
/





-----------------------------------------------------------------------------
-- KREW_USR_OPTN_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KREW_USR_OPTN_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KREW_USR_OPTN_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KREW_USR_OPTN_T
(
      PRNCPL_ID VARCHAR2(40)
        , PRSN_OPTN_ID VARCHAR2(200)
        , VAL VARCHAR2(2000)
        , VER_NBR NUMBER(8) default 0
    

)
/

ALTER TABLE KREW_USR_OPTN_T
    ADD CONSTRAINT KREW_USR_OPTN_TP1
PRIMARY KEY (PRNCPL_ID,PRSN_OPTN_ID)
/


CREATE INDEX KREW_USR_OPTN_TI1 
  ON KREW_USR_OPTN_T 
  (PRNCPL_ID)
/





-----------------------------------------------------------------------------
-- KRIM_ADDR_TYP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_ADDR_TYP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_ADDR_TYP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_ADDR_TYP_T
(
      ADDR_TYP_CD VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , NM VARCHAR2(40)
        , ACTV_IND VARCHAR2(1) default 'Y'
        , DISPLAY_SORT_CD VARCHAR2(2)
        , LAST_UPDT_DT DATE NOT NULL
    

)
/

ALTER TABLE KRIM_ADDR_TYP_T
    ADD CONSTRAINT KRIM_ADDR_TYP_TP1
PRIMARY KEY (ADDR_TYP_CD)
/


CREATE INDEX KRIM_ADDR_TYP_TC0 
  ON KRIM_ADDR_TYP_T 
  (OBJ_ID)
/
CREATE INDEX KRIM_ADDR_TYP_TC1 
  ON KRIM_ADDR_TYP_T 
  (NM)
/





-----------------------------------------------------------------------------
-- KRIM_AFLTN_TYP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_AFLTN_TYP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_AFLTN_TYP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_AFLTN_TYP_T
(
      AFLTN_TYP_CD VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , NM VARCHAR2(40)
        , EMP_AFLTN_TYP_IND VARCHAR2(1) default 'N'
        , ACTV_IND VARCHAR2(1) default 'Y'
        , DISPLAY_SORT_CD VARCHAR2(2)
        , LAST_UPDT_DT DATE NOT NULL
    

)
/

ALTER TABLE KRIM_AFLTN_TYP_T
    ADD CONSTRAINT KRIM_AFLTN_TYP_TP1
PRIMARY KEY (AFLTN_TYP_CD)
/


CREATE INDEX KRIM_AFLTN_TYP_TC0 
  ON KRIM_AFLTN_TYP_T 
  (OBJ_ID)
/
CREATE INDEX KRIM_AFLTN_TYP_TC1 
  ON KRIM_AFLTN_TYP_T 
  (NM)
/





-----------------------------------------------------------------------------
-- KRIM_ATTR_DEFN_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_ATTR_DEFN_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_ATTR_DEFN_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_ATTR_DEFN_T
(
      KIM_ATTR_DEFN_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , NM VARCHAR2(100)
        , LBL VARCHAR2(40)
        , ACTV_IND VARCHAR2(1) default 'Y'
        , NMSPC_CD VARCHAR2(40)
        , CMPNT_NM VARCHAR2(100)
    

)
/

ALTER TABLE KRIM_ATTR_DEFN_T
    ADD CONSTRAINT KRIM_ATTR_DEFN_TP1
PRIMARY KEY (KIM_ATTR_DEFN_ID)
/


CREATE INDEX KRIM_ATTR_DEFN_TC0 
  ON KRIM_ATTR_DEFN_T 
  (OBJ_ID)
/





-----------------------------------------------------------------------------
-- KRIM_CTZNSHP_STAT_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_CTZNSHP_STAT_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_CTZNSHP_STAT_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_CTZNSHP_STAT_T
(
      NM VARCHAR2(40)
        , ACTV_IND VARCHAR2(1) default 'Y'
        , DISPLAY_SORT_CD VARCHAR2(2)
        , CTZNSHP_STAT_CD VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , LAST_UPDT_DT DATE NOT NULL
    

)
/

ALTER TABLE KRIM_CTZNSHP_STAT_T
    ADD CONSTRAINT KRIM_CTZNSHP_STAT_TP1
PRIMARY KEY (CTZNSHP_STAT_CD)
/


CREATE INDEX KRIM_CTZNSHP_STAT_TC0 
  ON KRIM_CTZNSHP_STAT_T 
  (OBJ_ID)
/
CREATE INDEX KRIM_CTZNSHP_STAT_TC1 
  ON KRIM_CTZNSHP_STAT_T 
  (NM)
/





-----------------------------------------------------------------------------
-- KRIM_DLGN_MBR_ATTR_DATA_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_DLGN_MBR_ATTR_DATA_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_DLGN_MBR_ATTR_DATA_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_DLGN_MBR_ATTR_DATA_T
(
      ATTR_DATA_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , DLGN_MBR_ID VARCHAR2(40)
        , KIM_TYP_ID VARCHAR2(40) NOT NULL
        , KIM_ATTR_DEFN_ID VARCHAR2(40)
        , ATTR_VAL VARCHAR2(400)
    

)
/

ALTER TABLE KRIM_DLGN_MBR_ATTR_DATA_T
    ADD CONSTRAINT KRIM_DLGN_MBR_ATTR_DATA_TP1
PRIMARY KEY (ATTR_DATA_ID)
/


CREATE INDEX KRIM_DLGN_MBR_ATTR_DATA_TC0 
  ON KRIM_DLGN_MBR_ATTR_DATA_T 
  (OBJ_ID)
/





-----------------------------------------------------------------------------
-- KRIM_DLGN_MBR_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_DLGN_MBR_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_DLGN_MBR_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_DLGN_MBR_T
(
      ROLE_MBR_ID VARCHAR2(40)
        , DLGN_MBR_ID VARCHAR2(40)
        , VER_NBR NUMBER(8) NOT NULL
        , OBJ_ID VARCHAR2(36) NOT NULL
        , DLGN_ID VARCHAR2(40)
        , MBR_ID VARCHAR2(40)
        , MBR_TYP_CD CHAR(1) default 'P'
        , ACTV_FRM_DT DATE
        , ACTV_TO_DT DATE
        , LAST_UPDT_DT DATE NOT NULL
    

)
/

ALTER TABLE KRIM_DLGN_MBR_T
    ADD CONSTRAINT KRIM_DLGN_MBR_TP1
PRIMARY KEY (DLGN_MBR_ID)
/


CREATE INDEX KRIM_DLGN_MBR_TC0 
  ON KRIM_DLGN_MBR_T 
  (OBJ_ID)
/





-----------------------------------------------------------------------------
-- KRIM_DLGN_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_DLGN_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_DLGN_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_DLGN_T
(
      DLGN_ID VARCHAR2(40)
        , VER_NBR NUMBER(8) NOT NULL
        , OBJ_ID VARCHAR2(36) NOT NULL
        , ROLE_ID VARCHAR2(40)
        , ACTV_IND VARCHAR2(1) default 'Y'
        , KIM_TYP_ID VARCHAR2(40) NOT NULL
        , DLGN_TYP_CD VARCHAR2(1)
    

)
/

ALTER TABLE KRIM_DLGN_T
    ADD CONSTRAINT KRIM_DLGN_TP1
PRIMARY KEY (DLGN_ID)
/


CREATE INDEX KRIM_DLGN_TC0 
  ON KRIM_DLGN_T 
  (OBJ_ID)
/





-----------------------------------------------------------------------------
-- KRIM_EMAIL_TYP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_EMAIL_TYP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_EMAIL_TYP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_EMAIL_TYP_T
(
      EMAIL_TYP_CD VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , NM VARCHAR2(40)
        , ACTV_IND VARCHAR2(1) default 'Y'
        , DISPLAY_SORT_CD VARCHAR2(2)
        , LAST_UPDT_DT DATE NOT NULL
    

)
/

ALTER TABLE KRIM_EMAIL_TYP_T
    ADD CONSTRAINT KRIM_EMAIL_TYP_TP1
PRIMARY KEY (EMAIL_TYP_CD)
/


CREATE INDEX KRIM_EMAIL_TYP_TC0 
  ON KRIM_EMAIL_TYP_T 
  (OBJ_ID)
/
CREATE INDEX KRIM_EMAIL_TYP_TC1 
  ON KRIM_EMAIL_TYP_T 
  (NM)
/





-----------------------------------------------------------------------------
-- KRIM_EMP_STAT_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_EMP_STAT_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_EMP_STAT_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_EMP_STAT_T
(
      EMP_STAT_CD VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , NM VARCHAR2(40)
        , ACTV_IND VARCHAR2(1) default 'Y'
        , DISPLAY_SORT_CD VARCHAR2(2)
        , LAST_UPDT_DT DATE NOT NULL
    

)
/

ALTER TABLE KRIM_EMP_STAT_T
    ADD CONSTRAINT KRIM_EMP_STAT_TP1
PRIMARY KEY (EMP_STAT_CD)
/


CREATE INDEX KRIM_EMP_STAT_TC0 
  ON KRIM_EMP_STAT_T 
  (OBJ_ID)
/
CREATE INDEX KRIM_EMP_STAT_TC1 
  ON KRIM_EMP_STAT_T 
  (NM)
/





-----------------------------------------------------------------------------
-- KRIM_EMP_TYP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_EMP_TYP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_EMP_TYP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_EMP_TYP_T
(
      EMP_TYP_CD VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , NM VARCHAR2(40)
        , ACTV_IND VARCHAR2(1) default 'Y'
        , DISPLAY_SORT_CD VARCHAR2(2)
        , LAST_UPDT_DT DATE NOT NULL
    

)
/

ALTER TABLE KRIM_EMP_TYP_T
    ADD CONSTRAINT KRIM_EMP_TYP_TP1
PRIMARY KEY (EMP_TYP_CD)
/


CREATE INDEX KRIM_EMP_TYP_TC0 
  ON KRIM_EMP_TYP_T 
  (OBJ_ID)
/
CREATE INDEX KRIM_EMP_TYP_TC1 
  ON KRIM_EMP_TYP_T 
  (NM)
/





-----------------------------------------------------------------------------
-- KRIM_ENTITY_ADDR_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_ENTITY_ADDR_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_ENTITY_ADDR_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_ENTITY_ADDR_T
(
      POSTAL_CNTRY_CD VARCHAR2(2)
        , DFLT_IND VARCHAR2(1) default 'N'
        , ACTV_IND VARCHAR2(1) default 'Y'
        , ENTITY_ADDR_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , ENTITY_ID VARCHAR2(40)
        , ENT_TYP_CD VARCHAR2(40)
        , ADDR_TYP_CD VARCHAR2(40)
        , ADDR_LINE_1 VARCHAR2(45)
        , ADDR_LINE_2 VARCHAR2(45)
        , ADDR_LINE_3 VARCHAR2(45)
        , CITY_NM VARCHAR2(30)
        , POSTAL_STATE_CD VARCHAR2(2)
        , POSTAL_CD VARCHAR2(20)
        , LAST_UPDT_DT DATE NOT NULL
    

)
/

ALTER TABLE KRIM_ENTITY_ADDR_T
    ADD CONSTRAINT KRIM_ENTITY_ADDR_TP1
PRIMARY KEY (ENTITY_ADDR_ID)
/


CREATE INDEX KRIM_ENTITY_ADDR_TC0 
  ON KRIM_ENTITY_ADDR_T 
  (OBJ_ID)
/
CREATE INDEX KRIM_ENTITY_ADDR_TI1 
  ON KRIM_ENTITY_ADDR_T 
  (ENTITY_ID)
/





-----------------------------------------------------------------------------
-- KRIM_ENTITY_AFLTN_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_ENTITY_AFLTN_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_ENTITY_AFLTN_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_ENTITY_AFLTN_T
(
      ENTITY_AFLTN_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , ENTITY_ID VARCHAR2(40)
        , AFLTN_TYP_CD VARCHAR2(40)
        , CAMPUS_CD VARCHAR2(2)
        , DFLT_IND VARCHAR2(1) default 'N'
        , ACTV_IND VARCHAR2(1) default 'Y'
        , LAST_UPDT_DT DATE NOT NULL
    

)
/

ALTER TABLE KRIM_ENTITY_AFLTN_T
    ADD CONSTRAINT KRIM_ENTITY_AFLTN_TP1
PRIMARY KEY (ENTITY_AFLTN_ID)
/


CREATE INDEX KRIM_ENTITY_AFLTN_TC0 
  ON KRIM_ENTITY_AFLTN_T 
  (OBJ_ID)
/
CREATE INDEX KRIM_ENTITY_AFLTN_TI1 
  ON KRIM_ENTITY_AFLTN_T 
  (ENTITY_ID)
/





-----------------------------------------------------------------------------
-- KRIM_ENTITY_BIO_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_ENTITY_BIO_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_ENTITY_BIO_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_ENTITY_BIO_T
(
      DECEASED_DT DATE
        , MARITAL_STATUS VARCHAR2(40)
        , PRIM_LANG_CD VARCHAR2(40)
        , SEC_LANG_CD VARCHAR2(40)
        , BIRTH_CNTRY_CD VARCHAR2(2)
        , BIRTH_STATE_CD VARCHAR2(2)
        , BIRTH_CITY VARCHAR2(30)
        , GEO_ORIGIN VARCHAR2(100)
        , ENTITY_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , BIRTH_DT DATE
        , GNDR_CD VARCHAR2(1) NOT NULL
        , LAST_UPDT_DT DATE NOT NULL
    

)
/

ALTER TABLE KRIM_ENTITY_BIO_T
    ADD CONSTRAINT KRIM_ENTITY_BIO_TP1
PRIMARY KEY (ENTITY_ID)
/


CREATE INDEX KRIM_ENTITY_BIO_TC0 
  ON KRIM_ENTITY_BIO_T 
  (OBJ_ID)
/





-----------------------------------------------------------------------------
-- KRIM_ENTITY_CACHE_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_ENTITY_CACHE_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_ENTITY_CACHE_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_ENTITY_CACHE_T
(
      ENTITY_ID VARCHAR2(40)
        , PRNCPL_ID VARCHAR2(40) NOT NULL
        , PRNCPL_NM VARCHAR2(40)
        , ENTITY_TYP_CD VARCHAR2(40)
        , FIRST_NM VARCHAR2(40)
        , MIDDLE_NM VARCHAR2(40)
        , LAST_NM VARCHAR2(40)
        , PRSN_NM VARCHAR2(40)
        , CAMPUS_CD VARCHAR2(40)
        , PRMRY_DEPT_CD VARCHAR2(40)
        , EMP_ID VARCHAR2(40)
        , LAST_UPDT_TS DATE
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE KRIM_ENTITY_CACHE_T
    ADD CONSTRAINT KRIM_ENTITY_CACHE_TP1
PRIMARY KEY (ENTITY_ID)
/


CREATE INDEX KRIM_ENTITY_CACHE_TC0 
  ON KRIM_ENTITY_CACHE_T 
  (OBJ_ID)
/
CREATE INDEX KRIM_ENTITY_CACHE_TC1 
  ON KRIM_ENTITY_CACHE_T 
  (PRNCPL_ID)
/





-----------------------------------------------------------------------------
-- KRIM_ENTITY_CTZNSHP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_ENTITY_CTZNSHP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_ENTITY_CTZNSHP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_ENTITY_CTZNSHP_T
(
      ENTITY_CTZNSHP_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , ENTITY_ID VARCHAR2(40)
        , POSTAL_CNTRY_CD VARCHAR2(2)
        , CTZNSHP_STAT_CD VARCHAR2(40)
        , STRT_DT DATE
        , END_DT DATE
        , ACTV_IND VARCHAR2(1) default 'Y'
        , LAST_UPDT_DT DATE NOT NULL
    

)
/

ALTER TABLE KRIM_ENTITY_CTZNSHP_T
    ADD CONSTRAINT KRIM_ENTITY_CTZNSHP_TP1
PRIMARY KEY (ENTITY_CTZNSHP_ID)
/


CREATE INDEX KRIM_ENTITY_CTZNSHP_TC0 
  ON KRIM_ENTITY_CTZNSHP_T 
  (OBJ_ID)
/





-----------------------------------------------------------------------------
-- KRIM_ENTITY_EMAIL_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_ENTITY_EMAIL_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_ENTITY_EMAIL_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_ENTITY_EMAIL_T
(
      ENTITY_EMAIL_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , ENTITY_ID VARCHAR2(40)
        , ENT_TYP_CD VARCHAR2(40)
        , EMAIL_TYP_CD VARCHAR2(40)
        , EMAIL_ADDR VARCHAR2(200)
        , DFLT_IND VARCHAR2(1) default 'N'
        , ACTV_IND VARCHAR2(1) default 'Y'
        , LAST_UPDT_DT DATE NOT NULL
    

)
/

ALTER TABLE KRIM_ENTITY_EMAIL_T
    ADD CONSTRAINT KRIM_ENTITY_EMAIL_TP1
PRIMARY KEY (ENTITY_EMAIL_ID)
/


CREATE INDEX KRIM_ENTITY_EMAIL_TC0 
  ON KRIM_ENTITY_EMAIL_T 
  (OBJ_ID)
/
CREATE INDEX KRIM_ENTITY_EMAIL_TI1 
  ON KRIM_ENTITY_EMAIL_T 
  (ENTITY_ID)
/





-----------------------------------------------------------------------------
-- KRIM_ENTITY_EMP_INFO_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_ENTITY_EMP_INFO_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_ENTITY_EMP_INFO_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_ENTITY_EMP_INFO_T
(
      ENTITY_EMP_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , ENTITY_ID VARCHAR2(40)
        , ENTITY_AFLTN_ID VARCHAR2(40)
        , EMP_STAT_CD VARCHAR2(40)
        , EMP_TYP_CD VARCHAR2(40)
        , BASE_SLRY_AMT NUMBER(15,2)
        , PRMRY_IND VARCHAR2(1)
        , ACTV_IND VARCHAR2(1) default 'Y'
        , PRMRY_DEPT_CD VARCHAR2(40)
        , EMP_ID VARCHAR2(40)
        , EMP_REC_ID VARCHAR2(40)
        , LAST_UPDT_DT DATE NOT NULL
    

)
/

ALTER TABLE KRIM_ENTITY_EMP_INFO_T
    ADD CONSTRAINT KRIM_ENTITY_EMP_INFO_TP1
PRIMARY KEY (ENTITY_EMP_ID)
/


CREATE INDEX KRIM_ENTITY_EMP_INFO_TC0 
  ON KRIM_ENTITY_EMP_INFO_T 
  (OBJ_ID)
/
CREATE INDEX KRIM_ENTITY_EMP_INFO_TI1 
  ON KRIM_ENTITY_EMP_INFO_T 
  (ENTITY_ID)
/
CREATE INDEX KRIM_ENTITY_EMP_INFO_TI2 
  ON KRIM_ENTITY_EMP_INFO_T 
  (ENTITY_AFLTN_ID)
/





-----------------------------------------------------------------------------
-- KRIM_ENTITY_ENT_TYP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_ENTITY_ENT_TYP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_ENTITY_ENT_TYP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_ENTITY_ENT_TYP_T
(
      ACTV_IND VARCHAR2(1) default 'Y'
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , ENT_TYP_CD VARCHAR2(40)
        , ENTITY_ID VARCHAR2(40)
        , LAST_UPDT_DT DATE NOT NULL
    

)
/

ALTER TABLE KRIM_ENTITY_ENT_TYP_T
    ADD CONSTRAINT KRIM_ENTITY_ENT_TYP_TP1
PRIMARY KEY (ENT_TYP_CD,ENTITY_ID)
/


CREATE INDEX KRIM_ENTITY_ENT_TYP_TI1 
  ON KRIM_ENTITY_ENT_TYP_T 
  (ENTITY_ID)
/
CREATE INDEX KR_KIM_ENTITY_ENT_TYPE_TC0 
  ON KRIM_ENTITY_ENT_TYP_T 
  (OBJ_ID)
/





-----------------------------------------------------------------------------
-- KRIM_ENTITY_ETHNIC_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_ENTITY_ETHNIC_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_ENTITY_ETHNIC_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_ENTITY_ETHNIC_T
(
      ID VARCHAR2(40)
        , ENTITY_ID VARCHAR2(40)
        , ETHNCTY_CD VARCHAR2(40)
        , SUB_ETHNCTY_CD VARCHAR2(40)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE KRIM_ENTITY_ETHNIC_T
    ADD CONSTRAINT KRIM_ENTITY_ETHNIC_TP1
PRIMARY KEY (ID)
/


CREATE INDEX KRIM_ENTITY_ETHNIC_TC0 
  ON KRIM_ENTITY_ETHNIC_T 
  (OBJ_ID)
/





-----------------------------------------------------------------------------
-- KRIM_ENTITY_EXT_ID_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_ENTITY_EXT_ID_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_ENTITY_EXT_ID_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_ENTITY_EXT_ID_T
(
      ENTITY_EXT_ID_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , ENTITY_ID VARCHAR2(40)
        , EXT_ID_TYP_CD VARCHAR2(40)
        , EXT_ID VARCHAR2(100)
        , LAST_UPDT_DT DATE NOT NULL
    

)
/

ALTER TABLE KRIM_ENTITY_EXT_ID_T
    ADD CONSTRAINT KRIM_ENTITY_EXT_ID_TP1
PRIMARY KEY (ENTITY_EXT_ID_ID)
/


CREATE INDEX KRIM_ENTITY_EXT_ID_TC0 
  ON KRIM_ENTITY_EXT_ID_T 
  (OBJ_ID)
/
CREATE INDEX KRIM_ENTITY_EXT_ID_TI1 
  ON KRIM_ENTITY_EXT_ID_T 
  (ENTITY_ID)
/





-----------------------------------------------------------------------------
-- KRIM_ENTITY_NM_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_ENTITY_NM_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_ENTITY_NM_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_ENTITY_NM_T
(
      ENTITY_NM_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , ENTITY_ID VARCHAR2(40)
        , NM_TYP_CD VARCHAR2(40)
        , FIRST_NM VARCHAR2(40)
        , MIDDLE_NM VARCHAR2(40)
        , LAST_NM VARCHAR2(80)
        , SUFFIX_NM VARCHAR2(20)
        , TITLE_NM VARCHAR2(20)
        , DFLT_IND VARCHAR2(1) default 'N'
        , ACTV_IND VARCHAR2(1) default 'Y'
        , LAST_UPDT_DT DATE NOT NULL
    

)
/

ALTER TABLE KRIM_ENTITY_NM_T
    ADD CONSTRAINT KRIM_ENTITY_NM_TP1
PRIMARY KEY (ENTITY_NM_ID)
/


CREATE INDEX KRIM_ENTITY_NM_TC0 
  ON KRIM_ENTITY_NM_T 
  (OBJ_ID)
/
CREATE INDEX KRIM_ENTITY_NM_TI1 
  ON KRIM_ENTITY_NM_T 
  (ENTITY_ID)
/





-----------------------------------------------------------------------------
-- KRIM_ENTITY_PHONE_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_ENTITY_PHONE_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_ENTITY_PHONE_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_ENTITY_PHONE_T
(
      ENTITY_PHONE_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , ENTITY_ID VARCHAR2(40)
        , ENT_TYP_CD VARCHAR2(40)
        , PHONE_TYP_CD VARCHAR2(40)
        , PHONE_NBR VARCHAR2(20)
        , PHONE_EXTN_NBR VARCHAR2(8)
        , POSTAL_CNTRY_CD VARCHAR2(2)
        , DFLT_IND VARCHAR2(1) default 'N'
        , ACTV_IND VARCHAR2(1) default 'Y'
        , LAST_UPDT_DT DATE NOT NULL
    

)
/

ALTER TABLE KRIM_ENTITY_PHONE_T
    ADD CONSTRAINT KRIM_ENTITY_PHONE_TP1
PRIMARY KEY (ENTITY_PHONE_ID)
/


CREATE INDEX KRIM_ENTITY_PHONE_TC0 
  ON KRIM_ENTITY_PHONE_T 
  (OBJ_ID)
/
CREATE INDEX KRIM_ENTITY_PHONE_TI1 
  ON KRIM_ENTITY_PHONE_T 
  (ENTITY_ID)
/





-----------------------------------------------------------------------------
-- KRIM_ENTITY_PRIV_PREF_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_ENTITY_PRIV_PREF_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_ENTITY_PRIV_PREF_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_ENTITY_PRIV_PREF_T
(
      ENTITY_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , SUPPRESS_NM_IND VARCHAR2(1) default 'N'
        , SUPPRESS_EMAIL_IND VARCHAR2(1) default 'Y'
        , SUPPRESS_ADDR_IND VARCHAR2(1) default 'Y'
        , SUPPRESS_PHONE_IND VARCHAR2(1) default 'Y'
        , SUPPRESS_PRSNL_IND VARCHAR2(1) default 'Y'
        , LAST_UPDT_DT DATE NOT NULL
    

)
/

ALTER TABLE KRIM_ENTITY_PRIV_PREF_T
    ADD CONSTRAINT KRIM_ENTITY_PRIV_PREF_TP1
PRIMARY KEY (ENTITY_ID)
/


CREATE INDEX KRIM_ENTITY_PRIV_PREF_TC0 
  ON KRIM_ENTITY_PRIV_PREF_T 
  (OBJ_ID)
/





-----------------------------------------------------------------------------
-- KRIM_ENTITY_RESIDENCY_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_ENTITY_RESIDENCY_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_ENTITY_RESIDENCY_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_ENTITY_RESIDENCY_T
(
      ID VARCHAR2(40)
        , ENTITY_ID VARCHAR2(40)
        , DETERMINATION_METHOD VARCHAR2(40)
        , IN_STATE VARCHAR2(40)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE KRIM_ENTITY_RESIDENCY_T
    ADD CONSTRAINT KRIM_ENTITY_RESIDENCY_TP1
PRIMARY KEY (ID)
/


CREATE INDEX KRIM_ENTITY_RESIDENCY_TC0 
  ON KRIM_ENTITY_RESIDENCY_T 
  (OBJ_ID)
/





-----------------------------------------------------------------------------
-- KRIM_ENTITY_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_ENTITY_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_ENTITY_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_ENTITY_T
(
      ENTITY_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , ACTV_IND VARCHAR2(1) default 'Y'
        , LAST_UPDT_DT DATE NOT NULL
    

)
/

ALTER TABLE KRIM_ENTITY_T
    ADD CONSTRAINT KRIM_ENTITY_TP1
PRIMARY KEY (ENTITY_ID)
/


CREATE INDEX KRIM_ENTITY_TC0 
  ON KRIM_ENTITY_T 
  (OBJ_ID)
/





-----------------------------------------------------------------------------
-- KRIM_ENTITY_VISA_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_ENTITY_VISA_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_ENTITY_VISA_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_ENTITY_VISA_T
(
      ID VARCHAR2(40)
        , ENTITY_ID VARCHAR2(40)
        , VISA_TYPE_KEY VARCHAR2(40)
        , VISA_ENTRY VARCHAR2(40)
        , VISA_ID VARCHAR2(40)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE KRIM_ENTITY_VISA_T
    ADD CONSTRAINT KRIM_ENTITY_VISA_TP1
PRIMARY KEY (ID)
/


CREATE INDEX KRIM_ENTITY_VISA_TC0 
  ON KRIM_ENTITY_VISA_T 
  (OBJ_ID)
/





-----------------------------------------------------------------------------
-- KRIM_ENT_NM_TYP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_ENT_NM_TYP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_ENT_NM_TYP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_ENT_NM_TYP_T
(
      ENT_NM_TYP_CD VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , NM VARCHAR2(40)
        , ACTV_IND VARCHAR2(1) default 'Y'
        , DISPLAY_SORT_CD VARCHAR2(2)
        , LAST_UPDT_DT DATE NOT NULL
    

)
/

ALTER TABLE KRIM_ENT_NM_TYP_T
    ADD CONSTRAINT KRIM_ENT_NM_TYP_TP1
PRIMARY KEY (ENT_NM_TYP_CD)
/


CREATE INDEX KRIM_ENT_NM_TYP_TC0 
  ON KRIM_ENT_NM_TYP_T 
  (OBJ_ID)
/
CREATE INDEX KRIM_ENT_NM_TYP_TC1 
  ON KRIM_ENT_NM_TYP_T 
  (NM)
/





-----------------------------------------------------------------------------
-- KRIM_ENT_TYP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_ENT_TYP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_ENT_TYP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_ENT_TYP_T
(
      ENT_TYP_CD VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , NM VARCHAR2(40)
        , DISPLAY_SORT_CD VARCHAR2(2)
        , ACTV_IND VARCHAR2(1) default 'Y'
    

)
/

ALTER TABLE KRIM_ENT_TYP_T
    ADD CONSTRAINT KRIM_ENT_TYP_TP1
PRIMARY KEY (ENT_TYP_CD)
/


CREATE INDEX KRIM_ENT_TYP_TC0 
  ON KRIM_ENT_TYP_T 
  (OBJ_ID)
/
CREATE INDEX KRIM_ENT_TYP_TC1 
  ON KRIM_ENT_TYP_T 
  (NM)
/





-----------------------------------------------------------------------------
-- KRIM_EXT_ID_TYP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_EXT_ID_TYP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_EXT_ID_TYP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_EXT_ID_TYP_T
(
      EXT_ID_TYP_CD VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , NM VARCHAR2(40)
        , ENCR_REQ_IND VARCHAR2(1) default 'N'
        , ACTV_IND VARCHAR2(1) default 'Y'
        , DISPLAY_SORT_CD VARCHAR2(2)
        , LAST_UPDT_DT DATE NOT NULL
    

)
/

ALTER TABLE KRIM_EXT_ID_TYP_T
    ADD CONSTRAINT KRIM_EXT_ID_TYP_TP1
PRIMARY KEY (EXT_ID_TYP_CD)
/


CREATE INDEX KRIM_EXT_ID_TYP_TC0 
  ON KRIM_EXT_ID_TYP_T 
  (OBJ_ID)
/
CREATE INDEX KRIM_EXT_ID_TYP_TC1 
  ON KRIM_EXT_ID_TYP_T 
  (NM)
/





-----------------------------------------------------------------------------
-- KRIM_GRP_ATTR_DATA_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_GRP_ATTR_DATA_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_GRP_ATTR_DATA_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_GRP_ATTR_DATA_T
(
      ATTR_DATA_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , GRP_ID VARCHAR2(40)
        , KIM_TYP_ID VARCHAR2(40) NOT NULL
        , KIM_ATTR_DEFN_ID VARCHAR2(40)
        , ATTR_VAL VARCHAR2(400)
    

)
/

ALTER TABLE KRIM_GRP_ATTR_DATA_T
    ADD CONSTRAINT KRIM_GRP_ATTR_DATA_TP1
PRIMARY KEY (ATTR_DATA_ID)
/


CREATE INDEX KRIM_GRP_ATTR_DATA_TC0 
  ON KRIM_GRP_ATTR_DATA_T 
  (OBJ_ID)
/





-----------------------------------------------------------------------------
-- KRIM_GRP_DOCUMENT_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_GRP_DOCUMENT_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_GRP_DOCUMENT_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_GRP_DOCUMENT_T
(
      FDOC_NBR VARCHAR2(14)
        , GRP_ID VARCHAR2(40) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , KIM_TYP_ID VARCHAR2(40) NOT NULL
        , GRP_NMSPC VARCHAR2(100) NOT NULL
        , GRP_NM VARCHAR2(400)
        , GRP_DESC VARCHAR2(400)
        , ACTV_IND VARCHAR2(1) default 'Y'
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE KRIM_GRP_DOCUMENT_T
    ADD CONSTRAINT KRIM_GRP_DOCUMENT_TP1
PRIMARY KEY (FDOC_NBR)
/







-----------------------------------------------------------------------------
-- KRIM_GRP_MBR_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_GRP_MBR_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_GRP_MBR_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_GRP_MBR_T
(
      GRP_MBR_ID VARCHAR2(40)
        , VER_NBR NUMBER(8) NOT NULL
        , OBJ_ID VARCHAR2(36) NOT NULL
        , GRP_ID VARCHAR2(40)
        , MBR_ID VARCHAR2(40)
        , MBR_TYP_CD CHAR(1) default 'P'
        , ACTV_FRM_DT DATE
        , ACTV_TO_DT DATE
        , LAST_UPDT_DT DATE NOT NULL
    

)
/

ALTER TABLE KRIM_GRP_MBR_T
    ADD CONSTRAINT KRIM_GRP_MBR_TP1
PRIMARY KEY (GRP_MBR_ID)
/


CREATE INDEX KRIM_GRP_MBR_TC0 
  ON KRIM_GRP_MBR_T 
  (OBJ_ID)
/
CREATE INDEX KRIM_GRP_MBR_TI1 
  ON KRIM_GRP_MBR_T 
  (MBR_ID)
/





-----------------------------------------------------------------------------
-- KRIM_GRP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_GRP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_GRP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_GRP_T
(
      GRP_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , GRP_NM VARCHAR2(80) NOT NULL
        , NMSPC_CD VARCHAR2(40) NOT NULL
        , GRP_DESC VARCHAR2(4000)
        , KIM_TYP_ID VARCHAR2(40) NOT NULL
        , ACTV_IND VARCHAR2(1) default 'Y'
        , LAST_UPDT_DT DATE NOT NULL
    

)
/

ALTER TABLE KRIM_GRP_T
    ADD CONSTRAINT KRIM_GRP_TP1
PRIMARY KEY (GRP_ID)
/


CREATE INDEX KRIM_GRP_TC0 
  ON KRIM_GRP_T 
  (OBJ_ID)
/
CREATE INDEX KRIM_GRP_TC1 
  ON KRIM_GRP_T 
  (GRP_NM, NMSPC_CD)
/





-----------------------------------------------------------------------------
-- KRIM_PERM_ATTR_DATA_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_PERM_ATTR_DATA_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_PERM_ATTR_DATA_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_PERM_ATTR_DATA_T
(
      ATTR_DATA_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , PERM_ID VARCHAR2(40)
        , KIM_TYP_ID VARCHAR2(40) NOT NULL
        , KIM_ATTR_DEFN_ID VARCHAR2(40)
        , ATTR_VAL VARCHAR2(400)
    

)
/

ALTER TABLE KRIM_PERM_ATTR_DATA_T
    ADD CONSTRAINT KRIM_PERM_ATTR_DATA_TP1
PRIMARY KEY (ATTR_DATA_ID)
/


CREATE INDEX KRIM_PERM_ATTR_DATA_TC0 
  ON KRIM_PERM_ATTR_DATA_T 
  (OBJ_ID)
/
CREATE INDEX KRIM_PERM_ATTR_DATA_TI1 
  ON KRIM_PERM_ATTR_DATA_T 
  (PERM_ID)
/





-----------------------------------------------------------------------------
-- KRIM_PERM_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_PERM_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_PERM_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_PERM_T
(
      PERM_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , PERM_TMPL_ID VARCHAR2(40)
        , NMSPC_CD VARCHAR2(40)
        , NM VARCHAR2(100)
        , DESC_TXT VARCHAR2(400)
        , ACTV_IND VARCHAR2(1) default 'Y'
    

)
/

ALTER TABLE KRIM_PERM_T
    ADD CONSTRAINT KRIM_PERM_TP1
PRIMARY KEY (PERM_ID)
/


CREATE INDEX KRIM_PERM_TC0 
  ON KRIM_PERM_T 
  (OBJ_ID)
/





-----------------------------------------------------------------------------
-- KRIM_PERM_TMPL_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_PERM_TMPL_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_PERM_TMPL_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_PERM_TMPL_T
(
      PERM_TMPL_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , NMSPC_CD VARCHAR2(40)
        , NM VARCHAR2(100)
        , DESC_TXT VARCHAR2(400)
        , KIM_TYP_ID VARCHAR2(40) NOT NULL
        , ACTV_IND VARCHAR2(1) default 'Y'
    

)
/

ALTER TABLE KRIM_PERM_TMPL_T
    ADD CONSTRAINT KRIM_PERM_TMPL_TP1
PRIMARY KEY (PERM_TMPL_ID)
/


CREATE INDEX KRIM_PERM_TMPL_TC0 
  ON KRIM_PERM_TMPL_T 
  (OBJ_ID)
/





-----------------------------------------------------------------------------
-- KRIM_PERSON_DOCUMENT_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_PERSON_DOCUMENT_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_PERSON_DOCUMENT_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_PERSON_DOCUMENT_T
(
      PRNCPL_NM VARCHAR2(100) NOT NULL
        , PRNCPL_PSWD VARCHAR2(400)
        , TAX_ID VARCHAR2(100)
        , UNIV_ID VARCHAR2(40)
        , ACTV_IND VARCHAR2(1) default 'Y'
        , FDOC_NBR VARCHAR2(14)
        , ENTITY_ID VARCHAR2(40) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , PRNCPL_ID VARCHAR2(40) NOT NULL
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE KRIM_PERSON_DOCUMENT_T
    ADD CONSTRAINT KRIM_PERSON_DOCUMENT_TP1
PRIMARY KEY (FDOC_NBR)
/







-----------------------------------------------------------------------------
-- KRIM_PHONE_TYP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_PHONE_TYP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_PHONE_TYP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_PHONE_TYP_T
(
      PHONE_TYP_CD VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , PHONE_TYP_NM VARCHAR2(40)
        , ACTV_IND VARCHAR2(1) default 'Y'
        , DISPLAY_SORT_CD VARCHAR2(2)
        , LAST_UPDT_DT DATE NOT NULL
    

)
/

ALTER TABLE KRIM_PHONE_TYP_T
    ADD CONSTRAINT KRIM_PHONE_TYP_TP1
PRIMARY KEY (PHONE_TYP_CD)
/


CREATE INDEX KRIM_PHONE_TYP_TC0 
  ON KRIM_PHONE_TYP_T 
  (OBJ_ID)
/
CREATE INDEX KRIM_PHONE_TYP_TC1 
  ON KRIM_PHONE_TYP_T 
  (PHONE_TYP_NM)
/





-----------------------------------------------------------------------------
-- KRIM_PND_ADDR_MT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_PND_ADDR_MT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_PND_ADDR_MT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_PND_ADDR_MT
(
      FDOC_NBR VARCHAR2(14)
        , ADDR_TYP_CD VARCHAR2(40)
        , ADDR_LINE_1 VARCHAR2(50)
        , ADDR_LINE_2 VARCHAR2(50)
        , ADDR_LINE_3 VARCHAR2(50)
        , CITY_NM VARCHAR2(30)
        , POSTAL_STATE_CD VARCHAR2(2)
        , POSTAL_CD VARCHAR2(20)
        , POSTAL_CNTRY_CD VARCHAR2(2)
        , DISPLAY_SORT_CD VARCHAR2(2)
        , DFLT_IND VARCHAR2(1) default 'N'
        , ACTV_IND VARCHAR2(1) default 'Y'
        , ENTITY_ADDR_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , EDIT_FLAG VARCHAR2(1) default 'N'
    

)
/

ALTER TABLE KRIM_PND_ADDR_MT
    ADD CONSTRAINT KRIM_PND_ADDR_MTP1
PRIMARY KEY (FDOC_NBR,ENTITY_ADDR_ID)
/







-----------------------------------------------------------------------------
-- KRIM_PND_AFLTN_MT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_PND_AFLTN_MT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_PND_AFLTN_MT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_PND_AFLTN_MT
(
      FDOC_NBR VARCHAR2(14)
        , ENTITY_AFLTN_ID VARCHAR2(40)
        , AFLTN_TYP_CD VARCHAR2(40)
        , CAMPUS_CD VARCHAR2(2)
        , EDIT_FLAG VARCHAR2(1) default 'N'
        , DFLT_IND VARCHAR2(1) default 'N'
        , ACTV_IND VARCHAR2(1) default 'Y'
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE KRIM_PND_AFLTN_MT
    ADD CONSTRAINT KRIM_PND_AFLTN_MTP1
PRIMARY KEY (FDOC_NBR,ENTITY_AFLTN_ID)
/







-----------------------------------------------------------------------------
-- KRIM_PND_CTZNSHP_MT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_PND_CTZNSHP_MT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_PND_CTZNSHP_MT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_PND_CTZNSHP_MT
(
      FDOC_NBR VARCHAR2(14)
        , ENTITY_CTZNSHP_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , POSTAL_CNTRY_CD VARCHAR2(2)
        , CTZNSHP_STAT_CD VARCHAR2(40)
        , STRT_DT DATE
        , END_DT DATE
        , ACTV_IND VARCHAR2(1) default 'Y'
        , EDIT_FLAG VARCHAR2(1) default 'N'
    

)
/

ALTER TABLE KRIM_PND_CTZNSHP_MT
    ADD CONSTRAINT KRIM_PND_CTZNSHP_MTP1
PRIMARY KEY (FDOC_NBR,ENTITY_CTZNSHP_ID)
/







-----------------------------------------------------------------------------
-- KRIM_PND_DLGN_MBR_ATTR_DATA_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_PND_DLGN_MBR_ATTR_DATA_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_PND_DLGN_MBR_ATTR_DATA_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_PND_DLGN_MBR_ATTR_DATA_T
(
      FDOC_NBR VARCHAR2(14)
        , ATTR_DATA_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , DLGN_MBR_ID VARCHAR2(40)
        , KIM_TYP_ID VARCHAR2(40)
        , KIM_ATTR_DEFN_ID VARCHAR2(40)
        , ATTR_VAL VARCHAR2(400)
        , ACTV_IND VARCHAR2(1) default 'Y'
        , EDIT_FLAG VARCHAR2(1) default 'N'
    

)
/

ALTER TABLE KRIM_PND_DLGN_MBR_ATTR_DATA_T
    ADD CONSTRAINT KRIM_PND_DLGN_MBR_ATTR_DATAP1
PRIMARY KEY (FDOC_NBR,ATTR_DATA_ID)
/







-----------------------------------------------------------------------------
-- KRIM_PND_DLGN_MBR_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_PND_DLGN_MBR_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_PND_DLGN_MBR_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_PND_DLGN_MBR_T
(
      ROLE_MBR_ID VARCHAR2(40)
        , FDOC_NBR VARCHAR2(14)
        , DLGN_MBR_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , DLGN_ID VARCHAR2(40) NOT NULL
        , MBR_ID VARCHAR2(40)
        , MBR_NM VARCHAR2(40)
        , MBR_TYP_CD VARCHAR2(40) NOT NULL
        , ACTV_IND VARCHAR2(1) default 'Y'
        , ACTV_FRM_DT DATE
        , ACTV_TO_DT DATE
    

)
/

ALTER TABLE KRIM_PND_DLGN_MBR_T
    ADD CONSTRAINT KRIM_PND_DLGN_MBR_TP1
PRIMARY KEY (FDOC_NBR,DLGN_MBR_ID)
/







-----------------------------------------------------------------------------
-- KRIM_PND_DLGN_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_PND_DLGN_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_PND_DLGN_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_PND_DLGN_T
(
      FDOC_NBR VARCHAR2(14)
        , DLGN_ID VARCHAR2(40)
        , ROLE_ID VARCHAR2(40) NOT NULL
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , KIM_TYP_ID VARCHAR2(40)
        , DLGN_TYP_CD VARCHAR2(100) NOT NULL
        , ACTV_IND VARCHAR2(1) default 'Y'
    

)
/

ALTER TABLE KRIM_PND_DLGN_T
    ADD CONSTRAINT KRIM_PND_DLGN_TP1
PRIMARY KEY (FDOC_NBR,DLGN_ID)
/







-----------------------------------------------------------------------------
-- KRIM_PND_EMAIL_MT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_PND_EMAIL_MT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_PND_EMAIL_MT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_PND_EMAIL_MT
(
      FDOC_NBR VARCHAR2(14)
        , ENTITY_EMAIL_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , ENT_TYP_CD VARCHAR2(40)
        , EMAIL_TYP_CD VARCHAR2(40)
        , EMAIL_ADDR VARCHAR2(200)
        , DFLT_IND VARCHAR2(1) default 'N'
        , ACTV_IND VARCHAR2(1) default 'Y'
        , EDIT_FLAG VARCHAR2(1) default 'N'
    

)
/

ALTER TABLE KRIM_PND_EMAIL_MT
    ADD CONSTRAINT KRIM_PND_EMAIL_MTP1
PRIMARY KEY (FDOC_NBR,ENTITY_EMAIL_ID)
/







-----------------------------------------------------------------------------
-- KRIM_PND_EMP_INFO_MT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_PND_EMP_INFO_MT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_PND_EMP_INFO_MT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_PND_EMP_INFO_MT
(
      FDOC_NBR VARCHAR2(14)
        , PRMRY_DEPT_CD VARCHAR2(40)
        , ENTITY_EMP_ID VARCHAR2(40)
        , EMP_ID VARCHAR2(40)
        , EMP_REC_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , ENTITY_AFLTN_ID VARCHAR2(40)
        , EMP_STAT_CD VARCHAR2(40)
        , EMP_TYP_CD VARCHAR2(40)
        , BASE_SLRY_AMT NUMBER(15,2)
        , PRMRY_IND VARCHAR2(1)
        , ACTV_IND VARCHAR2(1) default 'Y'
        , EDIT_FLAG VARCHAR2(1) default 'N'
    

)
/

ALTER TABLE KRIM_PND_EMP_INFO_MT
    ADD CONSTRAINT KRIM_PND_EMP_INFO_MTP1
PRIMARY KEY (FDOC_NBR,ENTITY_EMP_ID)
/







-----------------------------------------------------------------------------
-- KRIM_PND_GRP_ATTR_DATA_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_PND_GRP_ATTR_DATA_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_PND_GRP_ATTR_DATA_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_PND_GRP_ATTR_DATA_T
(
      FDOC_NBR VARCHAR2(14)
        , ATTR_DATA_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , GRP_ID VARCHAR2(40)
        , KIM_TYP_ID VARCHAR2(40)
        , KIM_ATTR_DEFN_ID VARCHAR2(40)
        , ATTR_VAL VARCHAR2(400)
    

)
/

ALTER TABLE KRIM_PND_GRP_ATTR_DATA_T
    ADD CONSTRAINT KRIM_PND_GRP_ATTR_DATA_TP1
PRIMARY KEY (FDOC_NBR,ATTR_DATA_ID)
/







-----------------------------------------------------------------------------
-- KRIM_PND_GRP_MBR_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_PND_GRP_MBR_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_PND_GRP_MBR_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_PND_GRP_MBR_T
(
      FDOC_NBR VARCHAR2(14)
        , GRP_MBR_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , GRP_ID VARCHAR2(40) NOT NULL
        , MBR_ID VARCHAR2(40)
        , MBR_NM VARCHAR2(40)
        , MBR_TYP_CD VARCHAR2(40) NOT NULL
        , ACTV_FRM_DT DATE
        , ACTV_TO_DT DATE
    

)
/

ALTER TABLE KRIM_PND_GRP_MBR_T
    ADD CONSTRAINT KRIM_PND_GRP_MBR_TP1
PRIMARY KEY (FDOC_NBR,GRP_MBR_ID)
/







-----------------------------------------------------------------------------
-- KRIM_PND_GRP_PRNCPL_MT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_PND_GRP_PRNCPL_MT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_PND_GRP_PRNCPL_MT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_PND_GRP_PRNCPL_MT
(
      GRP_MBR_ID VARCHAR2(40)
        , FDOC_NBR VARCHAR2(14)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , GRP_ID VARCHAR2(40) NOT NULL
        , PRNCPL_ID VARCHAR2(40)
        , ACTV_IND VARCHAR2(1) default 'Y'
        , GRP_NM VARCHAR2(80) NOT NULL
        , GRP_TYPE VARCHAR2(80)
        , KIM_TYP_ID VARCHAR2(40)
        , NMSPC_CD VARCHAR2(40)
        , ACTV_FRM_DT DATE
        , ACTV_TO_DT DATE
        , EDIT_FLAG VARCHAR2(1) default 'N'
    

)
/

ALTER TABLE KRIM_PND_GRP_PRNCPL_MT
    ADD CONSTRAINT KRIM_PND_GRP_PRNCPL_MTP1
PRIMARY KEY (GRP_MBR_ID,FDOC_NBR)
/







-----------------------------------------------------------------------------
-- KRIM_PND_NM_MT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_PND_NM_MT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_PND_NM_MT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_PND_NM_MT
(
      FDOC_NBR VARCHAR2(14)
        , ENTITY_NM_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , NM_TYP_CD VARCHAR2(40)
        , FIRST_NM VARCHAR2(40)
        , MIDDLE_NM VARCHAR2(40)
        , LAST_NM VARCHAR2(80)
        , SUFFIX_NM VARCHAR2(20)
        , TITLE_NM VARCHAR2(20)
        , DFLT_IND VARCHAR2(1) default 'N'
        , ACTV_IND VARCHAR2(1) default 'Y'
        , EDIT_FLAG VARCHAR2(1) default 'N'
    

)
/

ALTER TABLE KRIM_PND_NM_MT
    ADD CONSTRAINT KRIM_PND_NM_MTP1
PRIMARY KEY (FDOC_NBR,ENTITY_NM_ID)
/







-----------------------------------------------------------------------------
-- KRIM_PND_PHONE_MT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_PND_PHONE_MT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_PND_PHONE_MT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_PND_PHONE_MT
(
      FDOC_NBR VARCHAR2(14)
        , ENTITY_PHONE_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , ENT_TYP_CD VARCHAR2(40)
        , PHONE_TYP_CD VARCHAR2(40)
        , PHONE_NBR VARCHAR2(20)
        , PHONE_EXTN_NBR VARCHAR2(8)
        , POSTAL_CNTRY_CD VARCHAR2(2)
        , DFLT_IND VARCHAR2(1) default 'N'
        , ACTV_IND VARCHAR2(1) default 'Y'
        , EDIT_FLAG VARCHAR2(1) default 'N'
    

)
/

ALTER TABLE KRIM_PND_PHONE_MT
    ADD CONSTRAINT KRIM_PND_PHONE_MTP1
PRIMARY KEY (FDOC_NBR,ENTITY_PHONE_ID)
/







-----------------------------------------------------------------------------
-- KRIM_PND_PRIV_PREF_MT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_PND_PRIV_PREF_MT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_PND_PRIV_PREF_MT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_PND_PRIV_PREF_MT
(
      FDOC_NBR VARCHAR2(14)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , SUPPRESS_NM_IND VARCHAR2(1) default 'N'
        , SUPPRESS_EMAIL_IND VARCHAR2(1) default 'Y'
        , SUPPRESS_ADDR_IND VARCHAR2(1) default 'Y'
        , SUPPRESS_PHONE_IND VARCHAR2(1) default 'Y'
        , SUPPRESS_PRSNL_IND VARCHAR2(1) default 'Y'
        , EDIT_FLAG VARCHAR2(1) default 'N'
    

)
/

ALTER TABLE KRIM_PND_PRIV_PREF_MT
    ADD CONSTRAINT KRIM_PND_PRIV_PREF_MTP1
PRIMARY KEY (FDOC_NBR)
/







-----------------------------------------------------------------------------
-- KRIM_PND_ROLE_MBR_ATTR_DATA_MT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_PND_ROLE_MBR_ATTR_DATA_MT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_PND_ROLE_MBR_ATTR_DATA_MT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_PND_ROLE_MBR_ATTR_DATA_MT
(
      FDOC_NBR VARCHAR2(14)
        , ATTR_DATA_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , ROLE_MBR_ID VARCHAR2(40)
        , KIM_TYP_ID VARCHAR2(40)
        , KIM_ATTR_DEFN_ID VARCHAR2(40)
        , ATTR_VAL VARCHAR2(400)
        , ACTV_IND VARCHAR2(1) default 'Y'
        , EDIT_FLAG VARCHAR2(1) default 'N'
    

)
/

ALTER TABLE KRIM_PND_ROLE_MBR_ATTR_DATA_MT
    ADD CONSTRAINT KRIM_PND_ROLE_MBR_ATTR_DATAP1
PRIMARY KEY (FDOC_NBR,ATTR_DATA_ID)
/







-----------------------------------------------------------------------------
-- KRIM_PND_ROLE_MBR_MT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_PND_ROLE_MBR_MT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_PND_ROLE_MBR_MT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_PND_ROLE_MBR_MT
(
      FDOC_NBR VARCHAR2(14)
        , ROLE_MBR_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , ROLE_ID VARCHAR2(40) NOT NULL
        , MBR_ID VARCHAR2(40)
        , MBR_TYP_CD VARCHAR2(40) NOT NULL
        , ACTV_IND VARCHAR2(1) default 'Y'
        , ACTV_FRM_DT DATE
        , ACTV_TO_DT DATE
        , EDIT_FLAG VARCHAR2(1) default 'N'
    

)
/

ALTER TABLE KRIM_PND_ROLE_MBR_MT
    ADD CONSTRAINT KRIM_PND_ROLE_MBR_MTP1
PRIMARY KEY (FDOC_NBR,ROLE_MBR_ID)
/







-----------------------------------------------------------------------------
-- KRIM_PND_ROLE_MT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_PND_ROLE_MT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_PND_ROLE_MT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_PND_ROLE_MT
(
      FDOC_NBR VARCHAR2(14)
        , ROLE_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , ROLE_NM VARCHAR2(100) NOT NULL
        , KIM_TYP_ID VARCHAR2(40)
        , ACTV_IND VARCHAR2(1) default 'Y'
        , NMSPC_CD VARCHAR2(40)
        , EDIT_FLAG VARCHAR2(1) default 'N'
    

)
/

ALTER TABLE KRIM_PND_ROLE_MT
    ADD CONSTRAINT KRIM_PND_ROLE_MTP1
PRIMARY KEY (FDOC_NBR,ROLE_ID)
/







-----------------------------------------------------------------------------
-- KRIM_PND_ROLE_PERM_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_PND_ROLE_PERM_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_PND_ROLE_PERM_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_PND_ROLE_PERM_T
(
      FDOC_NBR VARCHAR2(14)
        , ROLE_PERM_ID VARCHAR2(40)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , ROLE_ID VARCHAR2(40) NOT NULL
        , PERM_ID VARCHAR2(40) NOT NULL
        , ACTV_IND VARCHAR2(1) default 'Y'
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE KRIM_PND_ROLE_PERM_T
    ADD CONSTRAINT KRIM_PND_ROLE_PERM_TP1
PRIMARY KEY (FDOC_NBR,ROLE_PERM_ID)
/







-----------------------------------------------------------------------------
-- KRIM_PND_ROLE_RSP_ACTN_MT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_PND_ROLE_RSP_ACTN_MT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_PND_ROLE_RSP_ACTN_MT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_PND_ROLE_RSP_ACTN_MT
(
      FRC_ACTN VARCHAR2(1)
        , ROLE_RSP_ACTN_ID VARCHAR2(40)
        , FDOC_NBR VARCHAR2(14)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , ACTN_TYP_CD VARCHAR2(40)
        , PRIORITY_NBR NUMBER(3)
        , ACTN_PLCY_CD VARCHAR2(40)
        , ROLE_MBR_ID VARCHAR2(40)
        , ROLE_RSP_ID VARCHAR2(40)
        , EDIT_FLAG VARCHAR2(1) default 'N'
    

)
/

ALTER TABLE KRIM_PND_ROLE_RSP_ACTN_MT
    ADD CONSTRAINT KRIM_PND_ROLE_RSP_ACTN_MTP1
PRIMARY KEY (ROLE_RSP_ACTN_ID,FDOC_NBR)
/







-----------------------------------------------------------------------------
-- KRIM_PND_ROLE_RSP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_PND_ROLE_RSP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_PND_ROLE_RSP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_PND_ROLE_RSP_T
(
      FDOC_NBR VARCHAR2(14)
        , ROLE_RSP_ID VARCHAR2(40)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , ROLE_ID VARCHAR2(40) NOT NULL
        , RSP_ID VARCHAR2(40) NOT NULL
        , ACTV_IND VARCHAR2(1) default 'Y'
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE KRIM_PND_ROLE_RSP_T
    ADD CONSTRAINT KRIM_PND_ROLE_RSP_TP1
PRIMARY KEY (FDOC_NBR,ROLE_RSP_ID)
/







-----------------------------------------------------------------------------
-- KRIM_PRNCPL_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_PRNCPL_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_PRNCPL_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_PRNCPL_T
(
      OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , PRNCPL_NM VARCHAR2(100) NOT NULL
        , ENTITY_ID VARCHAR2(40)
        , PRNCPL_PSWD VARCHAR2(400)
        , ACTV_IND VARCHAR2(1) default 'Y'
        , PRNCPL_ID VARCHAR2(40)
        , LAST_UPDT_DT DATE NOT NULL
    

)
/

ALTER TABLE KRIM_PRNCPL_T
    ADD CONSTRAINT KRIM_PRNCPL_TP1
PRIMARY KEY (PRNCPL_ID)
/


CREATE INDEX KRIM_PRNCPL_TC0 
  ON KRIM_PRNCPL_T 
  (OBJ_ID)
/
CREATE INDEX KRIM_PRNCPL_TC1 
  ON KRIM_PRNCPL_T 
  (PRNCPL_NM)
/





-----------------------------------------------------------------------------
-- KRIM_ROLE_DOCUMENT_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_ROLE_DOCUMENT_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_ROLE_DOCUMENT_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_ROLE_DOCUMENT_T
(
      FDOC_NBR VARCHAR2(14)
        , ROLE_ID VARCHAR2(40) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , ROLE_TYP_ID VARCHAR2(40) NOT NULL
        , DESC_TXT VARCHAR2(4000)
        , ROLE_NMSPC VARCHAR2(100) NOT NULL
        , ROLE_NM VARCHAR2(400)
        , ACTV_IND VARCHAR2(1) default 'Y'
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE KRIM_ROLE_DOCUMENT_T
    ADD CONSTRAINT KRIM_ROLE_DOCUMENT_TP1
PRIMARY KEY (FDOC_NBR)
/







-----------------------------------------------------------------------------
-- KRIM_ROLE_MBR_ATTR_DATA_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_ROLE_MBR_ATTR_DATA_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_ROLE_MBR_ATTR_DATA_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_ROLE_MBR_ATTR_DATA_T
(
      ATTR_DATA_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , ROLE_MBR_ID VARCHAR2(40)
        , KIM_TYP_ID VARCHAR2(40) NOT NULL
        , KIM_ATTR_DEFN_ID VARCHAR2(40)
        , ATTR_VAL VARCHAR2(400)
    

)
/

ALTER TABLE KRIM_ROLE_MBR_ATTR_DATA_T
    ADD CONSTRAINT KRIM_ROLE_MBR_ATTR_DATA_TP1
PRIMARY KEY (ATTR_DATA_ID)
/


CREATE INDEX KRIM_ROLE_MBR_ATTR_DATA_TC0 
  ON KRIM_ROLE_MBR_ATTR_DATA_T 
  (OBJ_ID)
/
CREATE INDEX KRIM_ROLE_MBR_ATTR_DATA_TI1 
  ON KRIM_ROLE_MBR_ATTR_DATA_T 
  (ROLE_MBR_ID)
/





-----------------------------------------------------------------------------
-- KRIM_ROLE_MBR_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_ROLE_MBR_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_ROLE_MBR_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_ROLE_MBR_T
(
      ROLE_MBR_ID VARCHAR2(40)
        , VER_NBR NUMBER(8) NOT NULL
        , OBJ_ID VARCHAR2(36) NOT NULL
        , ROLE_ID VARCHAR2(40)
        , MBR_ID VARCHAR2(40)
        , MBR_TYP_CD CHAR(1) default 'P'
        , ACTV_FRM_DT DATE
        , ACTV_TO_DT DATE
        , LAST_UPDT_DT DATE
    

)
/

ALTER TABLE KRIM_ROLE_MBR_T
    ADD CONSTRAINT KRIM_ROLE_MBR_TP1
PRIMARY KEY (ROLE_MBR_ID)
/


CREATE INDEX KRIM_ROLE_MBR_TC0 
  ON KRIM_ROLE_MBR_T 
  (OBJ_ID)
/
CREATE INDEX KRIM_ROLE_MBR_TI1 
  ON KRIM_ROLE_MBR_T 
  (MBR_ID)
/





-----------------------------------------------------------------------------
-- KRIM_ROLE_PERM_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_ROLE_PERM_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_ROLE_PERM_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_ROLE_PERM_T
(
      ROLE_PERM_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , ROLE_ID VARCHAR2(40)
        , PERM_ID VARCHAR2(40)
        , ACTV_IND VARCHAR2(1) default 'Y'
    

)
/

ALTER TABLE KRIM_ROLE_PERM_T
    ADD CONSTRAINT KRIM_ROLE_PERM_TP1
PRIMARY KEY (ROLE_PERM_ID)
/


CREATE INDEX KRIM_ROLE_PERM_TC0 
  ON KRIM_ROLE_PERM_T 
  (OBJ_ID)
/
CREATE INDEX KRIM_ROLE_PERM_TI1 
  ON KRIM_ROLE_PERM_T 
  (PERM_ID)
/





-----------------------------------------------------------------------------
-- KRIM_ROLE_RSP_ACTN_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_ROLE_RSP_ACTN_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_ROLE_RSP_ACTN_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_ROLE_RSP_ACTN_T
(
      ROLE_RSP_ACTN_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , ACTN_TYP_CD VARCHAR2(40)
        , PRIORITY_NBR NUMBER(3)
        , ACTN_PLCY_CD VARCHAR2(40)
        , ROLE_MBR_ID VARCHAR2(40)
        , ROLE_RSP_ID VARCHAR2(40)
        , FRC_ACTN VARCHAR2(1) default 'N'
    

)
/

ALTER TABLE KRIM_ROLE_RSP_ACTN_T
    ADD CONSTRAINT KRIM_ROLE_RSP_ACTN_TP1
PRIMARY KEY (ROLE_RSP_ACTN_ID)
/


CREATE INDEX KRIM_ROLE_RSP_ACTN_TC0 
  ON KRIM_ROLE_RSP_ACTN_T 
  (OBJ_ID)
/
CREATE INDEX KRIM_ROLE_RSP_ACTN_TC1 
  ON KRIM_ROLE_RSP_ACTN_T 
  (ROLE_RSP_ID, ROLE_MBR_ID)
/





-----------------------------------------------------------------------------
-- KRIM_ROLE_RSP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_ROLE_RSP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_ROLE_RSP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_ROLE_RSP_T
(
      ROLE_RSP_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , ROLE_ID VARCHAR2(40)
        , RSP_ID VARCHAR2(40)
        , ACTV_IND VARCHAR2(1) default 'Y'
    

)
/

ALTER TABLE KRIM_ROLE_RSP_T
    ADD CONSTRAINT KRIM_ROLE_RSP_TP1
PRIMARY KEY (ROLE_RSP_ID)
/


CREATE INDEX KRIM_ROLE_RSP_TC0 
  ON KRIM_ROLE_RSP_T 
  (OBJ_ID)
/
CREATE INDEX KRIM_ROLE_RSP_TI1 
  ON KRIM_ROLE_RSP_T 
  (RSP_ID)
/





-----------------------------------------------------------------------------
-- KRIM_ROLE_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_ROLE_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_ROLE_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_ROLE_T
(
      ROLE_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , ROLE_NM VARCHAR2(80) NOT NULL
        , NMSPC_CD VARCHAR2(40) NOT NULL
        , DESC_TXT VARCHAR2(4000)
        , KIM_TYP_ID VARCHAR2(40) NOT NULL
        , ACTV_IND VARCHAR2(1) default 'Y'
        , LAST_UPDT_DT DATE NOT NULL
    

)
/

ALTER TABLE KRIM_ROLE_T
    ADD CONSTRAINT KRIM_ROLE_TP1
PRIMARY KEY (ROLE_ID)
/


CREATE INDEX KRIM_ROLE_TC0 
  ON KRIM_ROLE_T 
  (OBJ_ID)
/
CREATE INDEX KRIM_ROLE_TC1 
  ON KRIM_ROLE_T 
  (ROLE_NM, NMSPC_CD)
/





-----------------------------------------------------------------------------
-- KRIM_RSP_ATTR_DATA_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_RSP_ATTR_DATA_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_RSP_ATTR_DATA_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_RSP_ATTR_DATA_T
(
      ATTR_DATA_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , RSP_ID VARCHAR2(40)
        , KIM_TYP_ID VARCHAR2(40) NOT NULL
        , KIM_ATTR_DEFN_ID VARCHAR2(40)
        , ATTR_VAL VARCHAR2(400)
    

)
/

ALTER TABLE KRIM_RSP_ATTR_DATA_T
    ADD CONSTRAINT KRIM_RSP_ATTR_DATA_TP1
PRIMARY KEY (ATTR_DATA_ID)
/


CREATE INDEX KRIM_RSP_ATTR_DATA_TC0 
  ON KRIM_RSP_ATTR_DATA_T 
  (OBJ_ID)
/





-----------------------------------------------------------------------------
-- KRIM_RSP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_RSP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_RSP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_RSP_T
(
      RSP_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , RSP_TMPL_ID VARCHAR2(40)
        , NMSPC_CD VARCHAR2(40)
        , NM VARCHAR2(100)
        , DESC_TXT VARCHAR2(400)
        , ACTV_IND VARCHAR2(1) default 'Y'
    

)
/

ALTER TABLE KRIM_RSP_T
    ADD CONSTRAINT KRIM_RSP_TP1
PRIMARY KEY (RSP_ID)
/


CREATE INDEX KRIM_RSP_TC0 
  ON KRIM_RSP_T 
  (OBJ_ID)
/





-----------------------------------------------------------------------------
-- KRIM_RSP_TMPL_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_RSP_TMPL_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_RSP_TMPL_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_RSP_TMPL_T
(
      RSP_TMPL_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , NMSPC_CD VARCHAR2(40)
        , NM VARCHAR2(80)
        , KIM_TYP_ID VARCHAR2(100) NOT NULL
        , DESC_TXT VARCHAR2(400)
        , ACTV_IND VARCHAR2(1) default 'Y'
    

)
/

ALTER TABLE KRIM_RSP_TMPL_T
    ADD CONSTRAINT KRIM_RSP_TMPL_TP1
PRIMARY KEY (RSP_TMPL_ID)
/


CREATE INDEX KRIM_RSP_TMPL_TC0 
  ON KRIM_RSP_TMPL_T 
  (OBJ_ID)
/





-----------------------------------------------------------------------------
-- KRIM_TYP_ATTR_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_TYP_ATTR_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_TYP_ATTR_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_TYP_ATTR_T
(
      KIM_TYP_ATTR_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , SORT_CD VARCHAR2(2)
        , KIM_TYP_ID VARCHAR2(40) NOT NULL
        , KIM_ATTR_DEFN_ID VARCHAR2(40)
        , ACTV_IND VARCHAR2(1) default 'Y'
    

)
/

ALTER TABLE KRIM_TYP_ATTR_T
    ADD CONSTRAINT KRIM_TYP_ATTR_TP1
PRIMARY KEY (KIM_TYP_ATTR_ID)
/


CREATE INDEX KRIM_TYP_ATTRIBUTE_TI1 
  ON KRIM_TYP_ATTR_T 
  (KIM_TYP_ID)
/
CREATE INDEX KRIM_TYP_ATTR_TC0 
  ON KRIM_TYP_ATTR_T 
  (OBJ_ID)
/





-----------------------------------------------------------------------------
-- KRIM_TYP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRIM_TYP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRIM_TYP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRIM_TYP_T
(
      KIM_TYP_ID VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , NM VARCHAR2(100)
        , SRVC_NM VARCHAR2(200)
        , ACTV_IND VARCHAR2(1) default 'Y'
        , NMSPC_CD VARCHAR2(40)
    

)
/

ALTER TABLE KRIM_TYP_T
    ADD CONSTRAINT KRIM_TYP_TP1
PRIMARY KEY (KIM_TYP_ID)
/


CREATE INDEX KRIM_TYP_TC0 
  ON KRIM_TYP_T 
  (OBJ_ID)
/





-----------------------------------------------------------------------------
-- KRNS_ADHOC_RTE_ACTN_RECIP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRNS_ADHOC_RTE_ACTN_RECIP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRNS_ADHOC_RTE_ACTN_RECIP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRNS_ADHOC_RTE_ACTN_RECIP_T
(
      RECIP_TYP_CD NUMBER(1)
        , ACTN_RQST_CD VARCHAR2(30)
        , ACTN_RQST_RECIP_ID VARCHAR2(70)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , DOC_HDR_ID VARCHAR2(14)
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE KRNS_ADHOC_RTE_ACTN_RECIP_T
    ADD CONSTRAINT KRNS_ADHOC_RTE_ACTN_RECIP_TP1
PRIMARY KEY (RECIP_TYP_CD,ACTN_RQST_CD,ACTN_RQST_RECIP_ID,DOC_HDR_ID)
/


CREATE INDEX KRNS_ADHOC_RTE_ACTN_RECIP_T2 
  ON KRNS_ADHOC_RTE_ACTN_RECIP_T 
  (DOC_HDR_ID)
/





-----------------------------------------------------------------------------
-- KRNS_ATT_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRNS_ATT_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRNS_ATT_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRNS_ATT_T
(
      FILE_SZ NUMBER(14)
        , ATT_TYP_CD VARCHAR2(40)
        , NTE_ID NUMBER(14)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , MIME_TYP VARCHAR2(40)
        , FILE_NM VARCHAR2(250)
        , ATT_ID VARCHAR2(36)
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE KRNS_ATT_T
    ADD CONSTRAINT KRNS_ATT_TP1
PRIMARY KEY (NTE_ID)
/







-----------------------------------------------------------------------------
-- KRNS_CAMPUS_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRNS_CAMPUS_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRNS_CAMPUS_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRNS_CAMPUS_T
(
      CAMPUS_CD VARCHAR2(2)
        , CAMPUS_NM VARCHAR2(250)
        , CAMPUS_SHRT_NM VARCHAR2(250)
        , CAMPUS_TYP_CD VARCHAR2(1)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , ACTV_IND VARCHAR2(1) default 'Y' NOT NULL
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE KRNS_CAMPUS_T
    ADD CONSTRAINT KRNS_CAMPUS_TP1
PRIMARY KEY (CAMPUS_CD)
/







-----------------------------------------------------------------------------
-- KRNS_CMP_TYP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRNS_CMP_TYP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRNS_CMP_TYP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRNS_CMP_TYP_T
(
      CAMPUS_TYP_CD VARCHAR2(1)
        , CMP_TYP_NM VARCHAR2(250)
        , DOBJ_MAINT_CD_ACTV_IND VARCHAR2(1) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , ACTV_IND VARCHAR2(1) default 'Y' NOT NULL
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE KRNS_CMP_TYP_T
    ADD CONSTRAINT KRNS_CMP_TYP_TP1
PRIMARY KEY (CAMPUS_TYP_CD)
/







-----------------------------------------------------------------------------
-- KRNS_DOC_HDR_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRNS_DOC_HDR_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRNS_DOC_HDR_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRNS_DOC_HDR_T
(
      DOC_HDR_ID VARCHAR2(14)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , FDOC_DESC VARCHAR2(40)
        , ORG_DOC_HDR_ID VARCHAR2(10)
        , TMPL_DOC_HDR_ID VARCHAR2(14)
        , EXPLANATION VARCHAR2(400)
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE KRNS_DOC_HDR_T
    ADD CONSTRAINT KRNS_DOC_HDR_TP1
PRIMARY KEY (DOC_HDR_ID)
/


CREATE INDEX KRNS_DOC_HDR_TI3 
  ON KRNS_DOC_HDR_T 
  (ORG_DOC_HDR_ID)
/





-----------------------------------------------------------------------------
-- KRNS_DOC_TYP_ATTR_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRNS_DOC_TYP_ATTR_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRNS_DOC_TYP_ATTR_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRNS_DOC_TYP_ATTR_T
(
      DOC_TYP_ATTR_ID NUMBER(8)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , ACTV_IND CHAR(1) default 'Y' NOT NULL
        , CD VARCHAR2(100) NOT NULL
        , VAL VARCHAR2(400)
        , LBL VARCHAR2(400)
        , DOC_TYP_CD VARCHAR2(4) NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE KRNS_DOC_TYP_ATTR_T
    ADD CONSTRAINT KRNS_DOC_TYP_ATTR_TP1
PRIMARY KEY (DOC_TYP_ATTR_ID)
/







-----------------------------------------------------------------------------
-- KRNS_LOOKUP_RSLT_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRNS_LOOKUP_RSLT_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRNS_LOOKUP_RSLT_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRNS_LOOKUP_RSLT_T
(
      LOOKUP_RSLT_ID VARCHAR2(14)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , PRNCPL_ID VARCHAR2(40) NOT NULL
        , LOOKUP_DT DATE NOT NULL
        , SERIALZD_RSLTS CLOB
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE KRNS_LOOKUP_RSLT_T
    ADD CONSTRAINT KRNS_LOOKUP_RSLT_TP1
PRIMARY KEY (LOOKUP_RSLT_ID)
/







-----------------------------------------------------------------------------
-- KRNS_LOOKUP_SEL_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRNS_LOOKUP_SEL_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRNS_LOOKUP_SEL_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRNS_LOOKUP_SEL_T
(
      LOOKUP_RSLT_ID VARCHAR2(14)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , PRNCPL_ID VARCHAR2(40) NOT NULL
        , LOOKUP_DT DATE NOT NULL
        , SEL_OBJ_IDS CLOB
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE KRNS_LOOKUP_SEL_T
    ADD CONSTRAINT KRNS_LOOKUP_SEL_TP1
PRIMARY KEY (LOOKUP_RSLT_ID)
/







-----------------------------------------------------------------------------
-- KRNS_MAINT_DOC_ATT_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRNS_MAINT_DOC_ATT_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRNS_MAINT_DOC_ATT_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRNS_MAINT_DOC_ATT_T
(
      FILE_NM VARCHAR2(150)
        , CNTNT_TYP VARCHAR2(50)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , DOC_HDR_ID VARCHAR2(14)
        , ATT_CNTNT BLOB NOT NULL
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE KRNS_MAINT_DOC_ATT_T
    ADD CONSTRAINT KRNS_MAINT_DOC_ATT_TP1
PRIMARY KEY (DOC_HDR_ID)
/







-----------------------------------------------------------------------------
-- KRNS_MAINT_DOC_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRNS_MAINT_DOC_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRNS_MAINT_DOC_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRNS_MAINT_DOC_T
(
      DOC_HDR_ID VARCHAR2(14)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , DOC_CNTNT CLOB
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE KRNS_MAINT_DOC_T
    ADD CONSTRAINT KRNS_MAINT_DOC_TP1
PRIMARY KEY (DOC_HDR_ID)
/







-----------------------------------------------------------------------------
-- KRNS_MAINT_LOCK_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRNS_MAINT_LOCK_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRNS_MAINT_LOCK_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRNS_MAINT_LOCK_T
(
      MAINT_LOCK_REP_TXT VARCHAR2(500)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , DOC_HDR_ID VARCHAR2(14) NOT NULL
        , MAINT_LOCK_ID VARCHAR2(14)
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE KRNS_MAINT_LOCK_T
    ADD CONSTRAINT KRNS_MAINT_LOCK_TP1
PRIMARY KEY (MAINT_LOCK_ID)
/


CREATE INDEX KRNS_MAINT_LOCK_TI2 
  ON KRNS_MAINT_LOCK_T 
  (DOC_HDR_ID)
/





-----------------------------------------------------------------------------
-- KRNS_NMSPC_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRNS_NMSPC_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRNS_NMSPC_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRNS_NMSPC_T
(
      NMSPC_CD VARCHAR2(20)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , NM VARCHAR2(40)
        , ACTV_IND CHAR(1) default 'Y' NOT NULL
        , APPL_NMSPC_CD VARCHAR2(20)
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE KRNS_NMSPC_T
    ADD CONSTRAINT KRNS_NMSPC_TP1
PRIMARY KEY (NMSPC_CD)
/







-----------------------------------------------------------------------------
-- KRNS_NTE_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRNS_NTE_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRNS_NTE_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRNS_NTE_T
(
      NTE_ID NUMBER(14)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , RMT_OBJ_ID VARCHAR2(36) NOT NULL
        , AUTH_PRNCPL_ID VARCHAR2(40) NOT NULL
        , POST_TS DATE NOT NULL
        , NTE_TYP_CD VARCHAR2(4) NOT NULL
        , TXT VARCHAR2(800)
        , PRG_CD VARCHAR2(1)
        , TPC_TXT VARCHAR2(40)
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE KRNS_NTE_T
    ADD CONSTRAINT KRNS_NTE_TP1
PRIMARY KEY (NTE_ID)
/







-----------------------------------------------------------------------------
-- KRNS_NTE_TYP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRNS_NTE_TYP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRNS_NTE_TYP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRNS_NTE_TYP_T
(
      NTE_TYP_CD VARCHAR2(4)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , TYP_DESC_TXT VARCHAR2(100)
        , ACTV_IND VARCHAR2(1)
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE KRNS_NTE_TYP_T
    ADD CONSTRAINT KRNS_NTE_TYP_TP1
PRIMARY KEY (NTE_TYP_CD)
/







-----------------------------------------------------------------------------
-- KRNS_PARM_DTL_TYP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRNS_PARM_DTL_TYP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRNS_PARM_DTL_TYP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRNS_PARM_DTL_TYP_T
(
      NMSPC_CD VARCHAR2(20)
        , PARM_DTL_TYP_CD VARCHAR2(100)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , NM VARCHAR2(255)
        , ACTV_IND CHAR(1) default 'Y' NOT NULL
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE KRNS_PARM_DTL_TYP_T
    ADD CONSTRAINT KRNS_PARM_DTL_TYP_TP1
PRIMARY KEY (NMSPC_CD,PARM_DTL_TYP_CD)
/







-----------------------------------------------------------------------------
-- KRNS_PARM_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRNS_PARM_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRNS_PARM_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRNS_PARM_T
(
      APPL_NMSPC_CD VARCHAR2(20) default 'KUALI'
        , NMSPC_CD VARCHAR2(20)
        , PARM_DTL_TYP_CD VARCHAR2(100)
        , PARM_NM VARCHAR2(255)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , PARM_TYP_CD VARCHAR2(5) NOT NULL
        , TXT VARCHAR2(4000)
        , PARM_DESC_TXT VARCHAR2(4000)
        , CONS_CD VARCHAR2(1)
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE KRNS_PARM_T
    ADD CONSTRAINT KRNS_PARM_TP1
PRIMARY KEY (APPL_NMSPC_CD,NMSPC_CD,PARM_DTL_TYP_CD,PARM_NM)
/







-----------------------------------------------------------------------------
-- KRNS_PARM_TYP_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRNS_PARM_TYP_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRNS_PARM_TYP_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRNS_PARM_TYP_T
(
      PARM_TYP_CD VARCHAR2(5)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , NM VARCHAR2(40)
        , ACTV_IND CHAR(1) default 'Y' NOT NULL
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE KRNS_PARM_TYP_T
    ADD CONSTRAINT KRNS_PARM_TYP_TP1
PRIMARY KEY (PARM_TYP_CD)
/







-----------------------------------------------------------------------------
-- KRNS_PESSIMISTIC_LOCK_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRNS_PESSIMISTIC_LOCK_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRNS_PESSIMISTIC_LOCK_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRNS_PESSIMISTIC_LOCK_T
(
      PESSIMISTIC_LOCK_ID NUMBER(14)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , LOCK_DESC_TXT VARCHAR2(4000)
        , DOC_HDR_ID VARCHAR2(14) NOT NULL
        , GNRT_DT DATE NOT NULL
        , PRNCPL_ID VARCHAR2(40) NOT NULL
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE KRNS_PESSIMISTIC_LOCK_T
    ADD CONSTRAINT KRNS_PESSIMISTIC_LOCK_TP1
PRIMARY KEY (PESSIMISTIC_LOCK_ID)
/


CREATE INDEX KRNS_PESSIMISTIC_LOCK_TI1 
  ON KRNS_PESSIMISTIC_LOCK_T 
  (DOC_HDR_ID)
/
CREATE INDEX KRNS_PESSIMISTIC_LOCK_TI2 
  ON KRNS_PESSIMISTIC_LOCK_T 
  (PRNCPL_ID)
/





-----------------------------------------------------------------------------
-- KRNS_SESN_DOC_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRNS_SESN_DOC_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRNS_SESN_DOC_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRNS_SESN_DOC_T
(
      SESN_DOC_ID VARCHAR2(40)
        , DOC_HDR_ID VARCHAR2(14)
        , PRNCPL_ID VARCHAR2(40)
        , IP_ADDR VARCHAR2(60)
        , SERIALZD_DOC_FRM BLOB
        , LAST_UPDT_DT DATE
        , CONTENT_ENCRYPTED_IND CHAR(1) default 'N'
    

)
/

ALTER TABLE KRNS_SESN_DOC_T
    ADD CONSTRAINT KRNS_SESN_DOC_TP1
PRIMARY KEY (SESN_DOC_ID,DOC_HDR_ID,PRNCPL_ID,IP_ADDR)
/


CREATE INDEX KRNS_SESN_DOC_TI1 
  ON KRNS_SESN_DOC_T 
  (LAST_UPDT_DT)
/





-----------------------------------------------------------------------------
-- KRSB_BAM_PARM_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRSB_BAM_PARM_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRSB_BAM_PARM_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRSB_BAM_PARM_T
(
      BAM_PARM_ID NUMBER(14)
        , BAM_ID NUMBER(14) NOT NULL
        , PARM CLOB NOT NULL
    

)
/

ALTER TABLE KRSB_BAM_PARM_T
    ADD CONSTRAINT KRSB_BAM_PARM_TP1
PRIMARY KEY (BAM_PARM_ID)
/


CREATE INDEX KREW_BAM_PARM_TI1 
  ON KRSB_BAM_PARM_T 
  (BAM_ID)
/





-----------------------------------------------------------------------------
-- KRSB_BAM_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRSB_BAM_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRSB_BAM_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRSB_BAM_T
(
      BAM_ID NUMBER(14)
        , SVC_NM VARCHAR2(255) NOT NULL
        , SVC_URL VARCHAR2(500) NOT NULL
        , MTHD_NM VARCHAR2(2000) NOT NULL
        , THRD_NM VARCHAR2(500) NOT NULL
        , CALL_DT DATE NOT NULL
        , TGT_TO_STR VARCHAR2(2000) NOT NULL
        , SRVR_IND NUMBER(1) NOT NULL
        , EXCPN_TO_STR VARCHAR2(2000)
        , EXCPN_MSG CLOB
    

)
/

ALTER TABLE KRSB_BAM_T
    ADD CONSTRAINT KRSB_BAM_TP1
PRIMARY KEY (BAM_ID)
/


CREATE INDEX KRSB_BAM_TI1 
  ON KRSB_BAM_T 
  (SVC_NM, MTHD_NM)
/
CREATE INDEX KRSB_BAM_TI2 
  ON KRSB_BAM_T 
  (SVC_NM)
/





-----------------------------------------------------------------------------
-- KRSB_FLT_SVC_DEF_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRSB_FLT_SVC_DEF_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRSB_FLT_SVC_DEF_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRSB_FLT_SVC_DEF_T
(
      FLT_SVC_DEF_ID NUMBER(14)
        , FLT_SVC_DEF CLOB NOT NULL
    

)
/

ALTER TABLE KRSB_FLT_SVC_DEF_T
    ADD CONSTRAINT KRSB_FLT_SVC_DEF_TP1
PRIMARY KEY (FLT_SVC_DEF_ID)
/







-----------------------------------------------------------------------------
-- KRSB_MSG_PYLD_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRSB_MSG_PYLD_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRSB_MSG_PYLD_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRSB_MSG_PYLD_T
(
      MSG_QUE_ID NUMBER(14)
        , MSG_PYLD CLOB NOT NULL
    

)
/

ALTER TABLE KRSB_MSG_PYLD_T
    ADD CONSTRAINT KRSB_MSG_PYLD_TP1
PRIMARY KEY (MSG_QUE_ID)
/







-----------------------------------------------------------------------------
-- KRSB_MSG_QUE_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRSB_MSG_QUE_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRSB_MSG_QUE_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRSB_MSG_QUE_T
(
      MSG_QUE_ID NUMBER(14)
        , DT DATE NOT NULL
        , EXP_DT DATE
        , PRIO NUMBER(8) NOT NULL
        , STAT_CD CHAR(1) NOT NULL
        , RTRY_CNT NUMBER(8) NOT NULL
        , IP_NBR VARCHAR2(2000) NOT NULL
        , SVC_NM VARCHAR2(255)
        , SVC_NMSPC VARCHAR2(255) NOT NULL
        , SVC_MTHD_NM VARCHAR2(2000)
        , APP_VAL_ONE VARCHAR2(2000)
        , APP_VAL_TWO VARCHAR2(2000)
        , VER_NBR NUMBER(8) default 0
    

)
/

ALTER TABLE KRSB_MSG_QUE_T
    ADD CONSTRAINT KRSB_MSG_QUE_TP1
PRIMARY KEY (MSG_QUE_ID)
/


CREATE INDEX KRSB_MSG_QUE_TI1 
  ON KRSB_MSG_QUE_T 
  (SVC_NM, SVC_MTHD_NM)
/
CREATE INDEX KRSB_MSG_QUE_TI2 
  ON KRSB_MSG_QUE_T 
  (SVC_NMSPC, STAT_CD, IP_NBR, DT)
/





-----------------------------------------------------------------------------
-- KRSB_QRTZ_BLOB_TRIGGERS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRSB_QRTZ_BLOB_TRIGGERS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRSB_QRTZ_BLOB_TRIGGERS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRSB_QRTZ_BLOB_TRIGGERS
(
      TRIGGER_NAME VARCHAR2(80)
        , TRIGGER_GROUP VARCHAR2(80)
        , BLOB_DATA BLOB
    

)
/

ALTER TABLE KRSB_QRTZ_BLOB_TRIGGERS
    ADD CONSTRAINT KRSB_QRTZ_BLOB_TRIGGERSP1
PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP)
/







-----------------------------------------------------------------------------
-- KRSB_QRTZ_CALENDARS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRSB_QRTZ_CALENDARS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRSB_QRTZ_CALENDARS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRSB_QRTZ_CALENDARS
(
      CALENDAR_NAME VARCHAR2(80)
        , CALENDAR BLOB NOT NULL
    

)
/

ALTER TABLE KRSB_QRTZ_CALENDARS
    ADD CONSTRAINT KRSB_QRTZ_CALENDARSP1
PRIMARY KEY (CALENDAR_NAME)
/







-----------------------------------------------------------------------------
-- KRSB_QRTZ_CRON_TRIGGERS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRSB_QRTZ_CRON_TRIGGERS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRSB_QRTZ_CRON_TRIGGERS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRSB_QRTZ_CRON_TRIGGERS
(
      TRIGGER_NAME VARCHAR2(80)
        , TRIGGER_GROUP VARCHAR2(80)
        , CRON_EXPRESSION VARCHAR2(80) NOT NULL
        , TIME_ZONE_ID VARCHAR2(80)
    

)
/

ALTER TABLE KRSB_QRTZ_CRON_TRIGGERS
    ADD CONSTRAINT KRSB_QRTZ_CRON_TRIGGERSP1
PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP)
/







-----------------------------------------------------------------------------
-- KRSB_QRTZ_FIRED_TRIGGERS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRSB_QRTZ_FIRED_TRIGGERS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRSB_QRTZ_FIRED_TRIGGERS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRSB_QRTZ_FIRED_TRIGGERS
(
      ENTRY_ID VARCHAR2(95)
        , TRIGGER_NAME VARCHAR2(80) NOT NULL
        , TRIGGER_GROUP VARCHAR2(80) NOT NULL
        , IS_VOLATILE VARCHAR2(1) NOT NULL
        , INSTANCE_NAME VARCHAR2(80) NOT NULL
        , FIRED_TIME NUMBER(13) NOT NULL
        , PRIORITY NUMBER(13) NOT NULL
        , STATE VARCHAR2(16) NOT NULL
        , JOB_NAME VARCHAR2(80)
        , JOB_GROUP VARCHAR2(80)
        , IS_STATEFUL VARCHAR2(1)
        , REQUESTS_RECOVERY VARCHAR2(1)
    

)
/

ALTER TABLE KRSB_QRTZ_FIRED_TRIGGERS
    ADD CONSTRAINT KRSB_QRTZ_FIRED_TRIGGERSP1
PRIMARY KEY (ENTRY_ID)
/


CREATE INDEX KRSB_QRTZ_FIRED_TRIGGERS_TI1 
  ON KRSB_QRTZ_FIRED_TRIGGERS 
  (JOB_GROUP)
/
CREATE INDEX KRSB_QRTZ_FIRED_TRIGGERS_TI2 
  ON KRSB_QRTZ_FIRED_TRIGGERS 
  (JOB_NAME)
/
CREATE INDEX KRSB_QRTZ_FIRED_TRIGGERS_TI3 
  ON KRSB_QRTZ_FIRED_TRIGGERS 
  (REQUESTS_RECOVERY)
/
CREATE INDEX KRSB_QRTZ_FIRED_TRIGGERS_TI4 
  ON KRSB_QRTZ_FIRED_TRIGGERS 
  (IS_STATEFUL)
/
CREATE INDEX KRSB_QRTZ_FIRED_TRIGGERS_TI5 
  ON KRSB_QRTZ_FIRED_TRIGGERS 
  (TRIGGER_GROUP)
/
CREATE INDEX KRSB_QRTZ_FIRED_TRIGGERS_TI6 
  ON KRSB_QRTZ_FIRED_TRIGGERS 
  (INSTANCE_NAME)
/
CREATE INDEX KRSB_QRTZ_FIRED_TRIGGERS_TI7 
  ON KRSB_QRTZ_FIRED_TRIGGERS 
  (TRIGGER_NAME)
/
CREATE INDEX KRSB_QRTZ_FIRED_TRIGGERS_TI8 
  ON KRSB_QRTZ_FIRED_TRIGGERS 
  (TRIGGER_NAME, TRIGGER_GROUP)
/
CREATE INDEX KRSB_QRTZ_FIRED_TRIGGERS_TI9 
  ON KRSB_QRTZ_FIRED_TRIGGERS 
  (IS_VOLATILE)
/





-----------------------------------------------------------------------------
-- KRSB_QRTZ_JOB_DETAILS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRSB_QRTZ_JOB_DETAILS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRSB_QRTZ_JOB_DETAILS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRSB_QRTZ_JOB_DETAILS
(
      REQUESTS_RECOVERY VARCHAR2(1) NOT NULL
        , JOB_DATA BLOB
        , JOB_NAME VARCHAR2(80)
        , JOB_GROUP VARCHAR2(80)
        , DESCRIPTION VARCHAR2(120)
        , JOB_CLASS_NAME VARCHAR2(128) NOT NULL
        , IS_DURABLE VARCHAR2(1) NOT NULL
        , IS_VOLATILE VARCHAR2(1) NOT NULL
        , IS_STATEFUL VARCHAR2(1) NOT NULL
    

)
/

ALTER TABLE KRSB_QRTZ_JOB_DETAILS
    ADD CONSTRAINT KRSB_QRTZ_JOB_DETAILSP1
PRIMARY KEY (JOB_NAME,JOB_GROUP)
/


CREATE INDEX KRSB_QRTZ_JOB_DETAILS_TI1 
  ON KRSB_QRTZ_JOB_DETAILS 
  (REQUESTS_RECOVERY)
/





-----------------------------------------------------------------------------
-- KRSB_QRTZ_JOB_LISTENERS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRSB_QRTZ_JOB_LISTENERS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRSB_QRTZ_JOB_LISTENERS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRSB_QRTZ_JOB_LISTENERS
(
      JOB_NAME VARCHAR2(80)
        , JOB_GROUP VARCHAR2(80)
        , JOB_LISTENER VARCHAR2(80)
    

)
/

ALTER TABLE KRSB_QRTZ_JOB_LISTENERS
    ADD CONSTRAINT KRSB_QRTZ_JOB_LISTENERSP1
PRIMARY KEY (JOB_NAME,JOB_GROUP,JOB_LISTENER)
/







-----------------------------------------------------------------------------
-- KRSB_QRTZ_LOCKS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRSB_QRTZ_LOCKS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRSB_QRTZ_LOCKS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRSB_QRTZ_LOCKS
(
      LOCK_NAME VARCHAR2(40)
    

)
/

ALTER TABLE KRSB_QRTZ_LOCKS
    ADD CONSTRAINT KRSB_QRTZ_LOCKSP1
PRIMARY KEY (LOCK_NAME)
/







-----------------------------------------------------------------------------
-- KRSB_QRTZ_PAUSED_TRIGGER_GRPS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRSB_QRTZ_PAUSED_TRIGGER_GRPS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRSB_QRTZ_PAUSED_TRIGGER_GRPS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRSB_QRTZ_PAUSED_TRIGGER_GRPS
(
      TRIGGER_GROUP VARCHAR2(80)
    

)
/

ALTER TABLE KRSB_QRTZ_PAUSED_TRIGGER_GRPS
    ADD CONSTRAINT KRSB_QRTZ_PAUSED_TRIGGER_GRP1
PRIMARY KEY (TRIGGER_GROUP)
/







-----------------------------------------------------------------------------
-- KRSB_QRTZ_SCHEDULER_STATE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRSB_QRTZ_SCHEDULER_STATE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRSB_QRTZ_SCHEDULER_STATE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRSB_QRTZ_SCHEDULER_STATE
(
      INSTANCE_NAME VARCHAR2(80)
        , LAST_CHECKIN_TIME NUMBER(13) NOT NULL
        , CHECKIN_INTERVAL NUMBER(13) NOT NULL
    

)
/

ALTER TABLE KRSB_QRTZ_SCHEDULER_STATE
    ADD CONSTRAINT KRSB_QRTZ_SCHEDULER_STATEP1
PRIMARY KEY (INSTANCE_NAME)
/







-----------------------------------------------------------------------------
-- KRSB_QRTZ_SIMPLE_TRIGGERS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRSB_QRTZ_SIMPLE_TRIGGERS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRSB_QRTZ_SIMPLE_TRIGGERS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRSB_QRTZ_SIMPLE_TRIGGERS
(
      TRIGGER_NAME VARCHAR2(80)
        , TRIGGER_GROUP VARCHAR2(80)
        , REPEAT_COUNT NUMBER(7) NOT NULL
        , REPEAT_INTERVAL NUMBER(12) NOT NULL
        , TIMES_TRIGGERED NUMBER(7) NOT NULL
    

)
/

ALTER TABLE KRSB_QRTZ_SIMPLE_TRIGGERS
    ADD CONSTRAINT KRSB_QRTZ_SIMPLE_TRIGGERSP1
PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP)
/







-----------------------------------------------------------------------------
-- KRSB_QRTZ_TRIGGERS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRSB_QRTZ_TRIGGERS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRSB_QRTZ_TRIGGERS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRSB_QRTZ_TRIGGERS
(
      TRIGGER_NAME VARCHAR2(80)
        , TRIGGER_GROUP VARCHAR2(80)
        , JOB_NAME VARCHAR2(80) NOT NULL
        , JOB_GROUP VARCHAR2(80) NOT NULL
        , IS_VOLATILE VARCHAR2(1) NOT NULL
        , DESCRIPTION VARCHAR2(120)
        , NEXT_FIRE_TIME NUMBER(13)
        , PREV_FIRE_TIME NUMBER(13)
        , PRIORITY NUMBER(13)
        , TRIGGER_STATE VARCHAR2(16) NOT NULL
        , TRIGGER_TYPE VARCHAR2(8) NOT NULL
        , START_TIME NUMBER(13) NOT NULL
        , END_TIME NUMBER(13)
        , CALENDAR_NAME VARCHAR2(80)
        , MISFIRE_INSTR NUMBER(2)
        , JOB_DATA BLOB
    

)
/

ALTER TABLE KRSB_QRTZ_TRIGGERS
    ADD CONSTRAINT KRSB_QRTZ_TRIGGERSP1
PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP)
/


CREATE INDEX KRSB_QRTZ_TRIGGERS_TI1 
  ON KRSB_QRTZ_TRIGGERS 
  (NEXT_FIRE_TIME)
/
CREATE INDEX KRSB_QRTZ_TRIGGERS_TI2 
  ON KRSB_QRTZ_TRIGGERS 
  (NEXT_FIRE_TIME, TRIGGER_STATE)
/
CREATE INDEX KRSB_QRTZ_TRIGGERS_TI3 
  ON KRSB_QRTZ_TRIGGERS 
  (TRIGGER_STATE)
/
CREATE INDEX KRSB_QRTZ_TRIGGERS_TI4 
  ON KRSB_QRTZ_TRIGGERS 
  (IS_VOLATILE)
/





-----------------------------------------------------------------------------
-- KRSB_QRTZ_TRIGGER_LISTENERS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRSB_QRTZ_TRIGGER_LISTENERS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRSB_QRTZ_TRIGGER_LISTENERS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRSB_QRTZ_TRIGGER_LISTENERS
(
      TRIGGER_NAME VARCHAR2(80)
        , TRIGGER_GROUP VARCHAR2(80)
        , TRIGGER_LISTENER VARCHAR2(80)
    

)
/

ALTER TABLE KRSB_QRTZ_TRIGGER_LISTENERS
    ADD CONSTRAINT KRSB_QRTZ_TRIGGER_LISTENERSP1
PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_LISTENER)
/







-----------------------------------------------------------------------------
-- KRSB_SVC_DEF_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KRSB_SVC_DEF_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KRSB_SVC_DEF_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KRSB_SVC_DEF_T
(
      FLT_SVC_DEF_ID NUMBER(14) NOT NULL
        , SVC_DEF_CHKSM VARCHAR2(30) NOT NULL
        , SVC_DEF_ID NUMBER(14)
        , SVC_NM VARCHAR2(255) NOT NULL
        , SVC_URL VARCHAR2(500) NOT NULL
        , SRVR_IP VARCHAR2(40) NOT NULL
        , SVC_NMSPC VARCHAR2(255) NOT NULL
        , SVC_ALIVE NUMBER(1) NOT NULL
        , VER_NBR NUMBER(8) default 0
    

)
/

ALTER TABLE KRSB_SVC_DEF_T
    ADD CONSTRAINT KRSB_SVC_DEF_TP1
PRIMARY KEY (SVC_DEF_ID)
/


CREATE INDEX KRSB_SVC_DEF_TI1 
  ON KRSB_SVC_DEF_T 
  (SRVR_IP, SVC_NMSPC)
/
CREATE INDEX KRSB_SVC_DEF_TI2 
  ON KRSB_SVC_DEF_T 
  (FLT_SVC_DEF_ID)
/





-----------------------------------------------------------------------------
-- KR_COUNTRY_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KR_COUNTRY_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KR_COUNTRY_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KR_COUNTRY_T
(
      POSTAL_CNTRY_CD VARCHAR2(2)
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , POSTAL_CNTRY_NM VARCHAR2(40)
        , PSTL_CNTRY_RSTRC_IND VARCHAR2(1) NOT NULL
        , ACTV_IND VARCHAR2(1) default 'Y' NOT NULL
    

)
/

ALTER TABLE KR_COUNTRY_T
    ADD CONSTRAINT KR_COUNTRY_TP1
PRIMARY KEY (POSTAL_CNTRY_CD)
/


CREATE INDEX KR_COUNTRY_TC0 
  ON KR_COUNTRY_T 
  (OBJ_ID)
/





-----------------------------------------------------------------------------
-- KR_COUNTY_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KR_COUNTY_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KR_COUNTY_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KR_COUNTY_T
(
      COUNTY_CD VARCHAR2(10)
        , STATE_CD VARCHAR2(2)
        , POSTAL_CNTRY_CD VARCHAR2(2) default 'US'
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , COUNTY_NM VARCHAR2(100)
        , ACTV_IND VARCHAR2(1)
    

)
/

ALTER TABLE KR_COUNTY_T
    ADD CONSTRAINT KR_COUNTY_TP1
PRIMARY KEY (COUNTY_CD,STATE_CD,POSTAL_CNTRY_CD)
/


CREATE INDEX KR_COUNTY_TC0 
  ON KR_COUNTY_T 
  (OBJ_ID)
/





-----------------------------------------------------------------------------
-- KR_KIM_TEST_BO
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KR_KIM_TEST_BO';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KR_KIM_TEST_BO CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KR_KIM_TEST_BO
(
      PK VARCHAR2(40)
        , PRNCPL_ID VARCHAR2(40)
    

)
/








-----------------------------------------------------------------------------
-- KR_POSTAL_CODE_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KR_POSTAL_CODE_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KR_POSTAL_CODE_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KR_POSTAL_CODE_T
(
      POSTAL_CD VARCHAR2(20)
        , POSTAL_CNTRY_CD VARCHAR2(2) default 'US'
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , POSTAL_STATE_CD VARCHAR2(2)
        , COUNTY_CD VARCHAR2(10)
        , POSTAL_CITY_NM VARCHAR2(30)
        , ACTV_IND VARCHAR2(1) default 'Y' NOT NULL
    

)
/

ALTER TABLE KR_POSTAL_CODE_T
    ADD CONSTRAINT KR_POSTAL_CODE_TP1
PRIMARY KEY (POSTAL_CD,POSTAL_CNTRY_CD)
/


CREATE INDEX KR_POSTAL_CODE_TC0 
  ON KR_POSTAL_CODE_T 
  (OBJ_ID)
/





-----------------------------------------------------------------------------
-- KR_STATE_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'KR_STATE_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE KR_STATE_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE KR_STATE_T
(
      POSTAL_STATE_CD VARCHAR2(2)
        , POSTAL_CNTRY_CD VARCHAR2(2) default 'US'
        , OBJ_ID VARCHAR2(36) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , POSTAL_STATE_NM VARCHAR2(40)
        , ACTV_IND VARCHAR2(1) default 'Y' NOT NULL
    

)
/

ALTER TABLE KR_STATE_T
    ADD CONSTRAINT KR_STATE_TP1
PRIMARY KEY (POSTAL_STATE_CD,POSTAL_CNTRY_CD)
/


CREATE INDEX KR_STATE_TC0 
  ON KR_STATE_T 
  (OBJ_ID)
/





-----------------------------------------------------------------------------
-- LOCATION_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'LOCATION_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE LOCATION_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE LOCATION_TYPE
(
      LOCATION_TYPE_CODE NUMBER(3)
        , LOCATION_TYPE_DESC VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
    

)
/

ALTER TABLE LOCATION_TYPE
    ADD CONSTRAINT LOCATION_TYPEP1
PRIMARY KEY (LOCATION_TYPE_CODE)
/







-----------------------------------------------------------------------------
-- MAIL_BY
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'MAIL_BY';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE MAIL_BY CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE MAIL_BY
(
      MAIL_BY_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE MAIL_BY
    ADD CONSTRAINT MAIL_BYP1
PRIMARY KEY (MAIL_BY_CODE)
/







-----------------------------------------------------------------------------
-- MAIL_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'MAIL_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE MAIL_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE MAIL_TYPE
(
      MAIL_TYPE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE MAIL_TYPE
    ADD CONSTRAINT MAIL_TYPEP1
PRIMARY KEY (MAIL_TYPE)
/







-----------------------------------------------------------------------------
-- MEMBERSHIP_ROLE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'MEMBERSHIP_ROLE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE MEMBERSHIP_ROLE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE MEMBERSHIP_ROLE
(
      MEMBERSHIP_ROLE_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE MEMBERSHIP_ROLE
    ADD CONSTRAINT MEMBERSHIP_ROLEP1
PRIMARY KEY (MEMBERSHIP_ROLE_CODE)
/







-----------------------------------------------------------------------------
-- MINUTE_ENTRY_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'MINUTE_ENTRY_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE MINUTE_ENTRY_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE MINUTE_ENTRY_TYPE
(
      MINUTE_ENTRY_TYPE_CODE VARCHAR2(3)
        , SORT_ID NUMBER(3) NOT NULL
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE MINUTE_ENTRY_TYPE
    ADD CONSTRAINT MINUTE_ENTRY_TYPEP1
PRIMARY KEY (MINUTE_ENTRY_TYPE_CODE)
/







-----------------------------------------------------------------------------
-- MSG_OF_THE_DAY
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'MSG_OF_THE_DAY';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE MSG_OF_THE_DAY CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE MSG_OF_THE_DAY
(
      MSG_OF_THE_DAY_ID NUMBER(12)
        , MSG VARCHAR2(4000)
        , VER_NBR NUMBER(8) NOT NULL
        , DISPLAY_ORDER NUMBER(8) NOT NULL
        , ACTIVE_FLAG VARCHAR2(1) NOT NULL
        , OBJ_ID VARCHAR2(36) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
    

)
/

ALTER TABLE MSG_OF_THE_DAY
    ADD CONSTRAINT MSG_OF_THE_DAYP1
PRIMARY KEY (MSG_OF_THE_DAY_ID)
/







-----------------------------------------------------------------------------
-- NARRATIVE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'NARRATIVE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE NARRATIVE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE NARRATIVE
(
      HIERARCHY_PROPOSAL_NUMBER VARCHAR2(12)
        , HIDE_IN_HIERARCHY CHAR(1) default 'N' NOT NULL
        , PROPOSAL_NUMBER VARCHAR2(12)
        , MODULE_NUMBER NUMBER(4)
        , MODULE_SEQUENCE_NUMBER NUMBER(4) NOT NULL
        , MODULE_TITLE VARCHAR2(150)
        , MODULE_STATUS_CODE VARCHAR2(3) NOT NULL
        , CONTACT_NAME VARCHAR2(30)
        , PHONE_NUMBER VARCHAR2(20)
        , EMAIL_ADDRESS VARCHAR2(60)
        , COMMENTS VARCHAR2(300)
        , FILE_NAME VARCHAR2(150)
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , NARRATIVE_TYPE_CODE VARCHAR2(3) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE NARRATIVE
    ADD CONSTRAINT NARRATIVEP1
PRIMARY KEY (PROPOSAL_NUMBER,MODULE_NUMBER)
/







-----------------------------------------------------------------------------
-- NARRATIVE_ATTACHMENT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'NARRATIVE_ATTACHMENT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE NARRATIVE_ATTACHMENT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE NARRATIVE_ATTACHMENT
(
      PROPOSAL_NUMBER VARCHAR2(12)
        , MODULE_NUMBER NUMBER(4)
        , NARRATIVE_DATA BLOB
        , FILE_NAME VARCHAR2(150)
        , CONTENT_TYPE VARCHAR2(250)
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE NARRATIVE_ATTACHMENT
    ADD CONSTRAINT NARRATIVE_ATTACHMENTP1
PRIMARY KEY (PROPOSAL_NUMBER,MODULE_NUMBER)
/







-----------------------------------------------------------------------------
-- NARRATIVE_STATUS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'NARRATIVE_STATUS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE NARRATIVE_STATUS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE NARRATIVE_STATUS
(
      NARRATIVE_STATUS_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(20) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE NARRATIVE_STATUS
    ADD CONSTRAINT NARRATIVE_STATUSP1
PRIMARY KEY (NARRATIVE_STATUS_CODE)
/







-----------------------------------------------------------------------------
-- NARRATIVE_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'NARRATIVE_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE NARRATIVE_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE NARRATIVE_TYPE
(
      NARRATIVE_TYPE_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , SYSTEM_GENERATED VARCHAR2(1) NOT NULL
        , ALLOW_MULTIPLE VARCHAR2(1) NOT NULL
        , NARRATIVE_TYPE_GROUP VARCHAR2(1)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE NARRATIVE_TYPE
    ADD CONSTRAINT NARRATIVE_TYPEP1
PRIMARY KEY (NARRATIVE_TYPE_CODE)
/







-----------------------------------------------------------------------------
-- NARRATIVE_USER_RIGHTS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'NARRATIVE_USER_RIGHTS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE NARRATIVE_USER_RIGHTS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE NARRATIVE_USER_RIGHTS
(
      PROPOSAL_NUMBER VARCHAR2(12)
        , MODULE_NUMBER NUMBER(4)
        , USER_ID VARCHAR2(40)
        , ACCESS_TYPE CHAR(1) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE NARRATIVE_USER_RIGHTS
    ADD CONSTRAINT NARRATIVE_USER_RIGHTSP1
PRIMARY KEY (PROPOSAL_NUMBER,MODULE_NUMBER,USER_ID)
/







-----------------------------------------------------------------------------
-- NOTICE_OF_OPPORTUNITY
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'NOTICE_OF_OPPORTUNITY';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE NOTICE_OF_OPPORTUNITY CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE NOTICE_OF_OPPORTUNITY
(
      NOTICE_OF_OPPORTUNITY_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE NOTICE_OF_OPPORTUNITY
    ADD CONSTRAINT NOTICE_OF_OPPORTUNITYP1
PRIMARY KEY (NOTICE_OF_OPPORTUNITY_CODE)
/







-----------------------------------------------------------------------------
-- NSF_CODES
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'NSF_CODES';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE NSF_CODES CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE NSF_CODES
(
      NSF_SEQUENCE_NUMBER NUMBER(12)
        , NSF_CODE VARCHAR2(15) NOT NULL
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE NSF_CODES
    ADD CONSTRAINT NSF_CODESP1
PRIMARY KEY (NSF_SEQUENCE_NUMBER)
/







-----------------------------------------------------------------------------
-- ORGANIZATION
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'ORGANIZATION';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE ORGANIZATION CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE ORGANIZATION
(
      ORGANIZATION_ID VARCHAR2(8)
        , ORGANIZATION_NAME VARCHAR2(60) NOT NULL
        , CONTACT_ADDRESS_ID NUMBER(6) NOT NULL
        , ADDRESS VARCHAR2(60)
        , CABLE_ADDRESS VARCHAR2(20)
        , TELEX_NUMBER VARCHAR2(20)
        , COUNTY VARCHAR2(30)
        , CONGRESSIONAL_DISTRICT VARCHAR2(50)
        , INCORPORATED_IN VARCHAR2(50)
        , INCORPORATED_DATE DATE
        , NUMBER_OF_EMPLOYEES NUMBER(6)
        , IRS_TAX_EXCEMPTION VARCHAR2(30)
        , FEDRAL_EMPLOYER_ID VARCHAR2(15)
        , MASS_TAX_EXCEMPT_NUM VARCHAR2(30)
        , AGENCY_SYMBOL VARCHAR2(30)
        , VENDOR_CODE VARCHAR2(30)
        , COM_GOV_ENTITY_CODE VARCHAR2(30)
        , MASS_EMPLOYEE_CLAIM VARCHAR2(30)
        , DUNS_NUMBER VARCHAR2(20)
        , DUNS_PLUS_FOUR_NUMBER VARCHAR2(20)
        , DODAC_NUMBER VARCHAR2(20)
        , CAGE_NUMBER VARCHAR2(20)
        , HUMAN_SUB_ASSURANCE VARCHAR2(30)
        , ANIMAL_WELFARE_ASSURANCE VARCHAR2(20)
        , SCIENCE_MISCONDUCT_COMPL_DATE DATE
        , PHS_ACOUNT VARCHAR2(30)
        , NSF_INSTITUTIONAL_CODE VARCHAR2(30)
        , INDIRECT_COST_RATE_AGREEMENT VARCHAR2(50)
        , COGNIZANT_AUDITOR NUMBER(6)
        , ONR_RESIDENT_REP NUMBER(6)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE ORGANIZATION
    ADD CONSTRAINT ORGANIZATIONP1
PRIMARY KEY (ORGANIZATION_ID)
/







-----------------------------------------------------------------------------
-- ORGANIZATION_AUDIT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'ORGANIZATION_AUDIT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE ORGANIZATION_AUDIT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE ORGANIZATION_AUDIT
(
      ORGANIZATION_ID VARCHAR2(8)
        , FISCAL_YEAR CHAR(4)
        , AUDIT_ACCEPTED CHAR(1)
        , AUDIT_COMMENT VARCHAR2(300)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE ORGANIZATION_AUDIT
    ADD CONSTRAINT ORGANIZATION_AUDITP1
PRIMARY KEY (ORGANIZATION_ID,FISCAL_YEAR)
/







-----------------------------------------------------------------------------
-- ORGANIZATION_IDC
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'ORGANIZATION_IDC';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE ORGANIZATION_IDC CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE ORGANIZATION_IDC
(
      ORGANIZATION_ID VARCHAR2(8)
        , IDC_NUMBER NUMBER(3)
        , START_DATE DATE
        , END_DATE DATE
        , REQUESTED_DATE DATE
        , IDC_RATE_TYPE_CODE NUMBER(3)
        , APPLICABLE_IDC_RATE NUMBER(5,2)
        , IDC_COMMENT VARCHAR2(300)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE ORGANIZATION_IDC
    ADD CONSTRAINT ORGANIZATION_IDCP1
PRIMARY KEY (ORGANIZATION_ID,IDC_NUMBER)
/







-----------------------------------------------------------------------------
-- ORGANIZATION_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'ORGANIZATION_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE ORGANIZATION_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE ORGANIZATION_TYPE
(
      ORGANIZATION_ID VARCHAR2(8)
        , ORGANIZATION_TYPE_CODE NUMBER(3)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE ORGANIZATION_TYPE
    ADD CONSTRAINT ORGANIZATION_TYPEP1
PRIMARY KEY (ORGANIZATION_ID,ORGANIZATION_TYPE_CODE)
/







-----------------------------------------------------------------------------
-- ORGANIZATION_TYPE_LIST
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'ORGANIZATION_TYPE_LIST';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE ORGANIZATION_TYPE_LIST CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE ORGANIZATION_TYPE_LIST
(
      ORGANIZATION_TYPE_CODE NUMBER(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE ORGANIZATION_TYPE_LIST
    ADD CONSTRAINT ORGANIZATION_TYPE_LISTP1
PRIMARY KEY (ORGANIZATION_TYPE_CODE)
/







-----------------------------------------------------------------------------
-- ORGANIZATION_YNQ
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'ORGANIZATION_YNQ';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE ORGANIZATION_YNQ CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE ORGANIZATION_YNQ
(
      ORGANIZATION_ID VARCHAR2(8)
        , QUESTION_ID VARCHAR2(4)
        , ANSWER CHAR(1) NOT NULL
        , EXPLANATION VARCHAR2(2000)
        , REVIEW_DATE DATE
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE ORGANIZATION_YNQ
    ADD CONSTRAINT ORGANIZATION_YNQP1
PRIMARY KEY (ORGANIZATION_ID,QUESTION_ID)
/







-----------------------------------------------------------------------------
-- PENDING_TRANSACTIONS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PENDING_TRANSACTIONS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PENDING_TRANSACTIONS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PENDING_TRANSACTIONS
(
      TRANSACTION_ID NUMBER(10)
        , DOCUMENT_NUMBER VARCHAR2(10) NOT NULL
        , SOURCE_AWARD_NUMBER VARCHAR2(12) NOT NULL
        , DESTINATION_AWARD_NUMBER VARCHAR2(12) NOT NULL
        , OBLIGATED_AMOUNT NUMBER(12,2)
        , ANTICIPATED_AMOUNT NUMBER(12,2)
        , COMMENTS VARCHAR2(2000)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PENDING_TRANSACTIONS
    ADD CONSTRAINT PENDING_TRANSACTIONSP1
PRIMARY KEY (TRANSACTION_ID)
/







-----------------------------------------------------------------------------
-- PERSON_APPOINTMENT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PERSON_APPOINTMENT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PERSON_APPOINTMENT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PERSON_APPOINTMENT
(
      APPOINTMENT_ID NUMBER(22)
        , PERSON_ID VARCHAR2(40) NOT NULL
        , UNIT_NUMBER VARCHAR2(8) NOT NULL
        , APPOINTMENT_START_DATE DATE
        , APPOINTMENT_END_DATE DATE
        , APPOINTMENT_TYPE_CODE VARCHAR2(3)
        , JOB_TITLE VARCHAR2(50)
        , PREFERED_JOB_TITLE VARCHAR2(51)
        , JOB_CODE VARCHAR2(6) NOT NULL
        , SALARY NUMBER(12,2)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE PERSON_APPOINTMENT
    ADD CONSTRAINT PERSON_APPOINTMENTP1
PRIMARY KEY (APPOINTMENT_ID)
/







-----------------------------------------------------------------------------
-- PERSON_DEGREE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PERSON_DEGREE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PERSON_DEGREE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PERSON_DEGREE
(
      DEGREE_ID NUMBER(22)
        , PERSON_ID VARCHAR2(40) NOT NULL
        , GRADUATION_YEAR VARCHAR2(4)
        , DEGREE_CODE VARCHAR2(6)
        , DEGREE VARCHAR2(80)
        , FIELD_OF_STUDY VARCHAR2(80)
        , SPECIALIZATION VARCHAR2(80)
        , SCHOOL VARCHAR2(50)
        , SCHOOL_ID_CODE VARCHAR2(3)
        , SCHOOL_ID VARCHAR2(20)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PERSON_DEGREE
    ADD CONSTRAINT PERSON_DEGREEP1
PRIMARY KEY (DEGREE_ID)
/







-----------------------------------------------------------------------------
-- PERSON_EDITABLE_FIELDS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PERSON_EDITABLE_FIELDS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PERSON_EDITABLE_FIELDS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PERSON_EDITABLE_FIELDS
(
      FIELD_NAME VARCHAR2(255)
        , ACTIVE_FLAG CHAR(1)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PERSON_EDITABLE_FIELDS
    ADD CONSTRAINT PERSON_EDITABLE_FIELDSP1
PRIMARY KEY (FIELD_NAME)
/







-----------------------------------------------------------------------------
-- PERSON_EXT_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PERSON_EXT_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PERSON_EXT_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PERSON_EXT_T
(
      VER_NBR NUMBER(8) default 1 NOT NULL
        , PERSON_ID VARCHAR2(40)
        , AGE_BY_FISCAL_YEAR NUMBER(3)
        , RACE VARCHAR2(30)
        , EDUCATION_LEVEL VARCHAR2(30)
        , DEGREE VARCHAR2(11)
        , MAJOR VARCHAR2(30)
        , IS_HANDICAPPED CHAR(1)
        , HANDICAP_TYPE VARCHAR2(30)
        , IS_VETERAN CHAR(1)
        , VETERAN_TYPE VARCHAR2(30)
        , VISA_CODE VARCHAR2(20)
        , VISA_TYPE VARCHAR2(30)
        , VISA_RENEWAL_DATE DATE
        , HAS_VISA CHAR(1)
        , OFFICE_LOCATION VARCHAR2(30)
        , SECONDRY_OFFICE_LOCATION VARCHAR2(30)
        , SCHOOL VARCHAR2(50)
        , YEAR_GRADUATED VARCHAR2(30)
        , DIRECTORY_DEPARTMENT VARCHAR2(30)
        , PRIMARY_TITLE VARCHAR2(51)
        , DIRECTORY_TITLE VARCHAR2(50)
        , IS_RESEARCH_STAFF CHAR(1)
        , VACATION_ACCURAL CHAR(1)
        , IS_ON_SABBATICAL CHAR(1)
        , ID_PROVIDED VARCHAR2(30)
        , ID_VERIFIED VARCHAR2(30)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , COUNTY VARCHAR2(30)
        , BIOSKETCH_DESCRIPTION VARCHAR2(4000)
        , BIOSKETCH_FILE BLOB
        , BIOSKETCH_FILENAME VARCHAR2(300)
        , BIOSKETCH_FILE_CONTENT_TYPE VARCHAR2(200)
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PERSON_EXT_T
    ADD CONSTRAINT PERSON_EXT_TP1
PRIMARY KEY (PERSON_ID)
/







-----------------------------------------------------------------------------
-- PERSON_TRAINING
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PERSON_TRAINING';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PERSON_TRAINING CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PERSON_TRAINING
(
      PERSON_TRAINING_ID NUMBER(12)
        , PERSON_ID VARCHAR2(40) NOT NULL
        , TRAINING_NUMBER NUMBER(4) NOT NULL
        , TRAINING_CODE NUMBER(4) NOT NULL
        , DATE_REQUESTED DATE
        , DATE_SUBMITTED DATE
        , DATE_ACKNOWLEDGED DATE
        , FOLLOWUP_DATE DATE
        , SCORE VARCHAR2(9)
        , COMMENTS CLOB
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PERSON_TRAINING
    ADD CONSTRAINT PERSON_TRAININGP1
PRIMARY KEY (PERSON_TRAINING_ID)
/


CREATE INDEX UQ_PERSON_TRAINING 
  ON PERSON_TRAINING 
  (PERSON_ID, TRAINING_NUMBER)
/





-----------------------------------------------------------------------------
-- PROPOSAL
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROPOSAL';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROPOSAL CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROPOSAL
(
      DOCUMENT_NUMBER VARCHAR2(10) NOT NULL
        , CREATE_TIMESTAMP DATE
        , MAIL_DESCRIPTION VARCHAR2(80)
        , PROPOSAL_SEQUENCE_STATUS VARCHAR2(10) NOT NULL
        , FISCAL_MONTH VARCHAR2(2)
        , FISCAL_YEAR VARCHAR2(4)
        , LEAD_UNIT_NUMBER VARCHAR2(8)
        , PROPOSAL_ID NUMBER(12)
        , PROPOSAL_NUMBER VARCHAR2(8) NOT NULL
        , SPONSOR_PROPOSAL_NUMBER VARCHAR2(70)
        , SEQUENCE_NUMBER NUMBER(4) NOT NULL
        , PROPOSAL_TYPE_CODE VARCHAR2(3) NOT NULL
        , CURRENT_ACCOUNT_NUMBER VARCHAR2(7)
        , TITLE VARCHAR2(200) NOT NULL
        , SPONSOR_CODE CHAR(6) NOT NULL
        , ROLODEX_ID NUMBER(6)
        , NOTICE_OF_OPPORTUNITY_CODE VARCHAR2(3)
        , GRAD_STUD_HEADCOUNT NUMBER(3)
        , GRAD_STUD_PERSON_MONTHS NUMBER(5,2)
        , TYPE_OF_ACCOUNT CHAR(1)
        , ACTIVITY_TYPE_CODE VARCHAR2(3) NOT NULL
        , REQUESTED_START_DATE_INITIAL DATE
        , REQUESTED_START_DATE_TOTAL DATE
        , REQUESTED_END_DATE_INITIAL DATE
        , REQUESTED_END_DATE_TOTAL DATE
        , TOTAL_DIRECT_COST_INITIAL NUMBER(12,2)
        , TOTAL_DIRECT_COST_TOTAL NUMBER(12,2)
        , TOTAL_INDIRECT_COST_INITIAL NUMBER(12,2)
        , TOTAL_INDIRECT_COST_TOTAL NUMBER(12,2)
        , NUMBER_OF_COPIES VARCHAR2(7)
        , DEADLINE_DATE DATE
        , DEADLINE_TYPE CHAR(1)
        , MAIL_BY CHAR(1)
        , MAIL_TYPE CHAR(1)
        , MAIL_ACCOUNT_NUMBER CHAR(7)
        , SUBCONTRACT_FLAG CHAR(1) NOT NULL
        , COST_SHARING_INDICATOR CHAR(2) NOT NULL
        , IDC_RATE_INDICATOR CHAR(2) NOT NULL
        , SPECIAL_REVIEW_INDICATOR CHAR(2) NOT NULL
        , STATUS_CODE NUMBER(3) NOT NULL
        , SCIENCE_CODE_INDICATOR CHAR(2) NOT NULL
        , NSF_CODE VARCHAR2(15)
        , PRIME_SPONSOR_CODE CHAR(6)
        , INITIAL_CONTRACT_ADMIN VARCHAR2(40)
        , IP_REVIEW_ACTIVITY_INDICATOR CHAR(2) NOT NULL
        , CURRENT_AWARD_NUMBER VARCHAR2(12)
        , CFDA_NUMBER VARCHAR2(7)
        , OPPORTUNITY VARCHAR2(50)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , AWARD_TYPE_CODE NUMBER(3)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROPOSAL
    ADD CONSTRAINT PROPOSALP1
PRIMARY KEY (PROPOSAL_ID)
/


CREATE INDEX UQ_PROPOSAL 
  ON PROPOSAL 
  (PROPOSAL_NUMBER, SEQUENCE_NUMBER)
/





-----------------------------------------------------------------------------
-- PROPOSAL_ADMIN_DETAILS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROPOSAL_ADMIN_DETAILS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROPOSAL_ADMIN_DETAILS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROPOSAL_ADMIN_DETAILS
(
      PROPOSAL_ADMIN_DETAIL_ID NUMBER(22)
        , DEV_PROPOSAL_NUMBER VARCHAR2(12) NOT NULL
        , INST_PROPOSAL_ID NUMBER(22) NOT NULL
        , DATE_SUBMITTED_BY_DEPT DATE
        , DATE_RETURNED_TO_DEPT DATE
        , DATE_APPROVED_BY_OSP DATE
        , DATE_SUBMITTED_TO_AGENCY DATE
        , INST_PROP_CREATE_DATE DATE
        , INST_PROP_CREATE_USER VARCHAR2(8)
        , SIGNED_BY VARCHAR2(8)
        , SUBMISSION_TYPE CHAR(1)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROPOSAL_ADMIN_DETAILS
    ADD CONSTRAINT PROPOSAL_ADMIN_DETAILSP1
PRIMARY KEY (PROPOSAL_ADMIN_DETAIL_ID)
/







-----------------------------------------------------------------------------
-- PROPOSAL_COMMENTS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROPOSAL_COMMENTS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROPOSAL_COMMENTS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROPOSAL_COMMENTS
(
      PROPOSAL_COMMENTS_ID NUMBER(12)
        , PROPOSAL_ID NUMBER(12) NOT NULL
        , PROPOSAL_NUMBER VARCHAR2(8) NOT NULL
        , SEQUENCE_NUMBER NUMBER(4) NOT NULL
        , COMMENT_TYPE_CODE VARCHAR2(3) NOT NULL
        , COMMENTS CLOB
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROPOSAL_COMMENTS
    ADD CONSTRAINT PROPOSAL_COMMENTSP1
PRIMARY KEY (PROPOSAL_COMMENTS_ID)
/


CREATE INDEX UQ_PROPOSAL_COMMENTS 
  ON PROPOSAL_COMMENTS 
  (PROPOSAL_NUMBER, SEQUENCE_NUMBER, COMMENT_TYPE_CODE)
/





-----------------------------------------------------------------------------
-- PROPOSAL_COST_SHARING
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROPOSAL_COST_SHARING';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROPOSAL_COST_SHARING CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROPOSAL_COST_SHARING
(
      PROPOSAL_COST_SHARING_ID NUMBER(12)
        , PROPOSAL_ID NUMBER(12) NOT NULL
        , PROPOSAL_NUMBER VARCHAR2(8) NOT NULL
        , SEQUENCE_NUMBER NUMBER(4) NOT NULL
        , FISCAL_YEAR CHAR(4) NOT NULL
        , COST_SHARING_PERCENTAGE NUMBER(5,2)
        , COST_SHARING_TYPE_CODE NUMBER(3) NOT NULL
        , SOURCE_ACCOUNT VARCHAR2(32)
        , AMOUNT NUMBER(12,2)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROPOSAL_COST_SHARING
    ADD CONSTRAINT PROPOSAL_COST_SHARINGP1
PRIMARY KEY (PROPOSAL_COST_SHARING_ID)
/


CREATE INDEX UQ_PROPOSAL_COST_SHARING 
  ON PROPOSAL_COST_SHARING 
  (PROPOSAL_NUMBER, SEQUENCE_NUMBER, FISCAL_YEAR, COST_SHARING_TYPE_CODE, SOURCE_ACCOUNT)
/





-----------------------------------------------------------------------------
-- PROPOSAL_CUSTOM_DATA
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROPOSAL_CUSTOM_DATA';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROPOSAL_CUSTOM_DATA CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROPOSAL_CUSTOM_DATA
(
      PROPOSAL_CUSTOM_DATA_ID NUMBER(12)
        , PROPOSAL_ID NUMBER(22)
        , PROPOSAL_NUMBER VARCHAR2(10)
        , SEQUENCE_NUMBER NUMBER(8)
        , CUSTOM_ATTRIBUTE_ID NUMBER(12)
        , VALUE VARCHAR2(2000)
        , UPDATE_TIMESTAMP DATE
        , UPDATE_USER VARCHAR2(60)
        , VER_NBR NUMBER(8) default 1
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE PROPOSAL_CUSTOM_DATA
    ADD CONSTRAINT PROPOSAL_CUSTOM_DATAP1
PRIMARY KEY (PROPOSAL_CUSTOM_DATA_ID)
/







-----------------------------------------------------------------------------
-- PROPOSAL_EXEMPT_NUMBER
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROPOSAL_EXEMPT_NUMBER';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROPOSAL_EXEMPT_NUMBER CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROPOSAL_EXEMPT_NUMBER
(
      PROPOSAL_EXEMPT_NUMBER_ID NUMBER(12)
        , PROPOSAL_SPECIAL_REVIEW_ID NUMBER(12)
        , EXEMPTION_TYPE_CODE VARCHAR2(3)
        , UPDATE_USER VARCHAR2(60)
        , UPDATE_TIMESTAMP DATE
        , VER_NBR NUMBER(8) default 1
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROPOSAL_EXEMPT_NUMBER
    ADD CONSTRAINT PROPOSAL_EXEMPT_NUMBERP1
PRIMARY KEY (PROPOSAL_EXEMPT_NUMBER_ID)
/







-----------------------------------------------------------------------------
-- PROPOSAL_IDC_RATE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROPOSAL_IDC_RATE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROPOSAL_IDC_RATE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROPOSAL_IDC_RATE
(
      PROPOSAL_ID NUMBER(12) NOT NULL
        , PROPOSAL_IDC_RATE_ID NUMBER(12)
        , PROPOSAL_NUMBER VARCHAR2(8) NOT NULL
        , SEQUENCE_NUMBER NUMBER(4) NOT NULL
        , APPLICABLE_IDC_RATE NUMBER(5,2)
        , IDC_RATE_TYPE_CODE NUMBER(3) NOT NULL
        , FISCAL_YEAR CHAR(4) NOT NULL
        , ON_CAMPUS_FLAG CHAR(1) NOT NULL
        , UNDERRECOVERY_OF_IDC NUMBER(12,2)
        , SOURCE_ACCOUNT VARCHAR2(32)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROPOSAL_IDC_RATE
    ADD CONSTRAINT PROPOSAL_IDC_RATEP1
PRIMARY KEY (PROPOSAL_IDC_RATE_ID)
/


CREATE INDEX UQ_PROPOSAL_IDC_RATE 
  ON PROPOSAL_IDC_RATE 
  (PROPOSAL_NUMBER, SEQUENCE_NUMBER, APPLICABLE_IDC_RATE, IDC_RATE_TYPE_CODE, FISCAL_YEAR, ON_CAMPUS_FLAG, SOURCE_ACCOUNT)
/





-----------------------------------------------------------------------------
-- PROPOSAL_INV_CERTIFICATION
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROPOSAL_INV_CERTIFICATION';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROPOSAL_INV_CERTIFICATION CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROPOSAL_INV_CERTIFICATION
(
      PROPOSAL_NUMBER VARCHAR2(12)
        , PROP_PERSON_NUMBER NUMBER(12)
        , CERTIFIED_FLAG CHAR(1)
        , DATE_CERTIFIED DATE
        , DATE_RECEIVED_BY_OSP DATE
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROPOSAL_INV_CERTIFICATION
    ADD CONSTRAINT PROPOSAL_INV_CERTIFICATIONP1
PRIMARY KEY (PROPOSAL_NUMBER,PROP_PERSON_NUMBER)
/







-----------------------------------------------------------------------------
-- PROPOSAL_IP_REVIEW_JOIN
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROPOSAL_IP_REVIEW_JOIN';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROPOSAL_IP_REVIEW_JOIN CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROPOSAL_IP_REVIEW_JOIN
(
      PROPOSAL_IP_REVIEW_JOIN_ID NUMBER(12)
        , PROPOSAL_ID NUMBER(12) NOT NULL
        , IP_REVIEW_ID NUMBER(12)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROPOSAL_IP_REVIEW_JOIN
    ADD CONSTRAINT PROPOSAL_IP_REVIEW_JOINP1
PRIMARY KEY (PROPOSAL_IP_REVIEW_JOIN_ID)
/







-----------------------------------------------------------------------------
-- PROPOSAL_IP_REV_ACTIVITY
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROPOSAL_IP_REV_ACTIVITY';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROPOSAL_IP_REV_ACTIVITY CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROPOSAL_IP_REV_ACTIVITY
(
      PROPOSAL_IP_REV_ACTIVITY_ID NUMBER(12)
        , PROPOSAL_NUMBER VARCHAR2(8) NOT NULL
        , SEQUENCE_NUMBER NUMBER(4) NOT NULL
        , ACTIVITY_NUMBER NUMBER(3) NOT NULL
        , IP_REVIEW_ACTIVITY_TYPE_CODE VARCHAR2(3) NOT NULL
        , ACTIVITY_DATE DATE
        , COMMENTS VARCHAR2(150)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , IP_REVIEW_ID NUMBER(12) NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROPOSAL_IP_REV_ACTIVITY
    ADD CONSTRAINT PROPOSAL_IP_REV_ACTIVITYP1
PRIMARY KEY (PROPOSAL_IP_REV_ACTIVITY_ID)
/


CREATE INDEX UQ_PROPOSAL_IP_REV_ACTIVITY 
  ON PROPOSAL_IP_REV_ACTIVITY 
  (PROPOSAL_NUMBER, SEQUENCE_NUMBER, ACTIVITY_NUMBER)
/





-----------------------------------------------------------------------------
-- PROPOSAL_LOG
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROPOSAL_LOG';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROPOSAL_LOG CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROPOSAL_LOG
(
      FISCAL_MONTH NUMBER(2)
        , FISCAL_YEAR NUMBER(4)
        , PI_NAME VARCHAR2(100)
        , PROPOSAL_TYPE_CODE VARCHAR2(3) NOT NULL
        , LOG_STATUS VARCHAR2(3) NOT NULL
        , CREATE_TIMESTAMP DATE NOT NULL
        , CREATE_USER VARCHAR2(60) NOT NULL
        , PI_ID VARCHAR2(40)
        , ROLODEX_ID NUMBER(6)
        , PROPOSAL_LOG_TYPE_CODE VARCHAR2(3)
        , PROPOSAL_NUMBER VARCHAR2(8)
        , TITLE VARCHAR2(200) NOT NULL
        , LEAD_UNIT VARCHAR2(8) NOT NULL
        , SPONSOR_CODE CHAR(6)
        , SPONSOR_NAME VARCHAR2(200)
        , COMMENTS VARCHAR2(300)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , DEADLINE_DATE DATE
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROPOSAL_LOG
    ADD CONSTRAINT PROPOSAL_LOGP1
PRIMARY KEY (PROPOSAL_NUMBER)
/







-----------------------------------------------------------------------------
-- PROPOSAL_LOG_STATUS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROPOSAL_LOG_STATUS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROPOSAL_LOG_STATUS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROPOSAL_LOG_STATUS
(
      PROPOSAL_LOG_STATUS_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROPOSAL_LOG_STATUS
    ADD CONSTRAINT PROPOSAL_LOG_STATUSP1
PRIMARY KEY (PROPOSAL_LOG_STATUS_CODE)
/







-----------------------------------------------------------------------------
-- PROPOSAL_LOG_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROPOSAL_LOG_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROPOSAL_LOG_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROPOSAL_LOG_TYPE
(
      PROPOSAL_LOG_TYPE_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROPOSAL_LOG_TYPE
    ADD CONSTRAINT PROPOSAL_LOG_TYPEP1
PRIMARY KEY (PROPOSAL_LOG_TYPE_CODE)
/







-----------------------------------------------------------------------------
-- PROPOSAL_NOTEPAD
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROPOSAL_NOTEPAD';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROPOSAL_NOTEPAD CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROPOSAL_NOTEPAD
(
      CREATE_TIMESTAMP DATE NOT NULL
        , NOTE_TOPIC VARCHAR2(60) NOT NULL
        , PROPOSAL_ID NUMBER(12) NOT NULL
        , PROPOSAL_NOTEPAD_ID NUMBER(12)
        , PROPOSAL_NUMBER VARCHAR2(8) NOT NULL
        , ENTRY_NUMBER NUMBER(4) NOT NULL
        , COMMENTS CLOB NOT NULL
        , RESTRICTED_VIEW CHAR(1) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROPOSAL_NOTEPAD
    ADD CONSTRAINT PROPOSAL_NOTEPADP1
PRIMARY KEY (PROPOSAL_NOTEPAD_ID)
/







-----------------------------------------------------------------------------
-- PROPOSAL_PERSONS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROPOSAL_PERSONS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROPOSAL_PERSONS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROPOSAL_PERSONS
(
      PROPOSAL_PERSON_ID NUMBER(22)
        , PROPOSAL_ID NUMBER(12) NOT NULL
        , PROPOSAL_NUMBER VARCHAR2(10) NOT NULL
        , SEQUENCE_NUMBER NUMBER(4) NOT NULL
        , PERSON_ID VARCHAR2(40)
        , ROLODEX_ID NUMBER(6)
        , FULL_NAME VARCHAR2(90)
        , CONTACT_ROLE_CODE VARCHAR2(12) NOT NULL
        , KEY_PERSON_PROJECT_ROLE VARCHAR2(60)
        , ACADEMIC_YEAR_EFFORT NUMBER(5,2)
        , CALENDAR_YEAR_EFFORT NUMBER(5,2)
        , SUMMER_EFFORT NUMBER(5,2)
        , TOTAL_EFFORT NUMBER(5,2)
        , FACULTY_FLAG CHAR(1) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) NOT NULL
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE PROPOSAL_PERSONS
    ADD CONSTRAINT PROPOSAL_PERSONSP1
PRIMARY KEY (PROPOSAL_PERSON_ID)
/







-----------------------------------------------------------------------------
-- PROPOSAL_PERSON_UNITS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROPOSAL_PERSON_UNITS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROPOSAL_PERSON_UNITS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROPOSAL_PERSON_UNITS
(
      PROPOSAL_PERSON_ID NUMBER(22) NOT NULL
        , UNIT_NUMBER VARCHAR2(8) NOT NULL
        , LEAD_UNIT_FLAG CHAR(1) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) NOT NULL
        , OBJ_ID VARCHAR2(36) NOT NULL
        , PROPOSAL_PERSON_UNIT_ID NUMBER(22)
    

)
/

ALTER TABLE PROPOSAL_PERSON_UNITS
    ADD CONSTRAINT PROPOSAL_PERSON_UNITSP1
PRIMARY KEY (PROPOSAL_PERSON_UNIT_ID)
/







-----------------------------------------------------------------------------
-- PROPOSAL_PERS_UNIT_CRED_SPLITS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROPOSAL_PERS_UNIT_CRED_SPLITS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROPOSAL_PERS_UNIT_CRED_SPLITS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROPOSAL_PERS_UNIT_CRED_SPLITS
(
      PPU_CREDIT_SPLIT_ID NUMBER(22)
        , PROPOSAL_PERSON_UNIT_ID NUMBER(22) NOT NULL
        , INV_CREDIT_TYPE_CODE VARCHAR2(3) NOT NULL
        , CREDIT NUMBER(5,2)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) NOT NULL
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE PROPOSAL_PERS_UNIT_CRED_SPLITS
    ADD CONSTRAINT PROPOSAL_PERS_UNIT_CRED_SPLP1
PRIMARY KEY (PPU_CREDIT_SPLIT_ID)
/







-----------------------------------------------------------------------------
-- PROPOSAL_PER_CREDIT_SPLIT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROPOSAL_PER_CREDIT_SPLIT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROPOSAL_PER_CREDIT_SPLIT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROPOSAL_PER_CREDIT_SPLIT
(
      PROPOSAL_PER_CREDIT_SPLIT_ID NUMBER(22)
        , PROPOSAL_PERSON_ID NUMBER(22) NOT NULL
        , INV_CREDIT_TYPE_CODE VARCHAR2(3) NOT NULL
        , CREDIT NUMBER(5,2)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) NOT NULL
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE PROPOSAL_PER_CREDIT_SPLIT
    ADD CONSTRAINT PROPOSAL_PER_CREDIT_SPLITP1
PRIMARY KEY (PROPOSAL_PER_CREDIT_SPLIT_ID)
/







-----------------------------------------------------------------------------
-- PROPOSAL_RESPONSE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROPOSAL_RESPONSE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROPOSAL_RESPONSE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROPOSAL_RESPONSE
(
      PROPOSAL_RESPONSE_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROPOSAL_RESPONSE
    ADD CONSTRAINT PROPOSAL_RESPONSEP1
PRIMARY KEY (PROPOSAL_RESPONSE_CODE)
/







-----------------------------------------------------------------------------
-- PROPOSAL_SCIENCE_KEYWORD
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROPOSAL_SCIENCE_KEYWORD';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROPOSAL_SCIENCE_KEYWORD CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROPOSAL_SCIENCE_KEYWORD
(
      PROPOSAL_SCIENCE_KEYWORD_ID NUMBER(12)
        , PROPOSAL_ID NUMBER(12) NOT NULL
        , PROPOSAL_NUMBER VARCHAR2(8) NOT NULL
        , SEQUENCE_NUMBER NUMBER(4) NOT NULL
        , SCIENCE_KEYWORD_CODE VARCHAR2(3) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROPOSAL_SCIENCE_KEYWORD
    ADD CONSTRAINT PROPOSAL_SCIENCE_KEYWORDP1
PRIMARY KEY (PROPOSAL_SCIENCE_KEYWORD_ID)
/


CREATE INDEX UQ_PROPOSAL_SCIENCE_KEYWORD 
  ON PROPOSAL_SCIENCE_KEYWORD 
  (PROPOSAL_NUMBER, SEQUENCE_NUMBER, SCIENCE_KEYWORD_CODE)
/





-----------------------------------------------------------------------------
-- PROPOSAL_SPECIAL_REVIEW
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROPOSAL_SPECIAL_REVIEW';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROPOSAL_SPECIAL_REVIEW CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROPOSAL_SPECIAL_REVIEW
(
      EXPIRATION_DATE DATE
        , PROPOSAL_SPECIAL_REVIEW_ID NUMBER(12)
        , PROPOSAL_ID NUMBER(12) NOT NULL
        , PROPOSAL_NUMBER VARCHAR2(8) NOT NULL
        , SEQUENCE_NUMBER NUMBER(4) NOT NULL
        , SPECIAL_REVIEW_NUMBER NUMBER(3) NOT NULL
        , SPECIAL_REVIEW_CODE VARCHAR2(3) NOT NULL
        , APPROVAL_TYPE_CODE VARCHAR2(3) NOT NULL
        , PROTOCOL_NUMBER VARCHAR2(20)
        , APPLICATION_DATE DATE
        , APPROVAL_DATE DATE
        , COMMENTS CLOB
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROPOSAL_SPECIAL_REVIEW
    ADD CONSTRAINT PROPOSAL_SPECIAL_REVIEWP1
PRIMARY KEY (PROPOSAL_SPECIAL_REVIEW_ID)
/







-----------------------------------------------------------------------------
-- PROPOSAL_STATE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROPOSAL_STATE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROPOSAL_STATE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROPOSAL_STATE
(
      STATE_TYPE_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROPOSAL_STATE
    ADD CONSTRAINT PROPOSAL_STATEP1
PRIMARY KEY (STATE_TYPE_CODE)
/







-----------------------------------------------------------------------------
-- PROPOSAL_STATUS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROPOSAL_STATUS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROPOSAL_STATUS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROPOSAL_STATUS
(
      PROPOSAL_STATUS_CODE NUMBER(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROPOSAL_STATUS
    ADD CONSTRAINT PROPOSAL_STATUSP1
PRIMARY KEY (PROPOSAL_STATUS_CODE)
/







-----------------------------------------------------------------------------
-- PROPOSAL_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROPOSAL_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROPOSAL_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROPOSAL_TYPE
(
      PROPOSAL_TYPE_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROPOSAL_TYPE
    ADD CONSTRAINT PROPOSAL_TYPEP1
PRIMARY KEY (PROPOSAL_TYPE_CODE)
/







-----------------------------------------------------------------------------
-- PROPOSAL_UNITS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROPOSAL_UNITS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROPOSAL_UNITS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROPOSAL_UNITS
(
      PROPOSAL_NUMBER VARCHAR2(8) NOT NULL
        , SEQUENCE_NUMBER NUMBER(4) NOT NULL
        , PERSON_ID VARCHAR2(40) NOT NULL
        , UNIT_NUMBER VARCHAR2(8) NOT NULL
        , LEAD_UNIT_FLAG CHAR(1)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , PROPOSAL_UNITS_ID NUMBER(12)
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROPOSAL_UNITS
    ADD CONSTRAINT PROPOSAL_UNITSP1
PRIMARY KEY (PROPOSAL_UNITS_ID)
/


CREATE INDEX UQ_PROPOSAL_UNITS 
  ON PROPOSAL_UNITS 
  (PROPOSAL_NUMBER, SEQUENCE_NUMBER, PERSON_ID, UNIT_NUMBER)
/





-----------------------------------------------------------------------------
-- PROPOSAL_UNIT_CONTACTS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROPOSAL_UNIT_CONTACTS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROPOSAL_UNIT_CONTACTS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROPOSAL_UNIT_CONTACTS
(
      PROPOSAL_UNIT_CONTACT_ID NUMBER(22)
        , PROPOSAL_ID NUMBER(22) NOT NULL
        , PROPOSAL_NUMBER VARCHAR2(10) NOT NULL
        , SEQUENCE_NUMBER NUMBER(4) NOT NULL
        , PERSON_ID VARCHAR2(40)
        , FULL_NAME VARCHAR2(90)
        , UNIT_ADMINISTRATOR_TYPE_CODE VARCHAR2(3) NOT NULL
        , UNIT_CONTACT_TYPE VARCHAR2(13) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) NOT NULL
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE PROPOSAL_UNIT_CONTACTS
    ADD CONSTRAINT PROPOSAL_UNIT_CONTACTSP1
PRIMARY KEY (PROPOSAL_UNIT_CONTACT_ID)
/







-----------------------------------------------------------------------------
-- PROPOSAL_UNIT_CREDIT_SPLIT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROPOSAL_UNIT_CREDIT_SPLIT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROPOSAL_UNIT_CREDIT_SPLIT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROPOSAL_UNIT_CREDIT_SPLIT
(
      PROPOSAL_UNIT_CREDIT_SPLIT_ID NUMBER(12)
        , PROPOSAL_ID NUMBER(12) NOT NULL
        , PROPOSAL_NUMBER VARCHAR2(8) NOT NULL
        , SEQUENCE_NUMBER NUMBER(4) NOT NULL
        , PERSON_ID VARCHAR2(40) NOT NULL
        , UNIT_NUMBER VARCHAR2(8) NOT NULL
        , INV_CREDIT_TYPE_CODE VARCHAR2(3) NOT NULL
        , CREDIT NUMBER(5,2)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROPOSAL_UNIT_CREDIT_SPLIT
    ADD CONSTRAINT PROPOSAL_UNIT_CREDIT_SPLITP1
PRIMARY KEY (PROPOSAL_UNIT_CREDIT_SPLIT_ID)
/


CREATE INDEX UQ_PROPOSAL_UNIT_CREDIT_SPLIT 
  ON PROPOSAL_UNIT_CREDIT_SPLIT 
  (PROPOSAL_NUMBER, SEQUENCE_NUMBER, PERSON_ID, UNIT_NUMBER, INV_CREDIT_TYPE_CODE)
/





-----------------------------------------------------------------------------
-- PROP_ROLE_TEMPLATE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROP_ROLE_TEMPLATE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROP_ROLE_TEMPLATE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROP_ROLE_TEMPLATE
(
      ID NUMBER(8)
        , PERSON_ID VARCHAR2(40) NOT NULL
        , ROLE_NAME VARCHAR2(500) NOT NULL
        , UNIT_NUMBER VARCHAR2(8) NOT NULL
        , ACTIVE_FLAG CHAR(1) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROP_ROLE_TEMPLATE
    ADD CONSTRAINT PROP_ROLE_TEMPLATEP1
PRIMARY KEY (ID)
/







-----------------------------------------------------------------------------
-- PROTOCOL
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROTOCOL';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROTOCOL CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROTOCOL
(
      ACTIVE CHAR(1) default 'T' NOT NULL
        , PROTOCOL_ID NUMBER(12)
        , DOCUMENT_NUMBER NUMBER(10) NOT NULL
        , PROTOCOL_NUMBER VARCHAR2(20) NOT NULL
        , SEQUENCE_NUMBER NUMBER(4) NOT NULL
        , PROTOCOL_TYPE_CODE VARCHAR2(3) NOT NULL
        , PROTOCOL_STATUS_CODE VARCHAR2(3) NOT NULL
        , TITLE VARCHAR2(2000) NOT NULL
        , DESCRIPTION VARCHAR2(2000)
        , APPLICATION_DATE DATE
        , APPROVAL_DATE DATE
        , EXPIRATION_DATE DATE
        , LAST_APPROVAL_DATE DATE
        , FDA_APPLICATION_NUMBER VARCHAR2(15)
        , REFERENCE_NUMBER_1 VARCHAR2(50)
        , REFERENCE_NUMBER_2 VARCHAR2(50)
        , IS_BILLABLE VARCHAR2(1) default 'n' NOT NULL
        , SPECIAL_REVIEW_INDICATOR VARCHAR2(2) default 'n0' NOT NULL
        , VULNERABLE_SUBJECT_INDICATOR VARCHAR2(2) default 'n0' NOT NULL
        , KEY_STUDY_PERSON_INDICATOR VARCHAR2(2) default 'n0' NOT NULL
        , FUNDING_SOURCE_INDICATOR VARCHAR2(2) default 'n0' NOT NULL
        , CORRESPONDENT_INDICATOR VARCHAR2(2) default 'n0' NOT NULL
        , REFERENCE_INDICATOR VARCHAR2(2) default 'n0' NOT NULL
        , RELATED_PROJECTS_INDICATOR VARCHAR2(2) default 'n0' NOT NULL
        , CREATE_TIMESTAMP DATE
        , CREATE_USER VARCHAR2(8)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROTOCOL
    ADD CONSTRAINT PROTOCOLP1
PRIMARY KEY (PROTOCOL_ID)
/


CREATE INDEX UQ_PROTOCOL 
  ON PROTOCOL 
  (PROTOCOL_NUMBER, SEQUENCE_NUMBER)
/





-----------------------------------------------------------------------------
-- PROTOCOL_ACTIONS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROTOCOL_ACTIONS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROTOCOL_ACTIONS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROTOCOL_ACTIONS
(
      PROTOCOL_ACTION_ID NUMBER(12)
        , PROTOCOL_NUMBER VARCHAR2(20) NOT NULL
        , SEQUENCE_NUMBER NUMBER(4) NOT NULL
        , SUBMISSION_NUMBER NUMBER(4)
        , ACTION_ID NUMBER(6) NOT NULL
        , PROTOCOL_ACTION_TYPE_CODE VARCHAR2(3) NOT NULL
        , PROTOCOL_ID NUMBER(12) NOT NULL
        , SUBMISSION_ID_FK NUMBER(12)
        , COMMENTS VARCHAR2(2000)
        , ACTION_DATE DATE
        , UPDATE_TIMESTAMP DATE
        , UPDATE_USER VARCHAR2(60)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , ACTUAL_ACTION_DATE DATE
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROTOCOL_ACTIONS
    ADD CONSTRAINT PROTOCOL_ACTIONSP1
PRIMARY KEY (PROTOCOL_ACTION_ID)
/







-----------------------------------------------------------------------------
-- PROTOCOL_ACTION_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROTOCOL_ACTION_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROTOCOL_ACTION_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROTOCOL_ACTION_TYPE
(
      PROTOCOL_ACTION_TYPE_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , TRIGGER_SUBMISSION CHAR(1) NOT NULL
        , TRIGGER_CORRESPONDENCE CHAR(1) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , FINAL_ACTION_FOR_BATCH_CORRESP CHAR(1) NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROTOCOL_ACTION_TYPE
    ADD CONSTRAINT PROTOCOL_ACTION_TYPEP1
PRIMARY KEY (PROTOCOL_ACTION_TYPE_CODE)
/







-----------------------------------------------------------------------------
-- PROTOCOL_ATTACHMENT_GROUP
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROTOCOL_ATTACHMENT_GROUP';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROTOCOL_ATTACHMENT_GROUP CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROTOCOL_ATTACHMENT_GROUP
(
      GROUP_CD VARCHAR2(3)
        , DESCRIPTION VARCHAR2(300) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROTOCOL_ATTACHMENT_GROUP
    ADD CONSTRAINT PROTOCOL_ATTACHMENT_GROUPP1
PRIMARY KEY (GROUP_CD)
/







-----------------------------------------------------------------------------
-- PROTOCOL_ATTACHMENT_PERSONNEL
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROTOCOL_ATTACHMENT_PERSONNEL';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROTOCOL_ATTACHMENT_PERSONNEL CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROTOCOL_ATTACHMENT_PERSONNEL
(
      PA_PERSONNEL_ID NUMBER(12)
        , PROTOCOL_ID_FK NUMBER(12) NOT NULL
        , PROTOCOL_NUMBER VARCHAR2(20) NOT NULL
        , SEQUENCE_NUMBER NUMBER(4) NOT NULL
        , TYPE_CD VARCHAR2(3) NOT NULL
        , DOCUMENT_ID NUMBER(4) NOT NULL
        , FILE_ID NUMBER(22) NOT NULL
        , DESCRIPTION VARCHAR2(200)
        , PERSON_ID NUMBER(12) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROTOCOL_ATTACHMENT_PERSONNEL
    ADD CONSTRAINT PROTOCOL_ATTACHMENT_PERSONNP1
PRIMARY KEY (PA_PERSONNEL_ID)
/







-----------------------------------------------------------------------------
-- PROTOCOL_ATTACHMENT_PROTOCOL
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROTOCOL_ATTACHMENT_PROTOCOL';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROTOCOL_ATTACHMENT_PROTOCOL CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROTOCOL_ATTACHMENT_PROTOCOL
(
      PA_PROTOCOL_ID NUMBER(12)
        , PROTOCOL_ID_FK NUMBER(12) NOT NULL
        , PROTOCOL_NUMBER VARCHAR2(20) NOT NULL
        , SEQUENCE_NUMBER NUMBER(4) NOT NULL
        , TYPE_CD VARCHAR2(3) NOT NULL
        , DOCUMENT_ID NUMBER(4) NOT NULL
        , FILE_ID NUMBER(22) NOT NULL
        , DESCRIPTION VARCHAR2(200)
        , STATUS_CD VARCHAR2(3)
        , CONTACT_NAME VARCHAR2(30)
        , EMAIL_ADDRESS VARCHAR2(60)
        , PHONE_NUMBER VARCHAR2(20)
        , COMMENTS VARCHAR2(300)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROTOCOL_ATTACHMENT_PROTOCOL
    ADD CONSTRAINT PROTOCOL_ATTACHMENT_PROTOCOP1
PRIMARY KEY (PA_PROTOCOL_ID)
/







-----------------------------------------------------------------------------
-- PROTOCOL_ATTACHMENT_STATUS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROTOCOL_ATTACHMENT_STATUS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROTOCOL_ATTACHMENT_STATUS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROTOCOL_ATTACHMENT_STATUS
(
      STATUS_CD VARCHAR2(3)
        , DESCRIPTION VARCHAR2(300) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROTOCOL_ATTACHMENT_STATUS
    ADD CONSTRAINT PROTOCOL_ATTACHMENT_STATUSP1
PRIMARY KEY (STATUS_CD)
/







-----------------------------------------------------------------------------
-- PROTOCOL_ATTACHMENT_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROTOCOL_ATTACHMENT_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROTOCOL_ATTACHMENT_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROTOCOL_ATTACHMENT_TYPE
(
      TYPE_CD VARCHAR2(3)
        , DESCRIPTION VARCHAR2(300) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROTOCOL_ATTACHMENT_TYPE
    ADD CONSTRAINT PROTOCOL_ATTACHMENT_TYPEP1
PRIMARY KEY (TYPE_CD)
/







-----------------------------------------------------------------------------
-- PROTOCOL_ATTACHMENT_TYPE_GROUP
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROTOCOL_ATTACHMENT_TYPE_GROUP';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROTOCOL_ATTACHMENT_TYPE_GROUP CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROTOCOL_ATTACHMENT_TYPE_GROUP
(
      TYPE_GROUP_ID NUMBER(12)
        , TYPE_CD VARCHAR2(3) NOT NULL
        , GROUP_CD VARCHAR2(3) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROTOCOL_ATTACHMENT_TYPE_GROUP
    ADD CONSTRAINT PROTOCOL_ATTACHMENT_TYPE_GRP1
PRIMARY KEY (TYPE_GROUP_ID)
/







-----------------------------------------------------------------------------
-- PROTOCOL_CONTINGENCY
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROTOCOL_CONTINGENCY';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROTOCOL_CONTINGENCY CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROTOCOL_CONTINGENCY
(
      PROTOCOL_CONTINGENCY_CODE VARCHAR2(4)
        , DESCRIPTION VARCHAR2(2000) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROTOCOL_CONTINGENCY
    ADD CONSTRAINT PROTOCOL_CONTINGENCYP1
PRIMARY KEY (PROTOCOL_CONTINGENCY_CODE)
/







-----------------------------------------------------------------------------
-- PROTOCOL_CORRESPONDENCE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROTOCOL_CORRESPONDENCE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROTOCOL_CORRESPONDENCE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROTOCOL_CORRESPONDENCE
(
      ID NUMBER(12)
        , PROTOCOL_NUMBER VARCHAR2(20) NOT NULL
        , SEQUENCE_NUMBER NUMBER(4) NOT NULL
        , ACTION_ID NUMBER(6) NOT NULL
        , PROTOCOL_ID NUMBER(12) NOT NULL
        , ACTION_ID_FK NUMBER(12) NOT NULL
        , PROTO_CORRESP_TYPE_CODE VARCHAR2(3) NOT NULL
        , FINAL_FLAG CHAR(1) NOT NULL
        , UPDATE_TIMESTAMP DATE
        , UPDATE_USER VARCHAR2(60)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , CORRESPONDENCE BLOB NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROTOCOL_CORRESPONDENCE
    ADD CONSTRAINT PROTOCOL_CORRESPONDENCEP1
PRIMARY KEY (ID)
/







-----------------------------------------------------------------------------
-- PROTOCOL_DOCUMENT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROTOCOL_DOCUMENT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROTOCOL_DOCUMENT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROTOCOL_DOCUMENT
(
      DOCUMENT_NUMBER NUMBER(10)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , PROTOCOL_WORKFLOW_TYPE VARCHAR2(80)
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROTOCOL_DOCUMENT
    ADD CONSTRAINT PROTOCOL_DOCUMENTP1
PRIMARY KEY (DOCUMENT_NUMBER)
/







-----------------------------------------------------------------------------
-- PROTOCOL_EXEMPT_CHKLST
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROTOCOL_EXEMPT_CHKLST';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROTOCOL_EXEMPT_CHKLST CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROTOCOL_EXEMPT_CHKLST
(
      PROTOCOL_EXEMPT_CHKLST_ID NUMBER(12)
        , PROTOCOL_ID NUMBER(12) NOT NULL
        , SUBMISSION_ID_FK NUMBER(12) NOT NULL
        , PROTOCOL_NUMBER VARCHAR2(20) NOT NULL
        , SEQUENCE_NUMBER NUMBER(4) NOT NULL
        , SUBMISSION_NUMBER NUMBER(4) NOT NULL
        , EXEMPT_STUDIES_CHECKLIST_CODE VARCHAR2(3) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROTOCOL_EXEMPT_CHKLST
    ADD CONSTRAINT PROTOCOL_EXEMPT_CHKLSTP1
PRIMARY KEY (PROTOCOL_EXEMPT_CHKLST_ID)
/







-----------------------------------------------------------------------------
-- PROTOCOL_EXEMPT_NUMBER
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROTOCOL_EXEMPT_NUMBER';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROTOCOL_EXEMPT_NUMBER CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROTOCOL_EXEMPT_NUMBER
(
      PROTOCOL_EXEMPT_NUMBER_ID NUMBER(12)
        , PROTOCOL_SPECIAL_REVIEW_ID NUMBER(12) NOT NULL
        , EXEMPTION_TYPE_CODE VARCHAR2(3) NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROTOCOL_EXEMPT_NUMBER
    ADD CONSTRAINT PROTOCOL_EXEMPT_NUMBERP1
PRIMARY KEY (PROTOCOL_EXEMPT_NUMBER_ID)
/







-----------------------------------------------------------------------------
-- PROTOCOL_EXPIDITED_CHKLST
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROTOCOL_EXPIDITED_CHKLST';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROTOCOL_EXPIDITED_CHKLST CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROTOCOL_EXPIDITED_CHKLST
(
      PROTOCOL_EXPEDITED_CHKLST_ID NUMBER(12)
        , PROTOCOL_ID NUMBER(12) NOT NULL
        , SUBMISSION_ID_FK NUMBER(12) NOT NULL
        , PROTOCOL_NUMBER VARCHAR2(20) NOT NULL
        , SEQUENCE_NUMBER NUMBER(4) NOT NULL
        , SUBMISSION_NUMBER NUMBER(4) NOT NULL
        , EXPEDITED_REV_CHKLST_CODE VARCHAR2(3) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROTOCOL_EXPIDITED_CHKLST
    ADD CONSTRAINT PROTOCOL_EXPIDITED_CHKLSTP1
PRIMARY KEY (PROTOCOL_EXPEDITED_CHKLST_ID)
/







-----------------------------------------------------------------------------
-- PROTOCOL_FUNDING_SOURCE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROTOCOL_FUNDING_SOURCE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROTOCOL_FUNDING_SOURCE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROTOCOL_FUNDING_SOURCE
(
      PROTOCOL_FUNDING_SOURCE_ID NUMBER(12)
        , PROTOCOL_ID NUMBER(12) NOT NULL
        , PROTOCOL_NUMBER VARCHAR2(20)
        , SEQUENCE_NUMBER NUMBER(4)
        , FUNDING_SOURCE_TYPE_CODE NUMBER(3) NOT NULL
        , FUNDING_SOURCE VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , FUNDING_SOURCE_NAME VARCHAR2(200)
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROTOCOL_FUNDING_SOURCE
    ADD CONSTRAINT PROTOCOL_FUNDING_SOURCEP1
PRIMARY KEY (PROTOCOL_FUNDING_SOURCE_ID)
/


CREATE INDEX UQ_PROTOCOL_FUNDING_SOURCE 
  ON PROTOCOL_FUNDING_SOURCE 
  (PROTOCOL_ID, FUNDING_SOURCE_TYPE_CODE, FUNDING_SOURCE)
/





-----------------------------------------------------------------------------
-- PROTOCOL_LOCATION
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROTOCOL_LOCATION';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROTOCOL_LOCATION CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROTOCOL_LOCATION
(
      PROTOCOL_LOCATION_ID NUMBER(12)
        , PROTOCOL_ID NUMBER(12) NOT NULL
        , PROTOCOL_NUMBER VARCHAR2(20) NOT NULL
        , SEQUENCE_NUMBER NUMBER(4) NOT NULL
        , PROTOCOL_ORG_TYPE_CODE VARCHAR2(3) NOT NULL
        , ORGANIZATION_ID VARCHAR2(8) NOT NULL
        , ROLODEX_ID NUMBER(6)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROTOCOL_LOCATION
    ADD CONSTRAINT PROTOCOL_LOCATIONP1
PRIMARY KEY (PROTOCOL_LOCATION_ID)
/


CREATE INDEX UQ_PROTOCOL_LOCATION 
  ON PROTOCOL_LOCATION 
  (PROTOCOL_ORG_TYPE_CODE, ORGANIZATION_ID, PROTOCOL_ID)
/





-----------------------------------------------------------------------------
-- PROTOCOL_MODULES
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROTOCOL_MODULES';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROTOCOL_MODULES CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROTOCOL_MODULES
(
      PROTOCOL_MODULE_CODE VARCHAR2(5)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROTOCOL_MODULES
    ADD CONSTRAINT PROTOCOL_MODULESP1
PRIMARY KEY (PROTOCOL_MODULE_CODE)
/







-----------------------------------------------------------------------------
-- PROTOCOL_NOTEPAD
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROTOCOL_NOTEPAD';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROTOCOL_NOTEPAD CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROTOCOL_NOTEPAD
(
      PROTOCOL_NOTEPAD_ID NUMBER(12)
        , PROTOCOL_ID_FK NUMBER(12) NOT NULL
        , PROTOCOL_NUMBER VARCHAR2(20) NOT NULL
        , SEQUENCE_NUMBER NUMBER(4) NOT NULL
        , ENTRY_NUMBER NUMBER(4) NOT NULL
        , COMMENTS CLOB
        , RESTRICTED_VIEW CHAR(1) NOT NULL
        , NOTE_TYPE VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(10) NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROTOCOL_NOTEPAD
    ADD CONSTRAINT PROTOCOL_NOTEPADP1
PRIMARY KEY (PROTOCOL_NOTEPAD_ID)
/


CREATE INDEX UQ_PROTOCOL_NOTEPAD 
  ON PROTOCOL_NOTEPAD 
  (PROTOCOL_NUMBER, ENTRY_NUMBER)
/





-----------------------------------------------------------------------------
-- PROTOCOL_ORG_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROTOCOL_ORG_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROTOCOL_ORG_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROTOCOL_ORG_TYPE
(
      PROTOCOL_ORG_TYPE_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROTOCOL_ORG_TYPE
    ADD CONSTRAINT PROTOCOL_ORG_TYPEP1
PRIMARY KEY (PROTOCOL_ORG_TYPE_CODE)
/







-----------------------------------------------------------------------------
-- PROTOCOL_PERSONS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROTOCOL_PERSONS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROTOCOL_PERSONS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROTOCOL_PERSONS
(
      PROTOCOL_PERSON_ID NUMBER(12)
        , PROTOCOL_ID NUMBER(12) NOT NULL
        , PROTOCOL_NUMBER VARCHAR2(20) NOT NULL
        , SEQUENCE_NUMBER NUMBER(4) NOT NULL
        , PERSON_ID VARCHAR2(40)
        , PERSON_NAME VARCHAR2(90) NOT NULL
        , PROTOCOL_PERSON_ROLE_ID VARCHAR2(12)
        , ROLODEX_ID NUMBER(12)
        , AFFILIATION_TYPE_CODE NUMBER(3)
        , UPDATE_TIMESTAMP DATE
        , UPDATE_USER VARCHAR2(60)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROTOCOL_PERSONS
    ADD CONSTRAINT PROTOCOL_PERSONSP1
PRIMARY KEY (PROTOCOL_PERSON_ID)
/







-----------------------------------------------------------------------------
-- PROTOCOL_PERSON_ROLES
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROTOCOL_PERSON_ROLES';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROTOCOL_PERSON_ROLES CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROTOCOL_PERSON_ROLES
(
      PROTOCOL_PERSON_ROLE_ID VARCHAR2(12)
        , DESCRIPTION VARCHAR2(250) NOT NULL
        , UNIT_DETAILS_REQUIRED CHAR(1) default 'N' NOT NULL
        , UPDATE_TIMESTAMP DATE
        , UPDATE_USER VARCHAR2(60)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , AFFILIATION_DETAILS_REQUIRED CHAR(1) default 'N' NOT NULL
        , TRAINING_DETAILS_REQUIRED CHAR(1) default 'N' NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROTOCOL_PERSON_ROLES
    ADD CONSTRAINT PROTOCOL_PERSON_ROLESP1
PRIMARY KEY (PROTOCOL_PERSON_ROLE_ID)
/







-----------------------------------------------------------------------------
-- PROTOCOL_PERSON_ROLE_MAPPING
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROTOCOL_PERSON_ROLE_MAPPING';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROTOCOL_PERSON_ROLE_MAPPING CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROTOCOL_PERSON_ROLE_MAPPING
(
      ROLE_MAPPING_ID NUMBER(12)
        , SOURCE_ROLE_ID VARCHAR2(12) NOT NULL
        , TARGET_ROLE_ID VARCHAR2(12) NOT NULL
        , UPDATE_TIMESTAMP DATE
        , UPDATE_USER VARCHAR2(60)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROTOCOL_PERSON_ROLE_MAPPING
    ADD CONSTRAINT PROTOCOL_PERSON_ROLE_MAPPINP1
PRIMARY KEY (ROLE_MAPPING_ID)
/


CREATE INDEX UQ_PERSON_MAPPING 
  ON PROTOCOL_PERSON_ROLE_MAPPING 
  (SOURCE_ROLE_ID, TARGET_ROLE_ID)
/





-----------------------------------------------------------------------------
-- PROTOCOL_REFERENCES
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROTOCOL_REFERENCES';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROTOCOL_REFERENCES CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROTOCOL_REFERENCES
(
      PROTOCOL_REFERENCE_ID NUMBER(4)
        , PROTOCOL_ID NUMBER(12) NOT NULL
        , PROTOCOL_NUMBER VARCHAR2(20) NOT NULL
        , SEQUENCE_NUMBER NUMBER(4) NOT NULL
        , PROTOCOL_REFERENCE_NUMBER NUMBER(3) NOT NULL
        , PROTOCOL_REFERENCE_TYPE_CODE NUMBER(3) NOT NULL
        , REFERENCE_KEY VARCHAR2(50) NOT NULL
        , APPLICATION_DATE DATE
        , APPROVAL_DATE DATE
        , COMMENTS CLOB
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROTOCOL_REFERENCES
    ADD CONSTRAINT PROTOCOL_REFERENCESP1
PRIMARY KEY (PROTOCOL_REFERENCE_ID)
/







-----------------------------------------------------------------------------
-- PROTOCOL_REFERENCE_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROTOCOL_REFERENCE_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROTOCOL_REFERENCE_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROTOCOL_REFERENCE_TYPE
(
      PROTOCOL_REFERENCE_TYPE_CODE NUMBER(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROTOCOL_REFERENCE_TYPE
    ADD CONSTRAINT PROTOCOL_REFERENCE_TYPEP1
PRIMARY KEY (PROTOCOL_REFERENCE_TYPE_CODE)
/







-----------------------------------------------------------------------------
-- PROTOCOL_RESEARCH_AREAS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROTOCOL_RESEARCH_AREAS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROTOCOL_RESEARCH_AREAS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROTOCOL_RESEARCH_AREAS
(
      ID NUMBER(12)
        , PROTOCOL_ID NUMBER(12) NOT NULL
        , PROTOCOL_NUMBER VARCHAR2(20) NOT NULL
        , SEQUENCE_NUMBER NUMBER(4) NOT NULL
        , RESEARCH_AREA_CODE VARCHAR2(8) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROTOCOL_RESEARCH_AREAS
    ADD CONSTRAINT PROTOCOL_RESEARCH_AREASP1
PRIMARY KEY (ID)
/







-----------------------------------------------------------------------------
-- PROTOCOL_REVIEWERS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROTOCOL_REVIEWERS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROTOCOL_REVIEWERS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROTOCOL_REVIEWERS
(
      PROTOCOL_REVIEWER_ID NUMBER(12)
        , PROTOCOL_ID NUMBER(12) NOT NULL
        , SUBMISSION_ID_FK NUMBER(12) NOT NULL
        , PROTOCOL_NUMBER VARCHAR2(20) NOT NULL
        , SEQUENCE_NUMBER NUMBER(4) NOT NULL
        , SUBMISSION_NUMBER NUMBER(4) NOT NULL
        , PERSON_ID VARCHAR2(40) NOT NULL
        , NON_EMPLOYEE_FLAG CHAR(1) NOT NULL
        , REVIEWER_TYPE_CODE VARCHAR2(3) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROTOCOL_REVIEWERS
    ADD CONSTRAINT PROTOCOL_REVIEWERSP1
PRIMARY KEY (PROTOCOL_REVIEWER_ID)
/







-----------------------------------------------------------------------------
-- PROTOCOL_REVIEWER_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROTOCOL_REVIEWER_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROTOCOL_REVIEWER_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROTOCOL_REVIEWER_TYPE
(
      REVIEWER_TYPE_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROTOCOL_REVIEWER_TYPE
    ADD CONSTRAINT PROTOCOL_REVIEWER_TYPEP1
PRIMARY KEY (REVIEWER_TYPE_CODE)
/







-----------------------------------------------------------------------------
-- PROTOCOL_REVIEW_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROTOCOL_REVIEW_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROTOCOL_REVIEW_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROTOCOL_REVIEW_TYPE
(
      PROTOCOL_REVIEW_TYPE_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROTOCOL_REVIEW_TYPE
    ADD CONSTRAINT PROTOCOL_REVIEW_TYPEP1
PRIMARY KEY (PROTOCOL_REVIEW_TYPE_CODE)
/







-----------------------------------------------------------------------------
-- PROTOCOL_RISK_LEVELS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROTOCOL_RISK_LEVELS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROTOCOL_RISK_LEVELS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROTOCOL_RISK_LEVELS
(
      PROTOCOL_NUMBER VARCHAR2(20) NOT NULL
        , SEQUENCE_NUMBER NUMBER(4) NOT NULL
        , RISK_LEVEL_CODE VARCHAR2(3) NOT NULL
        , COMMENTS VARCHAR2(2000)
        , DATE_ASSIGNED DATE NOT NULL
        , DATE_UPDATED DATE
        , STATUS CHAR(1) NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , PROTOCOL_RISK_LEVELS_ID NUMBER(12)
        , PROTOCOL_ID NUMBER(12) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROTOCOL_RISK_LEVELS
    ADD CONSTRAINT PROTOCOL_RISK_LEVELSP1
PRIMARY KEY (PROTOCOL_RISK_LEVELS_ID)
/


CREATE INDEX UQ_PROTOCOL_RISK_LEVELS 
  ON PROTOCOL_RISK_LEVELS 
  (PROTOCOL_NUMBER, SEQUENCE_NUMBER, RISK_LEVEL_CODE)
/





-----------------------------------------------------------------------------
-- PROTOCOL_SPECIAL_REVIEW
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROTOCOL_SPECIAL_REVIEW';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROTOCOL_SPECIAL_REVIEW CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROTOCOL_SPECIAL_REVIEW
(
      PROTOCOL_SPECIAL_REVIEW_ID NUMBER(12)
        , PROTOCOL_ID NUMBER(12) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , SPECIAL_REVIEW_NUMBER NUMBER(3) NOT NULL
        , SPECIAL_REVIEW_CODE NUMBER(3) NOT NULL
        , APPROVAL_TYPE_CODE NUMBER(3) NOT NULL
        , PROTOCOL_NUMBER VARCHAR2(20)
        , APPLICATION_DATE DATE
        , APPROVAL_DATE DATE
        , EXPIRATION_DATE DATE
        , COMMENTS CLOB
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROTOCOL_SPECIAL_REVIEW
    ADD CONSTRAINT PROTOCOL_SPECIAL_REVIEWP1
PRIMARY KEY (PROTOCOL_SPECIAL_REVIEW_ID)
/







-----------------------------------------------------------------------------
-- PROTOCOL_STATUS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROTOCOL_STATUS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROTOCOL_STATUS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROTOCOL_STATUS
(
      PROTOCOL_STATUS_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROTOCOL_STATUS
    ADD CONSTRAINT PROTOCOL_STATUSP1
PRIMARY KEY (PROTOCOL_STATUS_CODE)
/







-----------------------------------------------------------------------------
-- PROTOCOL_SUBMISSION
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROTOCOL_SUBMISSION';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROTOCOL_SUBMISSION CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROTOCOL_SUBMISSION
(
      SUBMISSION_ID NUMBER(12)
        , PROTOCOL_NUMBER VARCHAR2(20) NOT NULL
        , SEQUENCE_NUMBER NUMBER(4) NOT NULL
        , SUBMISSION_NUMBER NUMBER(4) NOT NULL
        , SCHEDULE_ID VARCHAR2(10)
        , COMMITTEE_ID VARCHAR2(15)
        , PROTOCOL_ID NUMBER(12) NOT NULL
        , SCHEDULE_ID_FK NUMBER(12)
        , COMMITTEE_ID_FK NUMBER(12)
        , SUBMISSION_TYPE_CODE VARCHAR2(3) NOT NULL
        , SUBMISSION_TYPE_QUAL_CODE VARCHAR2(3)
        , SUBMISSION_STATUS_CODE VARCHAR2(3) NOT NULL
        , PROTOCOL_REVIEW_TYPE_CODE VARCHAR2(3) NOT NULL
        , SUBMISSION_DATE DATE NOT NULL
        , COMMENTS VARCHAR2(2000)
        , YES_VOTE_COUNT NUMBER(3)
        , NO_VOTE_COUNT NUMBER(3)
        , ABSTAINER_COUNT NUMBER(3)
        , VOTING_COMMENTS VARCHAR2(2000)
        , UPDATE_TIMESTAMP DATE
        , UPDATE_USER VARCHAR2(60)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROTOCOL_SUBMISSION
    ADD CONSTRAINT PROTOCOL_SUBMISSIONP1
PRIMARY KEY (SUBMISSION_ID)
/







-----------------------------------------------------------------------------
-- PROTOCOL_SUBMISSION_DOC
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROTOCOL_SUBMISSION_DOC';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROTOCOL_SUBMISSION_DOC CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROTOCOL_SUBMISSION_DOC
(
      SUBMISSION_DOC_ID NUMBER(12)
        , PROTOCOL_NUMBER VARCHAR2(20) NOT NULL
        , SEQUENCE_NUMBER NUMBER(4) NOT NULL
        , SUBMISSION_NUMBER NUMBER(4) NOT NULL
        , PROTOCOL_ID NUMBER(12) NOT NULL
        , SUBMISSION_ID_FK NUMBER(12) NOT NULL
        , DOCUMENT_ID NUMBER(3) NOT NULL
        , FILE_NAME VARCHAR2(300)
        , DOCUMENT BLOB
        , UPDATE_TIMESTAMP DATE
        , UPDATE_USER VARCHAR2(60)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROTOCOL_SUBMISSION_DOC
    ADD CONSTRAINT PROTOCOL_SUBMISSION_DOCP1
PRIMARY KEY (SUBMISSION_DOC_ID)
/







-----------------------------------------------------------------------------
-- PROTOCOL_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROTOCOL_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROTOCOL_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROTOCOL_TYPE
(
      PROTOCOL_TYPE_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROTOCOL_TYPE
    ADD CONSTRAINT PROTOCOL_TYPEP1
PRIMARY KEY (PROTOCOL_TYPE_CODE)
/







-----------------------------------------------------------------------------
-- PROTOCOL_UNITS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROTOCOL_UNITS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROTOCOL_UNITS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROTOCOL_UNITS
(
      PROTOCOL_PERSON_ID NUMBER(12) NOT NULL
        , PROTOCOL_UNITS_ID NUMBER(12)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , PROTOCOL_NUMBER VARCHAR2(20)
        , SEQUENCE_NUMBER NUMBER(4)
        , UNIT_NUMBER VARCHAR2(8) NOT NULL
        , LEAD_UNIT_FLAG VARCHAR2(1) NOT NULL
        , PERSON_ID VARCHAR2(40)
        , UPDATE_TIMESTAMP DATE
        , UPDATE_USER VARCHAR2(60)
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROTOCOL_UNITS
    ADD CONSTRAINT PROTOCOL_UNITSP1
PRIMARY KEY (PROTOCOL_UNITS_ID)
/


CREATE INDEX UQ_PROTOCOL_UNITS 
  ON PROTOCOL_UNITS 
  (UNIT_NUMBER, PERSON_ID, PROTOCOL_PERSON_ID)
/





-----------------------------------------------------------------------------
-- PROTOCOL_VOTE_ABSTAINEES
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROTOCOL_VOTE_ABSTAINEES';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROTOCOL_VOTE_ABSTAINEES CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROTOCOL_VOTE_ABSTAINEES
(
      PROTOCOL_VOTE_ABSTAINEES_ID NUMBER(12)
        , PROTOCOL_ID_FK NUMBER(12) NOT NULL
        , SCHEDULE_ID_FK NUMBER(12) NOT NULL
        , PERSON_ID VARCHAR2(9) NOT NULL
        , NON_EMPLOYEE_FLAG VARCHAR2(1) NOT NULL
        , COMMENTS VARCHAR2(2000)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROTOCOL_VOTE_ABSTAINEES
    ADD CONSTRAINT PROTOCOL_VOTE_ABSTAINEESP1
PRIMARY KEY (PROTOCOL_VOTE_ABSTAINEES_ID)
/


CREATE INDEX UQ_PROTOCOL_VOTE_ABSTAINEE 
  ON PROTOCOL_VOTE_ABSTAINEES 
  (PROTOCOL_ID_FK, SCHEDULE_ID_FK, PERSON_ID)
/





-----------------------------------------------------------------------------
-- PROTOCOL_VULNERABLE_SUB
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROTOCOL_VULNERABLE_SUB';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROTOCOL_VULNERABLE_SUB CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROTOCOL_VULNERABLE_SUB
(
      PROTOCOL_VULNERABLE_SUB_ID NUMBER(12)
        , PROTOCOL_ID NUMBER(12) NOT NULL
        , PROTOCOL_NUMBER VARCHAR2(20) NOT NULL
        , SEQUENCE_NUMBER NUMBER(4) NOT NULL
        , VULNERABLE_SUBJECT_TYPE_CODE VARCHAR2(3) NOT NULL
        , SUBJECT_COUNT NUMBER(6)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROTOCOL_VULNERABLE_SUB
    ADD CONSTRAINT PROTOCOL_VULNERABLE_SUBP1
PRIMARY KEY (PROTOCOL_VULNERABLE_SUB_ID)
/


CREATE INDEX UQ_PROTOCOL_VULNERABLE_SUB 
  ON PROTOCOL_VULNERABLE_SUB 
  (PROTOCOL_ID, VULNERABLE_SUBJECT_TYPE_CODE)
/





-----------------------------------------------------------------------------
-- PROTO_AMEND_RENEWAL
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROTO_AMEND_RENEWAL';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROTO_AMEND_RENEWAL CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROTO_AMEND_RENEWAL
(
      PROTO_AMEND_RENEWAL_ID NUMBER(12)
        , PROTO_AMEND_REN_NUMBER VARCHAR2(20) NOT NULL
        , DATE_CREATED DATE NOT NULL
        , SUMMARY CLOB
        , PROTOCOL_ID NUMBER(12) NOT NULL
        , PROTOCOL_NUMBER VARCHAR2(20)
        , SEQUENCE_NUMBER NUMBER(4)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROTO_AMEND_RENEWAL
    ADD CONSTRAINT PROTO_AMEND_RENEWALP1
PRIMARY KEY (PROTO_AMEND_RENEWAL_ID)
/







-----------------------------------------------------------------------------
-- PROTO_AMEND_RENEW_MODULES
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROTO_AMEND_RENEW_MODULES';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROTO_AMEND_RENEW_MODULES CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROTO_AMEND_RENEW_MODULES
(
      PROTO_AMEND_RENEW_MODULES_ID NUMBER(12)
        , PROTO_AMEND_RENEWAL_NUMBER VARCHAR2(20) NOT NULL
        , PROTO_AMEND_RENEWAL_ID NUMBER(12) NOT NULL
        , PROTOCOL_NUMBER VARCHAR2(20) NOT NULL
        , PROTOCOL_MODULE_CODE VARCHAR2(5) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROTO_AMEND_RENEW_MODULES
    ADD CONSTRAINT PROTO_AMEND_RENEW_MODULESP1
PRIMARY KEY (PROTO_AMEND_RENEW_MODULES_ID)
/







-----------------------------------------------------------------------------
-- PROTO_CORRESP_TEMPL
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROTO_CORRESP_TEMPL';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROTO_CORRESP_TEMPL CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROTO_CORRESP_TEMPL
(
      PROTO_CORRESP_TEMPL_ID NUMBER(12)
        , PROTO_CORRESP_TYPE_CODE VARCHAR2(3) NOT NULL
        , COMMITTEE_ID VARCHAR2(15) NOT NULL
        , FILE_NAME VARCHAR2(150) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , CORRESPONDENCE_TEMPLATE BLOB
        , OBJ_ID VARCHAR2(36)
    
    , CONSTRAINT UQ_PROTO_CORRESP_TEMPL UNIQUE (PROTO_CORRESP_TYPE_CODE, COMMITTEE_ID)

)
/

ALTER TABLE PROTO_CORRESP_TEMPL
    ADD CONSTRAINT PROTO_CORRESP_TEMPLP1
PRIMARY KEY (PROTO_CORRESP_TEMPL_ID)
/







-----------------------------------------------------------------------------
-- PROTO_CORRESP_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'PROTO_CORRESP_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE PROTO_CORRESP_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE PROTO_CORRESP_TYPE
(
      PROTO_CORRESP_TYPE_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , MODULE_ID VARCHAR2(1) default 'Y' NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE PROTO_CORRESP_TYPE
    ADD CONSTRAINT PROTO_CORRESP_TYPEP1
PRIMARY KEY (PROTO_CORRESP_TYPE_CODE)
/







-----------------------------------------------------------------------------
-- QUESTION
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'QUESTION';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE QUESTION CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE QUESTION
(
      QUESTION_REF_ID NUMBER(12)
        , QUESTION_ID NUMBER(6) NOT NULL
        , SEQUENCE_NUMBER NUMBER(4) NOT NULL
        , SEQUENCE_STATUS CHAR(1) NOT NULL
        , QUESTION VARCHAR2(2000) NOT NULL
        , STATUS CHAR(1) NOT NULL
        , GROUP_TYPE_CODE NUMBER(3) NOT NULL
        , QUESTION_TYPE_ID NUMBER(12) NOT NULL
        , LOOKUP_CLASS VARCHAR2(100)
        , LOOKUP_RETURN VARCHAR2(30)
        , DISPLAYED_ANSWERS NUMBER(2)
        , MAX_ANSWERS NUMBER(2)
        , ANSWER_MAX_LENGTH NUMBER(4)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE QUESTION
    ADD CONSTRAINT QUESTIONP1
PRIMARY KEY (QUESTION_REF_ID)
/


CREATE INDEX UQ_QUESTION_ID 
  ON QUESTION 
  (QUESTION_ID, SEQUENCE_NUMBER)
/





-----------------------------------------------------------------------------
-- QUESTIONNAIRE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'QUESTIONNAIRE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE QUESTIONNAIRE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE QUESTIONNAIRE
(
      QUESTIONNAIRE_REF_ID NUMBER(12)
        , QUESTIONNAIRE_ID NUMBER(6) NOT NULL
        , SEQUENCE_NUMBER NUMBER(4) NOT NULL
        , NAME VARCHAR2(50) NOT NULL
        , DESCRIPTION VARCHAR2(2000)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , IS_FINAL VARCHAR2(1) NOT NULL
        , DOCUMENT_NUMBER NUMBER(10)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE QUESTIONNAIRE
    ADD CONSTRAINT QUESTIONNAIREP1
PRIMARY KEY (QUESTIONNAIRE_REF_ID)
/







-----------------------------------------------------------------------------
-- QUESTIONNAIRE_ANSWER
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'QUESTIONNAIRE_ANSWER';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE QUESTIONNAIRE_ANSWER CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE QUESTIONNAIRE_ANSWER
(
      QUESTIONNAIRE_ANSWER_ID NUMBER(12)
        , QUESTIONNAIRE_AH_ID_FK NUMBER(12) NOT NULL
        , QUESTION_REF_ID_FK NUMBER(12) NOT NULL
        , QUESTION_NUMBER NUMBER(6) NOT NULL
        , ANSWER_NUMBER NUMBER(3) NOT NULL
        , ANSWER VARCHAR2(2000)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , QUESTIONNAIRE_QUESTIONS_ID_FK NUMBER(12) NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE QUESTIONNAIRE_ANSWER
    ADD CONSTRAINT QUESTIONNAIRE_ANSWERP1
PRIMARY KEY (QUESTIONNAIRE_ANSWER_ID)
/


CREATE INDEX UQ_QUESTIONNAIRE_ANSWER 
  ON QUESTIONNAIRE_ANSWER 
  (QUESTIONNAIRE_AH_ID_FK, QUESTION_NUMBER, ANSWER_NUMBER)
/





-----------------------------------------------------------------------------
-- QUESTIONNAIRE_ANSWER_HEADER
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'QUESTIONNAIRE_ANSWER_HEADER';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE QUESTIONNAIRE_ANSWER_HEADER CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE QUESTIONNAIRE_ANSWER_HEADER
(
      QUESTIONNAIRE_ANSWER_HEADER_ID NUMBER(12)
        , QUESTIONNAIRE_REF_ID_FK NUMBER(12) NOT NULL
        , MODULE_ITEM_CODE VARCHAR2(3) NOT NULL
        , MODULE_ITEM_KEY VARCHAR2(20) NOT NULL
        , MODULE_SUB_ITEM_CODE NUMBER(3) NOT NULL
        , MODULE_SUB_ITEM_KEY VARCHAR2(20) NOT NULL
        , QUESTIONNAIRE_COMPLETED_FLAG VARCHAR2(1) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE QUESTIONNAIRE_ANSWER_HEADER
    ADD CONSTRAINT QUESTIONNAIRE_ANSWER_HEADERP1
PRIMARY KEY (QUESTIONNAIRE_ANSWER_HEADER_ID)
/







-----------------------------------------------------------------------------
-- QUESTIONNAIRE_QUESTIONS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'QUESTIONNAIRE_QUESTIONS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE QUESTIONNAIRE_QUESTIONS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE QUESTIONNAIRE_QUESTIONS
(
      QUESTIONNAIRE_QUESTIONS_ID NUMBER(12)
        , QUESTIONNAIRE_REF_ID_FK NUMBER(12) NOT NULL
        , QUESTION_REF_ID_FK NUMBER(12) NOT NULL
        , QUESTION_NUMBER NUMBER(6) NOT NULL
        , PARENT_QUESTION_NUMBER NUMBER(6) NOT NULL
        , CONDITION_FLAG VARCHAR2(1) NOT NULL
        , CONDITION_TYPE VARCHAR2(50)
        , CONDITION_VALUE VARCHAR2(2000)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , QUESTION_SEQ_NUMBER NUMBER(3)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE QUESTIONNAIRE_QUESTIONS
    ADD CONSTRAINT QUESTIONNAIRE_QUESTIONSP1
PRIMARY KEY (QUESTIONNAIRE_QUESTIONS_ID)
/


CREATE INDEX UQ_QUESTIONNAIRE_QUESTIONS 
  ON QUESTIONNAIRE_QUESTIONS 
  (QUESTIONNAIRE_REF_ID_FK, QUESTION_NUMBER)
/





-----------------------------------------------------------------------------
-- QUESTIONNAIRE_USAGE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'QUESTIONNAIRE_USAGE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE QUESTIONNAIRE_USAGE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE QUESTIONNAIRE_USAGE
(
      QUESTIONNAIRE_USAGE_ID NUMBER(12)
        , MODULE_ITEM_CODE NUMBER(3) NOT NULL
        , MODULE_SUB_ITEM_CODE NUMBER(3) NOT NULL
        , QUESTIONNAIRE_REF_ID_FK NUMBER(12) NOT NULL
        , QUESTIONNAIRE_SEQUENCE_NUMBER NUMBER(4) NOT NULL
        , RULE_ID NUMBER(6)
        , QUESTIONNAIRE_LABEL VARCHAR2(50)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE QUESTIONNAIRE_USAGE
    ADD CONSTRAINT QUESTIONNAIRE_USAGEP1
PRIMARY KEY (QUESTIONNAIRE_USAGE_ID)
/


CREATE INDEX UQ_QUESTIONNAIRE_USAGE 
  ON QUESTIONNAIRE_USAGE 
  (MODULE_ITEM_CODE, MODULE_SUB_ITEM_CODE, QUESTIONNAIRE_REF_ID_FK, QUESTIONNAIRE_SEQUENCE_NUMBER)
/





-----------------------------------------------------------------------------
-- QUESTION_EXPLANATION
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'QUESTION_EXPLANATION';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE QUESTION_EXPLANATION CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE QUESTION_EXPLANATION
(
      QUESTION_EXPLANATION_ID NUMBER(12)
        , QUESTION_REF_ID_FK NUMBER(12) NOT NULL
        , EXPLANATION_TYPE CHAR(1) NOT NULL
        , EXPLANATION CLOB
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE QUESTION_EXPLANATION
    ADD CONSTRAINT QUESTION_EXPLANATIONP1
PRIMARY KEY (QUESTION_EXPLANATION_ID)
/


CREATE INDEX UQ_QUESTION_EXPLANATION 
  ON QUESTION_EXPLANATION 
  (QUESTION_REF_ID_FK, EXPLANATION_TYPE)
/





-----------------------------------------------------------------------------
-- QUESTION_TYPES
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'QUESTION_TYPES';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE QUESTION_TYPES CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE QUESTION_TYPES
(
      QUESTION_TYPE_ID NUMBER(12)
        , QUESTION_TYPE_NAME VARCHAR2(30) NOT NULL
        , UPDATE_TIMESTAMP DATE
        , UPDATE_USER VARCHAR2(60)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE QUESTION_TYPES
    ADD CONSTRAINT QUESTION_TYPESP1
PRIMARY KEY (QUESTION_TYPE_ID)
/


CREATE INDEX UQ_QUESTION_TYPE 
  ON QUESTION_TYPES 
  (QUESTION_TYPE_NAME)
/





-----------------------------------------------------------------------------
-- RATE_CLASS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'RATE_CLASS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE RATE_CLASS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE RATE_CLASS
(
      RATE_CLASS_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , RATE_CLASS_TYPE CHAR(1) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE RATE_CLASS
    ADD CONSTRAINT RATE_CLASSP1
PRIMARY KEY (RATE_CLASS_CODE)
/







-----------------------------------------------------------------------------
-- RATE_CLASS_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'RATE_CLASS_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE RATE_CLASS_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE RATE_CLASS_TYPE
(
      SORT_ID NUMBER(2)
        , PREFIX_ACTIVITY_TYPE CHAR(1) default 'N' NOT NULL
        , RATE_CLASS_TYPE CHAR(1)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE RATE_CLASS_TYPE
    ADD CONSTRAINT RATE_CLASS_TYPEP1
PRIMARY KEY (RATE_CLASS_TYPE)
/







-----------------------------------------------------------------------------
-- RATE_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'RATE_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE RATE_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE RATE_TYPE
(
      RATE_CLASS_CODE VARCHAR2(3)
        , RATE_TYPE_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE RATE_TYPE
    ADD CONSTRAINT RATE_TYPEP1
PRIMARY KEY (RATE_CLASS_CODE,RATE_TYPE_CODE)
/







-----------------------------------------------------------------------------
-- REPORT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'REPORT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE REPORT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE REPORT
(
      VER_NBR NUMBER(8) default 1 NOT NULL
        , REPORT_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , FINAL_REPORT_FLAG CHAR(1) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE REPORT
    ADD CONSTRAINT REPORTP1
PRIMARY KEY (REPORT_CODE)
/







-----------------------------------------------------------------------------
-- REPORT_CLASS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'REPORT_CLASS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE REPORT_CLASS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE REPORT_CLASS
(
      VER_NBR NUMBER(8) default 1 NOT NULL
        , REPORT_CLASS_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , GENERATE_REPORT_REQUIREMENTS VARCHAR2(1) default 'N' NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE REPORT_CLASS
    ADD CONSTRAINT REPORT_CLASSP1
PRIMARY KEY (REPORT_CLASS_CODE)
/







-----------------------------------------------------------------------------
-- RESEARCH_AREAS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'RESEARCH_AREAS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE RESEARCH_AREAS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE RESEARCH_AREAS
(
      RESEARCH_AREA_CODE VARCHAR2(8)
        , PARENT_RESEARCH_AREA_CODE VARCHAR2(8) NOT NULL
        , HAS_CHILDREN_FLAG VARCHAR2(1) NOT NULL
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE RESEARCH_AREAS
    ADD CONSTRAINT RESEARCH_AREASP1
PRIMARY KEY (RESEARCH_AREA_CODE)
/







-----------------------------------------------------------------------------
-- RIGHTS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'RIGHTS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE RIGHTS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE RIGHTS
(
      RIGHT_ID VARCHAR2(30)
        , DESCRIPTION VARCHAR2(80) NOT NULL
        , RIGHT_TYPE CHAR(1) NOT NULL
        , DESCEND_FLAG CHAR(1) NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE RIGHTS
    ADD CONSTRAINT RIGHTSP1
PRIMARY KEY (RIGHT_ID)
/







-----------------------------------------------------------------------------
-- RISK_LEVEL
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'RISK_LEVEL';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE RISK_LEVEL CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE RISK_LEVEL
(
      VER_NBR NUMBER(8) default 1 NOT NULL
        , RISK_LEVEL_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200)
        , UPDATE_TIMESTAMP DATE
        , UPDATE_USER VARCHAR2(60)
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE RISK_LEVEL
    ADD CONSTRAINT RISK_LEVELP1
PRIMARY KEY (RISK_LEVEL_CODE)
/







-----------------------------------------------------------------------------
-- ROLE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'ROLE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE ROLE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE ROLE
(
      ROLE_ID NUMBER(5)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , ROLE_NAME VARCHAR2(50) NOT NULL
        , ROLE_TYPE CHAR(1) NOT NULL
        , OWNED_BY_UNIT VARCHAR2(8) NOT NULL
        , DESCEND_FLAG CHAR(1) NOT NULL
        , STATUS_FLAG CHAR(1) NOT NULL
        , CREATE_TIMESTAMP DATE NOT NULL
        , CREATE_USER VARCHAR2(60) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE ROLE
    ADD CONSTRAINT ROLEP1
PRIMARY KEY (ROLE_ID)
/







-----------------------------------------------------------------------------
-- ROLE_RIGHTS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'ROLE_RIGHTS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE ROLE_RIGHTS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE ROLE_RIGHTS
(
      RIGHT_ID VARCHAR2(30)
        , ROLE_ID NUMBER(5)
        , DESCEND_FLAG CHAR(1) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE ROLE_RIGHTS
    ADD CONSTRAINT ROLE_RIGHTSP1
PRIMARY KEY (RIGHT_ID,ROLE_ID)
/







-----------------------------------------------------------------------------
-- ROLODEX
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'ROLODEX';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE ROLODEX CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE ROLODEX
(
      ROLODEX_ID NUMBER(6)
        , LAST_NAME VARCHAR2(20)
        , FIRST_NAME VARCHAR2(20)
        , MIDDLE_NAME VARCHAR2(20)
        , SUFFIX VARCHAR2(10)
        , PREFIX VARCHAR2(10)
        , TITLE VARCHAR2(35)
        , ORGANIZATION VARCHAR2(80) NOT NULL
        , ADDRESS_LINE_1 VARCHAR2(80)
        , ADDRESS_LINE_2 VARCHAR2(80)
        , ADDRESS_LINE_3 VARCHAR2(80)
        , FAX_NUMBER VARCHAR2(20)
        , EMAIL_ADDRESS VARCHAR2(60)
        , CITY VARCHAR2(30)
        , COUNTY VARCHAR2(30)
        , STATE VARCHAR2(30)
        , POSTAL_CODE VARCHAR2(15)
        , COMMENTS VARCHAR2(300)
        , PHONE_NUMBER VARCHAR2(20)
        , COUNTRY_CODE CHAR(3)
        , SPONSOR_CODE CHAR(6)
        , OWNED_BY_UNIT VARCHAR2(8) NOT NULL
        , SPONSOR_ADDRESS_FLAG CHAR(1) NOT NULL
        , DELETE_FLAG CHAR(1)
        , CREATE_USER VARCHAR2(60) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE ROLODEX
    ADD CONSTRAINT ROLODEXP1
PRIMARY KEY (ROLODEX_ID)
/







-----------------------------------------------------------------------------
-- S2S_APPLICATION
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'S2S_APPLICATION';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE S2S_APPLICATION CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE S2S_APPLICATION
(
      PROPOSAL_NUMBER VARCHAR2(8)
        , APPLICATION CLOB
        , UPDATE_TIMESTAMP DATE
        , UPDATE_USER VARCHAR2(60)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE S2S_APPLICATION
    ADD CONSTRAINT S2S_APPLICATIONP1
PRIMARY KEY (PROPOSAL_NUMBER)
/







-----------------------------------------------------------------------------
-- S2S_APP_ATTACHMENTS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'S2S_APP_ATTACHMENTS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE S2S_APP_ATTACHMENTS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE S2S_APP_ATTACHMENTS
(
      CONTENT_ID VARCHAR2(300) NOT NULL
        , PROPOSAL_NUMBER VARCHAR2(8) NOT NULL
        , HASH_CODE VARCHAR2(200)
        , UPDATE_TIMESTAMP DATE
        , UPDATE_USER VARCHAR2(60)
        , CONTENT_TYPE VARCHAR2(250)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , S2S_APP_ATTACHMENT_ID NUMBER(12)
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE S2S_APP_ATTACHMENTS
    ADD CONSTRAINT S2S_APP_ATTACHMENTSP1
PRIMARY KEY (S2S_APP_ATTACHMENT_ID)
/







-----------------------------------------------------------------------------
-- S2S_APP_SUBMISSION
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'S2S_APP_SUBMISSION';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE S2S_APP_SUBMISSION CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE S2S_APP_SUBMISSION
(
      SUBMISSION_NUMBER NUMBER(3)
        , COMMENTS VARCHAR2(2000)
        , STATUS VARCHAR2(50)
        , GG_TRACKING_ID VARCHAR2(50)
        , AGENCY_TRACKING_ID VARCHAR2(50)
        , RECEIVED_DATE DATE
        , LAST_MODIFIED_DATE DATE
        , LAST_NOTIFIED_DATE DATE
        , UPDATE_TIMESTAMP DATE
        , UPDATE_USER VARCHAR2(60)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , PROPOSAL_NUMBER VARCHAR2(8)
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE S2S_APP_SUBMISSION
    ADD CONSTRAINT S2S_APP_SUBMISSIONP1
PRIMARY KEY (SUBMISSION_NUMBER,PROPOSAL_NUMBER)
/







-----------------------------------------------------------------------------
-- S2S_OPPORTUNITY
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'S2S_OPPORTUNITY';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE S2S_OPPORTUNITY CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE S2S_OPPORTUNITY
(
      PROPOSAL_NUMBER VARCHAR2(8)
        , OPPORTUNITY_TITLE VARCHAR2(255)
        , COMPETETION_ID VARCHAR2(50)
        , OPENING_DATE DATE
        , CLOSING_DATE DATE
        , SCHEMA_URL VARCHAR2(200)
        , INSTRUCTION_URL VARCHAR2(200)
        , OPPORTUNITY_ID VARCHAR2(50)
        , CFDA_NUMBER VARCHAR2(6)
        , S2S_SUBMISSION_TYPE_CODE VARCHAR2(3) default '1'
        , REVISION_CODE VARCHAR2(2)
        , REVISION_OTHER_DESCRIPTION VARCHAR2(45)
        , UPDATE_TIMESTAMP DATE
        , UPDATE_USER VARCHAR2(60)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
        , OPPORTUNITY CLOB NOT NULL
    

)
/

ALTER TABLE S2S_OPPORTUNITY
    ADD CONSTRAINT S2S_OPPORTUNITYP1
PRIMARY KEY (PROPOSAL_NUMBER)
/







-----------------------------------------------------------------------------
-- S2S_OPP_FORMS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'S2S_OPP_FORMS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE S2S_OPP_FORMS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE S2S_OPP_FORMS
(
      PROPOSAL_NUMBER VARCHAR2(8)
        , OPP_NAME_SPACE VARCHAR2(200)
        , FORM_NAME VARCHAR2(100)
        , MANDATORY VARCHAR2(1) default 'N'
        , AVAILABLE VARCHAR2(1) default 'Y'
        , INCLUDE VARCHAR2(1) default 'Y'
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE S2S_OPP_FORMS
    ADD CONSTRAINT S2S_OPP_FORMSP1
PRIMARY KEY (PROPOSAL_NUMBER,OPP_NAME_SPACE)
/







-----------------------------------------------------------------------------
-- S2S_REVISION_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'S2S_REVISION_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE S2S_REVISION_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE S2S_REVISION_TYPE
(
      S2S_REVISION_TYPE_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE S2S_REVISION_TYPE
    ADD CONSTRAINT S2S_REVISION_TYPEP1
PRIMARY KEY (S2S_REVISION_TYPE_CODE)
/







-----------------------------------------------------------------------------
-- S2S_SUBMISSION_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'S2S_SUBMISSION_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE S2S_SUBMISSION_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE S2S_SUBMISSION_TYPE
(
      SORT_ID NUMBER(2)
        , S2S_SUBMISSION_TYPE_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE S2S_SUBMISSION_TYPE
    ADD CONSTRAINT S2S_SUBMISSION_TYPEP1
PRIMARY KEY (S2S_SUBMISSION_TYPE_CODE)
/







-----------------------------------------------------------------------------
-- SCHEDULE_ACT_ITEM_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'SCHEDULE_ACT_ITEM_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE SCHEDULE_ACT_ITEM_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE SCHEDULE_ACT_ITEM_TYPE
(
      SCHEDULE_ACT_ITEM_TYPE_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE SCHEDULE_ACT_ITEM_TYPE
    ADD CONSTRAINT SCHEDULE_ACT_ITEM_TYPEP1
PRIMARY KEY (SCHEDULE_ACT_ITEM_TYPE_CODE)
/







-----------------------------------------------------------------------------
-- SCHEDULE_AGENDA
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'SCHEDULE_AGENDA';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE SCHEDULE_AGENDA CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE SCHEDULE_AGENDA
(
      SCHEDULE_AGENDA_ID NUMBER(12)
        , SCHEDULE_ID_FK NUMBER(12) NOT NULL
        , AGENDA_NUMBER NUMBER(4) NOT NULL
        , AGENDA_NAME VARCHAR2(200) NOT NULL
        , CREATE_TIMESTAMP DATE NOT NULL
        , CREATE_USER VARCHAR2(60) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
        , PDF_STORE BLOB
    

)
/

ALTER TABLE SCHEDULE_AGENDA
    ADD CONSTRAINT SCHEDULE_AGENDAP1
PRIMARY KEY (SCHEDULE_AGENDA_ID)
/


CREATE INDEX UQ_COMM_SCHEDULE_AGENDA 
  ON SCHEDULE_AGENDA 
  (SCHEDULE_ID_FK, AGENDA_NUMBER)
/





-----------------------------------------------------------------------------
-- SCHEDULE_STATUS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'SCHEDULE_STATUS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE SCHEDULE_STATUS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE SCHEDULE_STATUS
(
      SCHEDULE_STATUS_CODE NUMBER(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE SCHEDULE_STATUS
    ADD CONSTRAINT SCHEDULE_STATUSP1
PRIMARY KEY (SCHEDULE_STATUS_CODE)
/







-----------------------------------------------------------------------------
-- SCHOOL_CODE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'SCHOOL_CODE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE SCHOOL_CODE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE SCHOOL_CODE
(
      SCHOOL_CODE NUMBER(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE SCHOOL_CODE
    ADD CONSTRAINT SCHOOL_CODEP1
PRIMARY KEY (SCHOOL_CODE)
/







-----------------------------------------------------------------------------
-- SCIENCE_KEYWORD
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'SCIENCE_KEYWORD';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE SCIENCE_KEYWORD CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE SCIENCE_KEYWORD
(
      SCIENCE_KEYWORD_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE SCIENCE_KEYWORD
    ADD CONSTRAINT SCIENCE_KEYWORDP1
PRIMARY KEY (SCIENCE_KEYWORD_CODE)
/







-----------------------------------------------------------------------------
-- SPECIAL_REVIEW
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'SPECIAL_REVIEW';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE SPECIAL_REVIEW CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE SPECIAL_REVIEW
(
      SPECIAL_REVIEW_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE SPECIAL_REVIEW
    ADD CONSTRAINT SPECIAL_REVIEWP1
PRIMARY KEY (SPECIAL_REVIEW_CODE)
/







-----------------------------------------------------------------------------
-- SPONSOR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'SPONSOR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE SPONSOR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE SPONSOR
(
      SPONSOR_CODE CHAR(6)
        , SPONSOR_NAME VARCHAR2(60) NOT NULL
        , ACRONYM VARCHAR2(10)
        , SPONSOR_TYPE_CODE VARCHAR2(3) NOT NULL
        , DUN_AND_BRADSTREET_NUMBER VARCHAR2(20)
        , DUNS_PLUS_FOUR_NUMBER VARCHAR2(20)
        , DODAC_NUMBER VARCHAR2(20)
        , CAGE_NUMBER VARCHAR2(20)
        , POSTAL_CODE VARCHAR2(15)
        , STATE VARCHAR2(30)
        , COUNTRY_CODE CHAR(3)
        , ROLODEX_ID NUMBER(6) NOT NULL
        , AUDIT_REPORT_SENT_FOR_FY CHAR(4)
        , OWNED_BY_UNIT VARCHAR2(8) NOT NULL
        , CREATE_USER VARCHAR2(60) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE SPONSOR
    ADD CONSTRAINT SPONSORP1
PRIMARY KEY (SPONSOR_CODE)
/







-----------------------------------------------------------------------------
-- SPONSOR_FORMS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'SPONSOR_FORMS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE SPONSOR_FORMS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE SPONSOR_FORMS
(
      SPONSOR_CODE CHAR(6)
        , PACKAGE_NUMBER NUMBER(3)
        , PACKAGE_NAME VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE SPONSOR_FORMS
    ADD CONSTRAINT SPONSOR_FORMSP1
PRIMARY KEY (SPONSOR_CODE,PACKAGE_NUMBER)
/







-----------------------------------------------------------------------------
-- SPONSOR_FORM_TEMPLATES
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'SPONSOR_FORM_TEMPLATES';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE SPONSOR_FORM_TEMPLATES CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE SPONSOR_FORM_TEMPLATES
(
      SPONSOR_CODE CHAR(6)
        , PACKAGE_NUMBER NUMBER(3)
        , PAGE_NUMBER NUMBER(3)
        , PAGE_DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , FILE_NAME VARCHAR2(150)
        , CONTENT_TYPE VARCHAR2(250)
        , FORM_TEMPLATE CLOB
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE SPONSOR_FORM_TEMPLATES
    ADD CONSTRAINT SPONSOR_FORM_TEMPLATESP1
PRIMARY KEY (SPONSOR_CODE,PACKAGE_NUMBER,PAGE_NUMBER)
/







-----------------------------------------------------------------------------
-- SPONSOR_HIERARCHY
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'SPONSOR_HIERARCHY';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE SPONSOR_HIERARCHY CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE SPONSOR_HIERARCHY
(
      HIERARCHY_NAME VARCHAR2(100)
        , SPONSOR_CODE CHAR(6)
        , LEVEL1 VARCHAR2(50)
        , LEVEL2 VARCHAR2(50)
        , LEVEL3 VARCHAR2(50)
        , LEVEL4 VARCHAR2(50)
        , LEVEL5 VARCHAR2(50)
        , LEVEL6 VARCHAR2(50)
        , LEVEL7 VARCHAR2(50)
        , LEVEL8 VARCHAR2(50)
        , LEVEL9 VARCHAR2(50)
        , LEVEL10 VARCHAR2(50)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , LEVEL1_SORTID NUMBER(4)
        , LEVEL2_SORTID NUMBER(4)
        , LEVEL3_SORTID NUMBER(4)
        , LEVEL4_SORTID NUMBER(4)
        , LEVEL5_SORTID NUMBER(4)
        , LEVEL6_SORTID NUMBER(4)
        , LEVEL7_SORTID NUMBER(4)
        , LEVEL8_SORTID NUMBER(4)
        , LEVEL9_SORTID NUMBER(4)
        , LEVEL10_SORTID NUMBER(4)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE SPONSOR_HIERARCHY
    ADD CONSTRAINT SPONSOR_HIERARCHYP1
PRIMARY KEY (HIERARCHY_NAME,SPONSOR_CODE)
/







-----------------------------------------------------------------------------
-- SPONSOR_HIERARCHY_MT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'SPONSOR_HIERARCHY_MT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE SPONSOR_HIERARCHY_MT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE SPONSOR_HIERARCHY_MT
(
      HIERARCHY_NAME VARCHAR2(150)
        , SPONSOR_CODE CHAR(6)
        , LEVEL1 VARCHAR2(50)
        , LEVEL2 VARCHAR2(50)
        , LEVEL3 VARCHAR2(50)
        , LEVEL4 VARCHAR2(50)
        , LEVEL5 VARCHAR2(50)
        , LEVEL6 VARCHAR2(50)
        , LEVEL7 VARCHAR2(50)
        , LEVEL8 VARCHAR2(50)
        , LEVEL9 VARCHAR2(50)
        , LEVEL10 VARCHAR2(50)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , LEVEL1_SORTID NUMBER(4)
        , LEVEL2_SORTID NUMBER(4)
        , LEVEL3_SORTID NUMBER(4)
        , LEVEL4_SORTID NUMBER(4)
        , LEVEL5_SORTID NUMBER(4)
        , LEVEL6_SORTID NUMBER(4)
        , LEVEL7_SORTID NUMBER(4)
        , LEVEL8_SORTID NUMBER(4)
        , LEVEL9_SORTID NUMBER(4)
        , LEVEL10_SORTID NUMBER(4)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE SPONSOR_HIERARCHY_MT
    ADD CONSTRAINT SPONSOR_HIERARCHY_MTP1
PRIMARY KEY (HIERARCHY_NAME,SPONSOR_CODE)
/







-----------------------------------------------------------------------------
-- SPONSOR_TERM
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'SPONSOR_TERM';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE SPONSOR_TERM CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE SPONSOR_TERM
(
      VER_NBR NUMBER(8) default 1 NOT NULL
        , SPONSOR_TERM_ID NUMBER(12)
        , SPONSOR_TERM_CODE VARCHAR2(3) NOT NULL
        , SPONSOR_TERM_TYPE_CODE VARCHAR2(3) NOT NULL
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE SPONSOR_TERM
    ADD CONSTRAINT SPONSOR_TERMP1
PRIMARY KEY (SPONSOR_TERM_ID)
/


CREATE INDEX U_SPONSOR_TERM 
  ON SPONSOR_TERM 
  (SPONSOR_TERM_CODE, SPONSOR_TERM_TYPE_CODE)
/





-----------------------------------------------------------------------------
-- SPONSOR_TERM_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'SPONSOR_TERM_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE SPONSOR_TERM_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE SPONSOR_TERM_TYPE
(
      VER_NBR NUMBER(8) default 1 NOT NULL
        , SPONSOR_TERM_TYPE_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE SPONSOR_TERM_TYPE
    ADD CONSTRAINT SPONSOR_TERM_TYPEP1
PRIMARY KEY (SPONSOR_TERM_TYPE_CODE)
/







-----------------------------------------------------------------------------
-- SPONSOR_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'SPONSOR_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE SPONSOR_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE SPONSOR_TYPE
(
      SPONSOR_TYPE_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(100) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE SPONSOR_TYPE
    ADD CONSTRAINT SPONSOR_TYPEP1
PRIMARY KEY (SPONSOR_TYPE_CODE)
/







-----------------------------------------------------------------------------
-- SP_REV_APPROVAL_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'SP_REV_APPROVAL_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE SP_REV_APPROVAL_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE SP_REV_APPROVAL_TYPE
(
      APPROVAL_TYPE_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE SP_REV_APPROVAL_TYPE
    ADD CONSTRAINT SP_REV_APPROVAL_TYPEP1
PRIMARY KEY (APPROVAL_TYPE_CODE)
/







-----------------------------------------------------------------------------
-- STATE_CODE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'STATE_CODE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE STATE_CODE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE STATE_CODE
(
      COUNTRY_CODE CHAR(3)
        , STATE_CODE VARCHAR2(15)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE STATE_CODE
    ADD CONSTRAINT STATE_CODEP1
PRIMARY KEY (COUNTRY_CODE,STATE_CODE)
/







-----------------------------------------------------------------------------
-- SUBMISSION_HISTORY
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'SUBMISSION_HISTORY';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE SUBMISSION_HISTORY CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE SUBMISSION_HISTORY
(
      ID NUMBER(22)
        , PROPOSAL_NUMBER VARCHAR2(8)
        , PROPOSAL_NUMBER_ORIG VARCHAR2(8)
        , ORIGINAL_PROPOSAL_ID VARCHAR2(8)
        , SUBMITTED_BY VARCHAR2(60)
        , S2S_SUBMISSION_TYPE_CODE VARCHAR2(3)
        , S2S_REVISION_TYPE_CODE VARCHAR2(3)
        , SUBMISSION_TIMESTAMP DATE
        , FEDERAL_IDENTIFIER VARCHAR2(50)
        , UPDATE_TIMESTAMP DATE
        , UPDATE_USER VARCHAR2(60)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE SUBMISSION_HISTORY
    ADD CONSTRAINT SUBMISSION_HISTORYP1
PRIMARY KEY (ID)
/







-----------------------------------------------------------------------------
-- SUBMISSION_STATUS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'SUBMISSION_STATUS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE SUBMISSION_STATUS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE SUBMISSION_STATUS
(
      SUBMISSION_STATUS_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE SUBMISSION_STATUS
    ADD CONSTRAINT SUBMISSION_STATUSP1
PRIMARY KEY (SUBMISSION_STATUS_CODE)
/







-----------------------------------------------------------------------------
-- SUBMISSION_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'SUBMISSION_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE SUBMISSION_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE SUBMISSION_TYPE
(
      SUBMISSION_TYPE_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE SUBMISSION_TYPE
    ADD CONSTRAINT SUBMISSION_TYPEP1
PRIMARY KEY (SUBMISSION_TYPE_CODE)
/







-----------------------------------------------------------------------------
-- SUBMISSION_TYPE_QUALIFIER
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'SUBMISSION_TYPE_QUALIFIER';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE SUBMISSION_TYPE_QUALIFIER CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE SUBMISSION_TYPE_QUALIFIER
(
      SUBMISSION_TYPE_QUAL_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE SUBMISSION_TYPE_QUALIFIER
    ADD CONSTRAINT SUBMISSION_TYPE_QUALIFIERP1
PRIMARY KEY (SUBMISSION_TYPE_QUAL_CODE)
/







-----------------------------------------------------------------------------
-- TBN
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'TBN';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE TBN CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE TBN
(
      TBN_ID VARCHAR2(9)
        , PERSON_NAME VARCHAR2(90) NOT NULL
        , JOB_CODE VARCHAR2(6)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE TBN
    ADD CONSTRAINT TBNP1
PRIMARY KEY (TBN_ID)
/







-----------------------------------------------------------------------------
-- TIME_AND_MONEY_DOCUMENT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'TIME_AND_MONEY_DOCUMENT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE TIME_AND_MONEY_DOCUMENT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE TIME_AND_MONEY_DOCUMENT
(
      DOCUMENT_NUMBER VARCHAR2(10)
        , AWARD_NUMBER VARCHAR2(12) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE TIME_AND_MONEY_DOCUMENT
    ADD CONSTRAINT TIME_AND_MONEY_DOCUMENTP1
PRIMARY KEY (DOCUMENT_NUMBER)
/







-----------------------------------------------------------------------------
-- TRAINING
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'TRAINING';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE TRAINING CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE TRAINING
(
      TRAINING_CODE NUMBER(4)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE TRAINING
    ADD CONSTRAINT TRAININGP1
PRIMARY KEY (TRAINING_CODE)
/







-----------------------------------------------------------------------------
-- TRANSACTION_DETAILS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'TRANSACTION_DETAILS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE TRANSACTION_DETAILS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE TRANSACTION_DETAILS
(
      TRANSACTION_DETAIL_ID NUMBER(10)
        , AWARD_NUMBER VARCHAR2(12) NOT NULL
        , SEQUENCE_NUMBER NUMBER(4) NOT NULL
        , TRANSACTION_ID NUMBER(10) NOT NULL
        , TNM_DOCUMENT_NUMBER VARCHAR2(10) NOT NULL
        , COMMENTS VARCHAR2(200)
        , SOURCE_AWARD_NUMBER VARCHAR2(12) NOT NULL
        , DESTINATION_AWARD_NUMBER VARCHAR2(12) NOT NULL
        , OBLIGATED_AMOUNT NUMBER(12,2)
        , ANTICIPATED_AMOUNT NUMBER(12,2)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
        , TRANSACTION_DETAIL_TYPE VARCHAR2(12)
    

)
/

ALTER TABLE TRANSACTION_DETAILS
    ADD CONSTRAINT TRANSACTION_DETAILSP1
PRIMARY KEY (TRANSACTION_DETAIL_ID)
/







-----------------------------------------------------------------------------
-- TRAV_DOC_2_ACCOUNTS
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'TRAV_DOC_2_ACCOUNTS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE TRAV_DOC_2_ACCOUNTS CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE TRAV_DOC_2_ACCOUNTS
(
      FDOC_NBR VARCHAR2(14)
        , ACCT_NUM VARCHAR2(10)
    

)
/

ALTER TABLE TRAV_DOC_2_ACCOUNTS
    ADD CONSTRAINT TRAV_DOC_2_ACCOUNTSP1
PRIMARY KEY (FDOC_NBR,ACCT_NUM)
/







-----------------------------------------------------------------------------
-- TRV_ACCT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'TRV_ACCT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE TRV_ACCT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE TRV_ACCT
(
      ACCT_NUM VARCHAR2(10)
        , ACCT_NAME VARCHAR2(50)
        , ACCT_TYPE VARCHAR2(100)
        , ACCT_FO_ID NUMBER(14)
    

)
/

ALTER TABLE TRV_ACCT
    ADD CONSTRAINT TRV_ACCTP1
PRIMARY KEY (ACCT_NUM)
/







-----------------------------------------------------------------------------
-- TRV_ACCT_EXT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'TRV_ACCT_EXT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE TRV_ACCT_EXT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE TRV_ACCT_EXT
(
      ACCT_NUM VARCHAR2(10)
        , ACCT_TYPE VARCHAR2(100)
    

)
/

ALTER TABLE TRV_ACCT_EXT
    ADD CONSTRAINT TRV_ACCT_EXTP1
PRIMARY KEY (ACCT_NUM,ACCT_TYPE)
/







-----------------------------------------------------------------------------
-- TRV_ACCT_FO
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'TRV_ACCT_FO';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE TRV_ACCT_FO CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE TRV_ACCT_FO
(
      ACCT_FO_ID NUMBER(14)
        , ACCT_FO_USER_NAME VARCHAR2(50) NOT NULL
    

)
/

ALTER TABLE TRV_ACCT_FO
    ADD CONSTRAINT TRV_ACCT_FOP1
PRIMARY KEY (ACCT_FO_ID)
/







-----------------------------------------------------------------------------
-- TRV_ACCT_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'TRV_ACCT_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE TRV_ACCT_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE TRV_ACCT_TYPE
(
      ACCT_TYPE VARCHAR2(10)
        , ACCT_TYPE_NAME VARCHAR2(50)
    

)
/

ALTER TABLE TRV_ACCT_TYPE
    ADD CONSTRAINT TRV_ACCT_TYPEP1
PRIMARY KEY (ACCT_TYPE)
/







-----------------------------------------------------------------------------
-- TRV_DOC_2
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'TRV_DOC_2';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE TRV_DOC_2 CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE TRV_DOC_2
(
      FDOC_NBR VARCHAR2(14)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , FDOC_EXPLAIN_TXT VARCHAR2(400)
        , REQUEST_TRAV VARCHAR2(30) NOT NULL
        , TRAVELER VARCHAR2(200)
        , ORG VARCHAR2(60)
        , DEST VARCHAR2(60)
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/

ALTER TABLE TRV_DOC_2
    ADD CONSTRAINT TRV_DOC_2P1
PRIMARY KEY (FDOC_NBR)
/







-----------------------------------------------------------------------------
-- TRV_DOC_ACCT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'TRV_DOC_ACCT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE TRV_DOC_ACCT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE TRV_DOC_ACCT
(
      DOC_HDR_ID NUMBER(14)
        , ACCT_NUM VARCHAR2(10)
    

)
/

ALTER TABLE TRV_DOC_ACCT
    ADD CONSTRAINT TRV_DOC_ACCTP1
PRIMARY KEY (DOC_HDR_ID,ACCT_NUM)
/







-----------------------------------------------------------------------------
-- TST_SEARCH_ATTR_INDX_TST_DOC_T
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'TST_SEARCH_ATTR_INDX_TST_DOC_T';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE TST_SEARCH_ATTR_INDX_TST_DOC_T CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE TST_SEARCH_ATTR_INDX_TST_DOC_T
(
      DOC_HDR_ID VARCHAR2(14)
        , OBJ_ID VARCHAR2(36)
        , VER_NBR NUMBER(14)
        , RTE_LVL_CNT NUMBER(14)
        , CNSTNT_STR VARCHAR2(50)
        , RTD_STR VARCHAR2(50)
        , HLD_RTD_STR VARCHAR2(50)
        , RD_ACCS_CNT NUMBER(14)
    

)
/

ALTER TABLE TST_SEARCH_ATTR_INDX_TST_DOC_T
    ADD CONSTRAINT TST_SEARCH_ATTR_INDX_TST_DOP1
PRIMARY KEY (DOC_HDR_ID)
/







-----------------------------------------------------------------------------
-- UNIT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'UNIT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE UNIT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE UNIT
(
      UNIT_NUMBER VARCHAR2(8)
        , UNIT_NAME VARCHAR2(60)
        , ORGANIZATION_ID VARCHAR2(8)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , PARENT_UNIT_NUMBER VARCHAR2(8)
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE UNIT
    ADD CONSTRAINT UNITP1
PRIMARY KEY (UNIT_NUMBER)
/







-----------------------------------------------------------------------------
-- UNIT_ADMINISTRATOR
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'UNIT_ADMINISTRATOR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE UNIT_ADMINISTRATOR CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE UNIT_ADMINISTRATOR
(
      UNIT_NUMBER VARCHAR2(8)
        , PERSON_ID VARCHAR2(40)
        , UNIT_ADMINISTRATOR_TYPE_CODE VARCHAR2(3)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE UNIT_ADMINISTRATOR
    ADD CONSTRAINT UNIT_ADMINISTRATORP1
PRIMARY KEY (UNIT_NUMBER,PERSON_ID,UNIT_ADMINISTRATOR_TYPE_CODE)
/







-----------------------------------------------------------------------------
-- UNIT_ADMINISTRATOR_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'UNIT_ADMINISTRATOR_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE UNIT_ADMINISTRATOR_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE UNIT_ADMINISTRATOR_TYPE
(
      UNIT_ADMINISTRATOR_TYPE_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , DEFAULT_GROUP_FLAG VARCHAR2(1)
        , MULTIPLES_FLAG VARCHAR2(1)
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE UNIT_ADMINISTRATOR_TYPE
    ADD CONSTRAINT UNIT_ADMINISTRATOR_TYPEP1
PRIMARY KEY (UNIT_ADMINISTRATOR_TYPE_CODE)
/







-----------------------------------------------------------------------------
-- USER_ROLES
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'USER_ROLES';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE USER_ROLES CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE USER_ROLES
(
      USER_ID VARCHAR2(10)
        , ROLE_ID NUMBER(5)
        , UNIT_NUMBER VARCHAR2(8)
        , DESCEND_FLAG CHAR(1) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE USER_ROLES
    ADD CONSTRAINT USER_ROLESP1
PRIMARY KEY (USER_ID,ROLE_ID,UNIT_NUMBER)
/







-----------------------------------------------------------------------------
-- USER_TABLES_TEMP
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'USER_TABLES_TEMP';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE USER_TABLES_TEMP CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE USER_TABLES_TEMP
(
      TABLE_NAME VARCHAR2(30) NOT NULL
        , USER_KEY CHAR(1)
    

)
/








-----------------------------------------------------------------------------
-- VALID_AWARD_BASIS_PAYMENT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'VALID_AWARD_BASIS_PAYMENT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE VALID_AWARD_BASIS_PAYMENT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE VALID_AWARD_BASIS_PAYMENT
(
      VALID_AWARD_BASIS_PAYMENT_ID NUMBER(12)
        , AWARD_TYPE_CODE NUMBER(3) NOT NULL
        , BASIS_OF_PAYMENT_CODE VARCHAR2(3) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE VALID_AWARD_BASIS_PAYMENT
    ADD CONSTRAINT VALID_AWARD_BASIS_PAYMENTP1
PRIMARY KEY (VALID_AWARD_BASIS_PAYMENT_ID)
/


CREATE INDEX UQ_VALID_AWARD_BASIS_PAYMENT 
  ON VALID_AWARD_BASIS_PAYMENT 
  (AWARD_TYPE_CODE, BASIS_OF_PAYMENT_CODE)
/





-----------------------------------------------------------------------------
-- VALID_BASIS_METHOD_PMT
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'VALID_BASIS_METHOD_PMT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE VALID_BASIS_METHOD_PMT CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE VALID_BASIS_METHOD_PMT
(
      VALID_BASIS_METHOD_PMT_ID NUMBER(12)
        , BASIS_OF_PAYMENT_CODE VARCHAR2(3) NOT NULL
        , METHOD_OF_PAYMENT_CODE VARCHAR2(3) NOT NULL
        , FREQUENCY_INDICATOR CHAR(1) NOT NULL
        , INV_INSTRUCTIONS_INDICATOR CHAR(1) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE VALID_BASIS_METHOD_PMT
    ADD CONSTRAINT VALID_BASIS_METHOD_PMTP1
PRIMARY KEY (VALID_BASIS_METHOD_PMT_ID)
/


CREATE INDEX UQ_VALID_BASIS_METHOD_PMT 
  ON VALID_BASIS_METHOD_PMT 
  (BASIS_OF_PAYMENT_CODE, METHOD_OF_PAYMENT_CODE)
/





-----------------------------------------------------------------------------
-- VALID_CALC_TYPES
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'VALID_CALC_TYPES';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE VALID_CALC_TYPES CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE VALID_CALC_TYPES
(
      CALC_TYPE_ID VARCHAR2(8)
        , RATE_CLASS_TYPE CHAR(1)
        , DEPENDENT_SEQ_NUMBER NUMBER(3)
        , DEPENDENT_RATE_CLASS_TYPE CHAR(1)
        , RATE_CLASS_CODE VARCHAR2(3)
        , RATE_TYPE_CODE VARCHAR2(3)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE VALID_CALC_TYPES
    ADD CONSTRAINT VALID_CALC_TYPESP1
PRIMARY KEY (CALC_TYPE_ID,RATE_CLASS_TYPE,DEPENDENT_SEQ_NUMBER)
/







-----------------------------------------------------------------------------
-- VALID_CE_JOB_CODES
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'VALID_CE_JOB_CODES';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE VALID_CE_JOB_CODES CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE VALID_CE_JOB_CODES
(
      COST_ELEMENT VARCHAR2(8)
        , JOB_CODE VARCHAR2(6)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE VALID_CE_JOB_CODES
    ADD CONSTRAINT VALID_CE_JOB_CODESP1
PRIMARY KEY (COST_ELEMENT,JOB_CODE)
/







-----------------------------------------------------------------------------
-- VALID_CE_RATE_TYPES
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'VALID_CE_RATE_TYPES';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE VALID_CE_RATE_TYPES CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE VALID_CE_RATE_TYPES
(
      ACTIVE_FLAG VARCHAR2(1) default 'Y' NOT NULL
        , COST_ELEMENT VARCHAR2(8)
        , RATE_CLASS_CODE VARCHAR2(3)
        , RATE_TYPE_CODE VARCHAR2(3)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE VALID_CE_RATE_TYPES
    ADD CONSTRAINT VALID_CE_RATE_TYPESP1
PRIMARY KEY (COST_ELEMENT,RATE_CLASS_CODE,RATE_TYPE_CODE)
/







-----------------------------------------------------------------------------
-- VALID_CLASS_REPORT_FREQ
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'VALID_CLASS_REPORT_FREQ';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE VALID_CLASS_REPORT_FREQ CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE VALID_CLASS_REPORT_FREQ
(
      VALID_CLASS_REPORT_FREQ_ID NUMBER(12)
        , REPORT_CLASS_CODE VARCHAR2(3) NOT NULL
        , REPORT_CODE VARCHAR2(3) NOT NULL
        , FREQUENCY_CODE VARCHAR2(3) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE VALID_CLASS_REPORT_FREQ
    ADD CONSTRAINT VALID_CLASS_REPORT_FREQP1
PRIMARY KEY (VALID_CLASS_REPORT_FREQ_ID)
/


CREATE INDEX UQ_VALID_CLASS_REPORT_FREQ 
  ON VALID_CLASS_REPORT_FREQ 
  (REPORT_CLASS_CODE, REPORT_CODE, FREQUENCY_CODE)
/





-----------------------------------------------------------------------------
-- VALID_FREQUENCY_BASE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'VALID_FREQUENCY_BASE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE VALID_FREQUENCY_BASE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE VALID_FREQUENCY_BASE
(
      VALID_FREQUENCY_BASE_ID NUMBER(12)
        , FREQUENCY_CODE VARCHAR2(3) NOT NULL
        , FREQUENCY_BASE_CODE VARCHAR2(3) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE VALID_FREQUENCY_BASE
    ADD CONSTRAINT VALID_FREQUENCY_BASEP1
PRIMARY KEY (VALID_FREQUENCY_BASE_ID)
/


CREATE INDEX UQ_VALID_FREQUENCY_BASE 
  ON VALID_FREQUENCY_BASE 
  (FREQUENCY_CODE, FREQUENCY_BASE_CODE)
/





-----------------------------------------------------------------------------
-- VALID_PROTO_ACTION_CORESP
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'VALID_PROTO_ACTION_CORESP';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE VALID_PROTO_ACTION_CORESP CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE VALID_PROTO_ACTION_CORESP
(
      VALID_PROTO_ACTION_CORESP_ID NUMBER(12)
        , PROTOCOL_ACTION_TYPE_CODE VARCHAR2(3) NOT NULL
        , PROTO_CORRESP_TYPE_CODE VARCHAR2(3) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , FINAL_FLAG VARCHAR2(1)
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    
    , CONSTRAINT UQ_VALID_PROTO_ACTION_CORESP UNIQUE (PROTOCOL_ACTION_TYPE_CODE, PROTO_CORRESP_TYPE_CODE)

)
/

ALTER TABLE VALID_PROTO_ACTION_CORESP
    ADD CONSTRAINT VALID_PROTO_ACTION_CORESPP1
PRIMARY KEY (VALID_PROTO_ACTION_CORESP_ID)
/







-----------------------------------------------------------------------------
-- VALID_RATES
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'VALID_RATES';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE VALID_RATES CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE VALID_RATES
(
      VALID_RATES_ID NUMBER(12)
        , ON_CAMPUS_RATE NUMBER(5,2) NOT NULL
        , OFF_CAMPUS_RATE NUMBER(5,2) NOT NULL
        , RATE_CLASS_TYPE VARCHAR2(1) NOT NULL
        , ADJUSTMENT_KEY VARCHAR2(6) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE VALID_RATES
    ADD CONSTRAINT VALID_RATESP1
PRIMARY KEY (VALID_RATES_ID)
/







-----------------------------------------------------------------------------
-- VALID_SP_REV_APPROVAL
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'VALID_SP_REV_APPROVAL';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE VALID_SP_REV_APPROVAL CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE VALID_SP_REV_APPROVAL
(
      EXEMPT_NUMBER_FLAG CHAR(1) NOT NULL
        , SPECIAL_REVIEW_CODE VARCHAR2(3)
        , APPROVAL_TYPE_CODE VARCHAR2(3)
        , PROTOCOL_NUMBER_FLAG CHAR(1) NOT NULL
        , APPROVAL_DATE_FLAG CHAR(1) NOT NULL
        , APPLICATION_DATE_FLAG CHAR(1) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE VALID_SP_REV_APPROVAL
    ADD CONSTRAINT VALID_SP_REV_APPROVALP1
PRIMARY KEY (SPECIAL_REVIEW_CODE,APPROVAL_TYPE_CODE)
/







-----------------------------------------------------------------------------
-- VERSION_HISTORY
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'VERSION_HISTORY';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE VERSION_HISTORY CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE VERSION_HISTORY
(
      VERSION_HISTORY_ID NUMBER(22) NOT NULL
        , SEQ_OWNER_CLASS_NAME VARCHAR2(256) NOT NULL
        , SEQ_OWNER_VERSION_NAME_FIELD VARCHAR2(32) NOT NULL
        , SEQ_OWNER_VERSION_NAME_VALUE VARCHAR2(32) NOT NULL
        , SEQ_OWNER_SEQ_NUMBER NUMBER(12) NOT NULL
        , VERSION_STATUS VARCHAR2(16) NOT NULL
        , VERSION_DATE DATE NOT NULL
        , USER_ID VARCHAR2(60) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) NOT NULL
        , OBJ_ID VARCHAR2(36) NOT NULL
    

)
/








-----------------------------------------------------------------------------
-- VULNERABLE_SUBJECT_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'VULNERABLE_SUBJECT_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE VULNERABLE_SUBJECT_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE VULNERABLE_SUBJECT_TYPE
(
      VULNERABLE_SUBJECT_TYPE_CODE VARCHAR2(3)
        , DESCRIPTION VARCHAR2(200) NOT NULL
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE VULNERABLE_SUBJECT_TYPE
    ADD CONSTRAINT VULNERABLE_SUBJECT_TYPEP1
PRIMARY KEY (VULNERABLE_SUBJECT_TYPE_CODE)
/







-----------------------------------------------------------------------------
-- YNQ
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'YNQ';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE YNQ CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE YNQ
(
      QUESTION_ID VARCHAR2(4)
        , DESCRIPTION VARCHAR2(500) NOT NULL
        , QUESTION_TYPE CHAR(1) NOT NULL
        , NO_OF_ANSWERS NUMBER(2) NOT NULL
        , EXPLANATION_REQUIRED_FOR VARCHAR2(3)
        , DATE_REQUIRED_FOR VARCHAR2(3)
        , STATUS CHAR(1) NOT NULL
        , EFFECTIVE_DATE DATE NOT NULL
        , GROUP_NAME VARCHAR2(150)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE YNQ
    ADD CONSTRAINT YNQP1
PRIMARY KEY (QUESTION_ID)
/







-----------------------------------------------------------------------------
-- YNQ_EXPLANATION
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'YNQ_EXPLANATION';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE YNQ_EXPLANATION CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE YNQ_EXPLANATION
(
      QUESTION_ID VARCHAR2(4)
        , EXPLANATION_TYPE CHAR(1)
        , EXPLANATION CLOB
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE YNQ_EXPLANATION
    ADD CONSTRAINT YNQ_EXPLANATIONP1
PRIMARY KEY (QUESTION_ID,EXPLANATION_TYPE)
/







-----------------------------------------------------------------------------
-- YNQ_EXPLANATION_TYPE
-----------------------------------------------------------------------------
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_tables WHERE table_name = 'YNQ_EXPLANATION_TYPE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP TABLE YNQ_EXPLANATION_TYPE CASCADE CONSTRAINTS PURGE'; END IF;
END;
/

CREATE TABLE YNQ_EXPLANATION_TYPE
(
      EXPLANATION_TYPE CHAR(1)
        , DESCRIPTION VARCHAR2(200)
        , UPDATE_TIMESTAMP DATE NOT NULL
        , UPDATE_USER VARCHAR2(60) NOT NULL
        , VER_NBR NUMBER(8) default 1 NOT NULL
        , OBJ_ID VARCHAR2(36)
    

)
/

ALTER TABLE YNQ_EXPLANATION_TYPE
    ADD CONSTRAINT YNQ_EXPLANATION_TYPEP1
PRIMARY KEY (EXPLANATION_TYPE)
/







-- -----------------------------------------------------------------------
-- KRIM_GRP_MBR_V
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW KRIM_GRP_MBR_V AS 
SELECT g.NMSPC_CD
, g.grp_nm
, g.GRP_ID
, p.PRNCPL_NM
, p.PRNCPL_ID
, mg.GRP_NM AS mbr_grp_nm
, mg.GRP_ID AS mbr_grp_id
FROM KRIM_GRP_MBR_T gm
LEFT JOIN krim_grp_t g
ON g.GRP_ID = gm.GRP_ID
LEFT OUTER JOIN krim_grp_t mg
ON mg.GRP_ID = gm.MBR_ID
AND gm.MBR_TYP_CD = 'G'
LEFT OUTER JOIN krim_prncpl_t p
ON p.PRNCPL_ID = gm.MBR_ID
AND gm.MBR_TYP_CD = 'P'
LEFT OUTER JOIN krim_entity_nm_t en
ON en.ENTITY_ID = p.ENTITY_ID
AND en.DFLT_IND = 'Y'
AND en.ACTV_IND = 'Y'
ORDER BY nmspc_cd, grp_nm, prncpl_nm
 
/

-- -----------------------------------------------------------------------
-- KRIM_GRP_V
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW KRIM_GRP_V AS 
SELECT g.NMSPC_CD
, g.grp_nm
, g.GRP_ID
, t.NM AS grp_typ_nm
, a.NM AS attr_nm
, d.ATTR_VAL AS attr_val
FROM krim_grp_t g
LEFT OUTER JOIN KRIM_GRP_ATTR_DATA_T d
ON d.grp_id = g.GRP_ID
LEFT OUTER JOIN KRIM_ATTR_DEFN_T a
ON a.KIM_ATTR_DEFN_ID = d.KIM_ATTR_DEFN_ID
LEFT OUTER JOIN KRIM_TYP_T t
ON g.KIM_TYP_ID = t.KIM_TYP_ID
 
/

-- -----------------------------------------------------------------------
-- KRIM_PERM_ATTR_V
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW KRIM_PERM_ATTR_V AS 
SELECT
t.nmspc_cd AS tmpl_nmspc_cd
, t.NM AS tmpl_nm
, t.PERM_TMPL_ID
, p.nmspc_cd AS perm_nmspc_cd
, p.NM AS perm_nm
, p.PERM_ID
, a.NM AS attr_nm
, ad.ATTR_VAL AS attr_val
FROM KRIM_PERM_T p
LEFT JOIN KRIM_PERM_TMPL_T t
ON p.PERM_TMPL_ID = t.PERM_TMPL_ID
LEFT OUTER JOIN KRIM_PERM_ATTR_DATA_T ad
ON p.PERM_ID = ad.perm_id
LEFT OUTER JOIN KRIM_ATTR_DEFN_T a
ON ad.KIM_ATTR_DEFN_ID = a.KIM_ATTR_DEFN_ID
ORDER BY tmpl_nmspc_cd, tmpl_nm, perm_nmspc_cd, perm_id, attr_nm
 
/

-- -----------------------------------------------------------------------
-- KRIM_PERM_V
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW KRIM_PERM_V AS 
SELECT
t.nmspc_cd AS tmpl_nmspc_cd
, t.NM AS tmpl_nm
, t.PERM_TMPL_ID
, p.nmspc_cd AS perm_nmspc_cd
, p.NM AS perm_nm
, p.PERM_ID
, typ.NM AS perm_typ_nm
, typ.SRVC_NM
FROM KRIM_PERM_T p
INNER JOIN KRIM_PERM_TMPL_T t
ON p.PERM_TMPL_ID = t.PERM_TMPL_ID
LEFT OUTER JOIN KRIM_TYP_T typ
ON t.KIM_TYP_ID = typ.KIM_TYP_ID
 
/

-- -----------------------------------------------------------------------
-- KRIM_PRNCPL_V
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW KRIM_PRNCPL_V AS 
SELECT
p.PRNCPL_ID
,p.PRNCPL_NM
,en.FIRST_NM
,en.LAST_NM
,ea.AFLTN_TYP_CD
,ea.CAMPUS_CD
,eei.EMP_STAT_CD
,eei.EMP_TYP_CD
FROM krim_prncpl_t p
LEFT OUTER JOIN krim_entity_emp_info_t eei
ON eei.ENTITY_ID = p.ENTITY_ID
LEFT OUTER JOIN krim_entity_afltn_t ea
ON ea.ENTITY_ID = p.ENTITY_ID
LEFT OUTER JOIN krim_entity_nm_t en
ON p.ENTITY_ID = en.ENTITY_ID
AND 'Y' = en.DFLT_IND
 
/

-- -----------------------------------------------------------------------
-- KRIM_ROLE_GRP_V
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW KRIM_ROLE_GRP_V AS 
SELECT r.NMSPC_CD
, r.ROLE_NM
, r.role_id
, g.NMSPC_CD AS grp_nmspc_cd
, g.GRP_NM
, rm.ROLE_MBR_ID
, a.NM AS attr_nm
, d.ATTR_VAL AS attr_val
FROM KRIM_ROLE_MBR_T rm
LEFT JOIN KRIM_ROLE_T r
ON r.ROLE_ID = rm.ROLE_ID
LEFT JOIN KRIM_GRP_T g
ON g.GRP_ID = rm.MBR_ID
LEFT OUTER JOIN KRIM_ROLE_MBR_ATTR_DATA_T d
ON d.role_mbr_id = rm.ROLE_MBR_ID
LEFT OUTER JOIN KRIM_ATTR_DEFN_T a
ON a.KIM_ATTR_DEFN_ID = d.KIM_ATTR_DEFN_ID
WHERE rm.MBR_TYP_CD = 'G'
ORDER BY nmspc_cd, role_nm, grp_nmspc_cd, grp_nm, role_mbr_id, attr_nm
 
/

-- -----------------------------------------------------------------------
-- KRIM_ROLE_PERM_V
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW KRIM_ROLE_PERM_V AS 
SELECT r.NMSPC_CD
, r.ROLE_NM
, r.role_id
, pt.NMSPC_CD AS tmpl_nmspc_cd
, pt.NM AS tmpl_nm
, pt.PERM_TMPL_ID
, p.NMSPC_CD AS perm_nmpsc_cd
, p.NM AS perm_nm
, p.PERM_ID
, a.NM AS attr_nm
, ad.ATTR_VAL AS attr_val
FROM KRIM_PERM_T p
LEFT JOIN KRIM_PERM_TMPL_T pt
ON p.PERM_TMPL_ID = pt.PERM_TMPL_ID
LEFT OUTER JOIN KRIM_PERM_ATTR_DATA_T ad
ON p.PERM_ID = ad.perm_id
LEFT OUTER JOIN KRIM_ATTR_DEFN_T a
ON ad.KIM_ATTR_DEFN_ID = a.KIM_ATTR_DEFN_ID
LEFT OUTER JOIN KRIM_ROLE_PERM_T rp
ON rp.PERM_ID = p.PERM_ID
LEFT OUTER JOIN KRIM_ROLE_T r
ON rp.ROLE_ID = r.ROLE_ID
ORDER BY NMSPC_CD, role_nm, tmpl_nmspc_cd, tmpl_nm, perm_id, attr_nm
 
/

-- -----------------------------------------------------------------------
-- KRIM_ROLE_PRNCPL_V
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW KRIM_ROLE_PRNCPL_V AS 
SELECT r.NMSPC_CD
, r.ROLE_NM
, r.ROLE_ID
, p.PRNCPL_NM
, p.PRNCPL_ID
, en.FIRST_NM
, en.LAST_NM
, rm.ROLE_MBR_ID
, ad.NM AS attr_nm
, rmad.ATTR_VAL AS attr_val
FROM KRIM_ROLE_T r
LEFT OUTER JOIN KRIM_ROLE_MBR_T rm
ON r.ROLE_ID = rm.ROLE_ID
LEFT OUTER JOIN KRIM_ROLE_MBR_ATTR_DATA_T rmad
ON rm.ROLE_MBR_ID = rmad.role_mbr_id
LEFT OUTER JOIN KRIM_ATTR_DEFN_T ad
ON rmad.KIM_ATTR_DEFN_ID = ad.KIM_ATTR_DEFN_ID
LEFT OUTER JOIN KRIM_PRNCPL_T p
ON rm.MBR_ID = p.PRNCPL_ID
AND rm.mbr_typ_cd = 'P'
LEFT OUTER JOIN KRIM_ENTITY_NM_T en
ON p.ENTITY_ID = en.ENTITY_ID
WHERE (en.DFLT_IND = 'Y')
ORDER BY nmspc_cd, role_nm, prncpl_nm, rm.ROLE_MBR_ID, attr_nm
 
/

-- -----------------------------------------------------------------------
-- KRIM_ROLE_ROLE_V
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW KRIM_ROLE_ROLE_V AS 
SELECT r.NMSPC_CD
, r.ROLE_NM
, r.role_id
, mr.NMSPC_CD AS mbr_role_nmspc_cd
, mr.role_NM AS mbr_role_nm
, mr.role_id AS mbr_role_id
, rm.role_mbr_id
, a.NM AS attr_nm
, d.ATTR_VAL AS attr_val
FROM KRIM_ROLE_MBR_T rm
LEFT JOIN KRIM_ROLE_T r
ON r.ROLE_ID = rm.ROLE_ID
LEFT JOIN KRIM_role_T mr
ON mr.role_ID = rm.MBR_ID
LEFT OUTER JOIN KRIM_ROLE_MBR_ATTR_DATA_T d
ON d.role_mbr_id = rm.ROLE_MBR_ID
LEFT OUTER JOIN KRIM_ATTR_DEFN_T a
ON a.KIM_ATTR_DEFN_ID = d.KIM_ATTR_DEFN_ID
WHERE rm.MBR_TYP_CD = 'R'
ORDER BY nmspc_cd, role_nm, mbr_role_nmspc_cd, mbr_role_nm, role_mbr_id, attr_nm
 
/

-- -----------------------------------------------------------------------
-- KRIM_ROLE_V
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW KRIM_ROLE_V AS 
SELECT r.NMSPC_CD
, r.ROLE_NM
, r.ROLE_ID
, t.nm AS role_typ_nm
, t.SRVC_NM
, t.KIM_TYP_ID
FROM KRIM_ROLE_T r
, KRIM_TYP_T t
WHERE t.KIM_TYP_ID = r.KIM_TYP_ID
AND r.ACTV_IND = 'Y'
ORDER BY nmspc_cd
, role_nm
 
/

-- -----------------------------------------------------------------------
-- KRIM_RSP_ATTR_V
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW KRIM_RSP_ATTR_V AS 
SELECT
krim_typ_t.NM AS responsibility_type_name
, KRIM_rsp_TMPL_T.NM AS rsp_TEMPLATE_NAME
, KRIM_rsp_T.nmspc_cd AS rsp_namespace_code
, KRIM_rsp_T.NM AS rsp_NAME
, krim_rsp_t.RSP_ID AS rsp_id
, KRIM_ATTR_DEFN_T.NM AS attribute_name
, KRIM_rsp_ATTR_DATA_T.ATTR_VAL AS attribute_value
FROM KRIM_rsp_T KRIM_rsp_T
INNER JOIN KRIM_rsp_ATTR_DATA_T KRIM_rsp_ATTR_DATA_T
ON KRIM_rsp_T.rsp_ID = KRIM_rsp_ATTR_DATA_T.rsp_id
INNER JOIN KRIM_ATTR_DEFN_T KRIM_ATTR_DEFN_T
ON KRIM_rsp_ATTR_DATA_T.KIM_ATTR_DEFN_ID = KRIM_ATTR_DEFN_T.KIM_ATTR_DEFN_ID
INNER JOIN KRIM_rsp_TMPL_T KRIM_rsp_TMPL_T
ON KRIM_rsp_T.rsp_TMPL_ID = KRIM_rsp_TMPL_T.rsp_TMPL_ID
INNER JOIN KRIM_TYP_T KRIM_TYP_T
ON KRIM_rsp_TMPL_T.KIM_TYP_ID = KRIM_TYP_T.KIM_TYP_ID
ORDER BY rsp_TEMPLATE_NAME, rsp_NAME, attribute_name
 
/

-- -----------------------------------------------------------------------
-- KRIM_RSP_ROLE_ACTN_V
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW KRIM_RSP_ROLE_ACTN_V AS 
select
rsp.nmspc_cd as rsp_nmspc_cd
, rsp.rsp_id
, r.NMSPC_CD
, r.ROLE_NM
, rr.ROLE_ID
, rm.MBR_ID
, rm.MBR_TYP_CD
, rm.ROLE_MBR_ID
, actn.ACTN_TYP_CD
, actn.ACTN_PLCY_CD
, actn.FRC_ACTN
, actn.PRIORITY_NBR
from krim_rsp_t rsp
left join krim_rsp_tmpl_t rspt
on rsp.rsp_tmpl_id = rspt.rsp_tmpl_id
left outer join krim_role_rsp_t rr
on rr.rsp_id = rsp.rsp_id
left outer join KRIM_ROLE_MBR_T rm
ON rm.ROLE_ID = rr.ROLE_ID
left outer join KRIM_ROLE_RSP_ACTN_T actn
ON actn.ROLE_RSP_ID = rr.ROLE_RSP_ID
AND (actn.ROLE_MBR_ID = rm.ROLE_MBR_ID OR actn.ROLE_MBR_ID = '*')
left outer join krim_role_t r
on rr.role_id = r.role_id
order by rsp_nmspc_cd
, rsp_id
, role_id
, role_mbr_id
 
/

-- -----------------------------------------------------------------------
-- KRIM_RSP_ROLE_V
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW KRIM_RSP_ROLE_V AS 
select
rspt.nmspc_cd as rsp_tmpl_nmspc_cd
, rspt.nm as rsp_tmpl_nm
, rsp.nmspc_cd as rsp_nmspc_cd
, rsp.nm as rsp_nm
, rsp.rsp_id
, a.nm as attr_nm
, d.attr_val
, r.NMSPC_CD
, r.ROLE_NM
, rr.ROLE_ID
from krim_rsp_t rsp
left join krim_rsp_tmpl_t rspt
on rsp.rsp_tmpl_id = rspt.rsp_tmpl_id
left outer join krim_rsp_attr_data_t d
on rsp.rsp_id = d.rsp_id
left outer join krim_attr_defn_t a
on d.kim_attr_defn_id = a.kim_attr_defn_id
left outer join krim_role_rsp_t rr
on rr.rsp_id = rsp.rsp_id
left outer join krim_role_t r
on rr.role_id = r.role_id
order by rsp_tmpl_nmspc_cd, rsp_tmpl_nm, rsp_nmspc_cd, rsp_nm, rsp_id, attr_nm, attr_val
 
/

-- -----------------------------------------------------------------------
-- OSP$ABSTRACT_TYPE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$ABSTRACT_TYPE AS 
select ABSTRACT_TYPE_CODE, DESCRIPTION, UPDATE_TIMESTAMP, UPDATE_USER
	from ABSTRACT_TYPE
 
/

-- -----------------------------------------------------------------------
-- OSP$ACCOUNT_TYPE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$ACCOUNT_TYPE AS 
SELECT
	ACCOUNT_TYPE_CODE,
	DESCRIPTION,
	UPDATE_TIMESTAMP,
	UPDATE_USER
FROM ACCOUNT_TYPE
 
/

-- -----------------------------------------------------------------------
-- OSP$ACTIVITY_TYPE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$ACTIVITY_TYPE AS 
select ACTIVITY_TYPE_CODE, DESCRIPTION, UPDATE_TIMESTAMP, UPDATE_USER
	from ACTIVITY_TYPE
 
/

-- -----------------------------------------------------------------------
-- OSP$AFFILIATION_TYPE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$AFFILIATION_TYPE AS 
SELECT 
	AFFILIATION_TYPE_CODE, 
	DESCRIPTION, 
	UPDATE_TIMESTAMP, 
	UPDATE_USER
FROM AFFILIATION_TYPE
 
/

-- -----------------------------------------------------------------------
-- OSP$ARG_VALUE_LOOKUP
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$ARG_VALUE_LOOKUP AS 
SELECT
    ARGUMENT_NAME,
    VALUE,
    DESCRIPTION,
    UPDATE_TIMESTAMP,
    UPDATE_USER
FROM ARG_VALUE_LOOKUP
 
/

-- -----------------------------------------------------------------------
-- OSP$AWARD
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$AWARD AS 
select
  AWARD_NUMBER,
  SEQUENCE_NUMBER,
  MODIFICATION_NUMBER,
  SPONSOR_AWARD_NUMBER,
  STATUS_CODE,
  TEMPLATE_CODE,
  AWARD_EXECUTION_DATE,
  AWARD_EFFECTIVE_DATE,
  BEGIN_DATE,
  SPONSOR_CODE,
  ACCOUNT_NUMBER,
  APPRVD_EQUIPMENT_INDICATOR,
  APPRVD_FOREIGN_TRIP_INDICATOR,
  APPRVD_SUBCONTRACT_INDICATOR,
  PAYMENT_SCHEDULE_INDICATOR,
  IDC_INDICATOR,
  TRANSFER_SPONSOR_INDICATOR,
  COST_SHARING_INDICATOR,
  UPDATE_TIMESTAMP,
  UPDATE_USER,
  SPECIAL_REVIEW_INDICATOR,
  SCIENCE_CODE_INDICATOR,
  NSF_CODE
from award
 
/

-- -----------------------------------------------------------------------
-- OSP$AWARD_AMOUNT_INFO
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$AWARD_AMOUNT_INFO AS 
SELECT
ANTICIPATED_CHANGE_DIRECT,
ANTICIPATED_CHANGE_INDIRECT,
ANTICIPATED_TOTAL_DIRECT,
ANTICIPATED_TOTAL_INDIRECT,
OBLIGATED_TOTAL_DIRECT,
OBLIGATED_TOTAL_INDIRECT,
VER_NBR,
OBJ_ID,
TNM_DOCUMENT_NUMBER,
AWARD_AMOUNT_INFO_ID,
AWARD_ID,
AWARD_NUMBER MIT_AWARD_NUMBER,
SEQUENCE_NUMBER,
ANTICIPATED_TOTAL_AMOUNT,
ANT_DISTRIBUTABLE_AMOUNT,
FINAL_EXPIRATION_DATE,
CURRENT_FUND_EFFECTIVE_DATE,
AMOUNT_OBLIGATED_TO_DATE,
OBLI_DISTRIBUTABLE_AMOUNT,
OBLIGATION_EXPIRATION_DATE,
TRANSACTION_ID,
ENTRY_TYPE,
EOM_PROCESS_FLAG,
UPDATE_TIMESTAMP,
UPDATE_USER,
ANTICIPATED_CHANGE,
OBLIGATED_CHANGE,
OBLIGATED_CHANGE_DIRECT,
OBLIGATED_CHANGE_INDIRECT FROM AWARD_AMOUNT_INFO
 
/

-- -----------------------------------------------------------------------
-- OSP$AWARD_AMT_FNA_DISTRIBUTION
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$AWARD_AMT_FNA_DISTRIBUTION AS 
SELECT
	AWARD_NUMBER MIT_AWARD_NUMBER,
	SEQUENCE_NUMBER SEQUENCE_NUMBER,
	AMOUNT_SEQUENCE_NUMBER AMOUNT_SEQUENCE_NUMBER,
	BUDGET_PERIOD BUDGET_PERIOD,
	START_DATE START_DATE,
	END_DATE END_DATE,
	DIRECT_COST DIRECT_COST,
	INDIRECT_COST INDIRECT_COST,
	UPDATE_TIMESTAMP UPDATE_TIMESTAMP,
	UPDATE_USER UPDATE_USER
FROM AWARD_AMT_FNA_DISTRIBUTION
 
/

-- -----------------------------------------------------------------------
-- OSP$AWARD_APPROVED_SUBCONTRACT
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$AWARD_APPROVED_SUBCONTRACT AS 
SELECT 
	AWARD_NUMBER MIT_AWARD_NUMBER, 
	SEQUENCE_NUMBER SEQUENCE_NUMBER,
	ORGANIZATION_NAME SUBCONTRACTOR_NAME,
	AMOUNT AMOUNT,
	UPDATE_TIMESTAMP UPDATE_TIMESTAMP, 
	UPDATE_USER UPDATE_USER
FROM AWARD_APPROVED_SUBAWARDS
 
/

-- -----------------------------------------------------------------------
-- OSP$AWARD_CLOSEOUT
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$AWARD_CLOSEOUT AS 
SELECT A.AWARD_NUMBER MIT_AWARD_NUMBER,
A.SEQUENCE_NUMBER SEQUENCE_NUMBER,
C.FINAL_SUBMISSION_DATE FINAL_INV_SUBMISSION_DATE,
D.FINAL_SUBMISSION_DATE FINAL_TECH_SUBMISSION_DATE,
E.FINAL_SUBMISSION_DATE FINAL_PATENT_SUBMISSION_DATE,
F.FINAL_SUBMISSION_DATE FINAL_PROP_SUBMISSION_DATE,
B.ARCHIVE_LOCATION ARCHIVE_LOCATION,
B.CLOSEOUT_DATE CLOSEOUT_DATE,
A.UPDATE_TIMESTAMP UPDATE_TIMESTAMP,
A.UPDATE_USER UPDATE_USER
FROM AWARD_CLOSEOUT A, 
AWARD B,
VIEW_CO_C C,
VIEW_CO_D D,
VIEW_CO_E E,
VIEW_CO_F F
WHERE A.AWARD_NUMBER = B.AWARD_NUMBER AND A.SEQUENCE_NUMBER = B.SEQUENCE_NUMBER
 
/

-- -----------------------------------------------------------------------
-- OSP$AWARD_COMMENTS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$AWARD_COMMENTS AS 
SELECT 
	AWARD_NUMBER MIT_AWARD_NUMBER, 
	SEQUENCE_NUMBER SEQUENCE_NUMBER,
	COMMENT_TYPE_CODE COMMENT_CODE,
	CHECKLIST_PRINT_FLAG CHECKLIST_PRINT_FLAG, 
	COMMENTS COMMENTS,
	UPDATE_TIMESTAMP UPDATE_TIMESTAMP, 
	UPDATE_USER UPDATE_USER
FROM AWARD_COMMENT
 
/

-- -----------------------------------------------------------------------
-- OSP$AWARD_COST_SHARING
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$AWARD_COST_SHARING AS 
SELECT 
	AWARD_NUMBER MIT_AWARD_NUMBER, 
	SEQUENCE_NUMBER SEQUENCE_NUMBER,
	FISCAL_YEAR FISCAL_YEAR,
	COST_SHARE_PERCENTAGE COST_SHARING_PERCENTAGE, 
	COST_SHARE_TYPE_CODE COST_SHARING_TYPE_CODE,
	SOURCE SOURCE_ACCOUNT, 
	DESTINATION DESTINATION_ACCOUNT, 
	COMMITMENT_AMOUNT AMOUNT,
	UPDATE_TIMESTAMP UPDATE_TIMESTAMP, 
	UPDATE_USER UPDATE_USER
FROM AWARD_COST_SHARE
 
/

-- -----------------------------------------------------------------------
-- OSP$AWARD_DOCUMENT_TERMS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$AWARD_DOCUMENT_TERMS AS 
SELECT 
	AWARD_NUMBER MIT_AWARD_NUMBER, 
	SEQUENCE_NUMBER SEQUENCE_NUMBER,
	SPONSOR_TERM_ID EQUIPMENT_APPROVAL_CODE,
	UPDATE_TIMESTAMP UPDATE_TIMESTAMP, 
	UPDATE_USER UPDATE_USER
FROM AWARD_SPONSOR_TERM where exists (select sponsor_term_type_code from sponsor_term where AWARD_SPONSOR_TERM.SPONSOR_TERM_ID = sponsor_term.SPONSOR_TERM_ID and sponsor_term_type_code='6')
 
/

-- -----------------------------------------------------------------------
-- OSP$AWARD_EQUIPMENT_TERMS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$AWARD_EQUIPMENT_TERMS AS 
SELECT 
	AWARD_NUMBER MIT_AWARD_NUMBER, 
	SEQUENCE_NUMBER SEQUENCE_NUMBER,
	SPONSOR_TERM_ID EQUIPMENT_APPROVAL_CODE,
	UPDATE_TIMESTAMP UPDATE_TIMESTAMP, 
	UPDATE_USER UPDATE_USER
FROM AWARD_SPONSOR_TERM where exists (select sponsor_term_type_code from sponsor_term where AWARD_SPONSOR_TERM.SPONSOR_TERM_ID = sponsor_term.SPONSOR_TERM_ID and sponsor_term_type_code='1')
 
/

-- -----------------------------------------------------------------------
-- OSP$AWARD_HEADER
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$AWARD_HEADER AS 
select 
AWARD_NUMBER, 
SEQUENCE_NUMBER, 
PROPOSAL_NUMBER, 
TITLE,
AWARD_TYPE_CODE,
SPECIAL_EB_RATE_OFF_CAMPUS, 
SPECIAL_EB_RATE_ON_CAMPUS,
PRE_AWARD_AUTHORIZED_AMOUNT, 
PRE_AWARD_EFFECTIVE_DATE, 
CFDA_NUMBER, 
DFAFS_NUMBER, 
SUB_PLAN_FLAG,
PROCUREMENT_PRIORITY_CODE, 
PRIME_SPONSOR_CODE,
NON_COMPETING_CONT_PRPSL_DUE, 
COMPETING_RENEWAL_PRPSL_DUE, 
BASIS_OF_PAYMENT_CODE, 
METHOD_OF_PAYMENT_CODE,
PAYMENT_INVOICE_FREQ_CODE, 
INVOICE_NUMBER_OF_COPIES, 
FINAL_INVOICE_DUE, 
ACTIVITY_TYPE_CODE, 
ACCOUNT_TYPE_CODE, 
UPDATE_TIMESTAMP, 
UPDATE_USER
FROM AWARD
 
/

-- -----------------------------------------------------------------------
-- OSP$AWARD_HIERARCHY
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$AWARD_HIERARCHY AS 
SELECT
    ROOT_AWARD_NUMBER ROOT_MIT_AWARD_NUMBER,
    AWARD_NUMBER MIT_AWARD_NUMBER,
    PARENT_AWARD_NUMBER PARENT_MIT_AWARD_NUMBER,
    UPDATE_TIMESTAMP,
    UPDATE_USER
FROM AWARD_HIERARCHY
 
/

-- -----------------------------------------------------------------------
-- OSP$AWARD_IDC_RATE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$AWARD_IDC_RATE AS 
SELECT 
	AWARD_NUMBER MIT_AWARD_NUMBER, 
	SEQUENCE_NUMBER SEQUENCE_NUMBER, 
	APPLICABLE_IDC_RATE APPLICABLE_IDC_RATE, 
	IDC_RATE_TYPE_CODE IDC_RATE_TYPE_CODE, 
	FISCAL_YEAR FISCAL_YEAR, 
	ON_CAMPUS_FLAG ON_CAMPUS_FLAG, 
	UNDERRECOVERY_OF_IDC UNDERRECOVERY_OF_IDC, 
	SOURCE_ACCOUNT SOURCE_ACCOUNT, 
	DESTINATION_ACCOUNT DESTINATION_ACCOUNT, 
	START_DATE START_DATE, 
	END_DATE END_DATE, 
	UPDATE_TIMESTAMP UPDATE_TIMESTAMP, 
	UPDATE_USER UPDATE_USER
FROM AWARD_IDC_RATE
 
/

-- -----------------------------------------------------------------------
-- OSP$AWARD_INVENTION_TERMS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$AWARD_INVENTION_TERMS AS 
SELECT 
	AWARD_NUMBER MIT_AWARD_NUMBER, 
	SEQUENCE_NUMBER SEQUENCE_NUMBER,
	SPONSOR_TERM_ID EQUIPMENT_APPROVAL_CODE,
	UPDATE_TIMESTAMP UPDATE_TIMESTAMP, 
	UPDATE_USER UPDATE_USER
FROM AWARD_SPONSOR_TERM where exists (select sponsor_term_type_code from sponsor_term where AWARD_SPONSOR_TERM.SPONSOR_TERM_ID = sponsor_term.SPONSOR_TERM_ID and sponsor_term_type_code='2')
 
/

-- -----------------------------------------------------------------------
-- OSP$AWARD_PAYMENT_SCHEDULE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$AWARD_PAYMENT_SCHEDULE AS 
SELECT 
	AWARD_NUMBER MIT_AWARD_NUMBER, 
	SEQUENCE_NUMBER, 
	DUE_DATE, 
	AMOUNT, 
	UPDATE_TIMESTAMP, 
	UPDATE_USER, 
	SUBMIT_DATE, 
	SUBMITTED_BY, 
	INVOICE_NUMBER, 
	STATUS_DESCRIPTION
FROM AWARD_PAYMENT_SCHEDULE
 
/

-- -----------------------------------------------------------------------
-- OSP$AWARD_PRIOR_APPROVAL_TERMS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$AWARD_PRIOR_APPROVAL_TERMS AS 
SELECT 
	AWARD_NUMBER MIT_AWARD_NUMBER, 
	SEQUENCE_NUMBER SEQUENCE_NUMBER,
	SPONSOR_TERM_ID EQUIPMENT_APPROVAL_CODE,
	UPDATE_TIMESTAMP UPDATE_TIMESTAMP, 
	UPDATE_USER UPDATE_USER
FROM AWARD_SPONSOR_TERM where exists (select sponsor_term_type_code from sponsor_term where AWARD_SPONSOR_TERM.SPONSOR_TERM_ID = sponsor_term.SPONSOR_TERM_ID and sponsor_term_type_code='3')
 
/

-- -----------------------------------------------------------------------
-- OSP$AWARD_PROPERTY_TERMS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$AWARD_PROPERTY_TERMS AS 
SELECT 
	AWARD_NUMBER MIT_AWARD_NUMBER, 
	SEQUENCE_NUMBER SEQUENCE_NUMBER,
	SPONSOR_TERM_ID EQUIPMENT_APPROVAL_CODE,
	UPDATE_TIMESTAMP UPDATE_TIMESTAMP, 
	UPDATE_USER UPDATE_USER
FROM AWARD_SPONSOR_TERM where exists (select sponsor_term_type_code from sponsor_term where AWARD_SPONSOR_TERM.SPONSOR_TERM_ID = sponsor_term.SPONSOR_TERM_ID and sponsor_term_type_code='4')
 
/

-- -----------------------------------------------------------------------
-- OSP$AWARD_PUBLICATION_TERMS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$AWARD_PUBLICATION_TERMS AS 
SELECT 
	AWARD_NUMBER MIT_AWARD_NUMBER, 
	SEQUENCE_NUMBER SEQUENCE_NUMBER,
	SPONSOR_TERM_ID EQUIPMENT_APPROVAL_CODE,
	UPDATE_TIMESTAMP UPDATE_TIMESTAMP, 
	UPDATE_USER UPDATE_USER
FROM AWARD_SPONSOR_TERM where exists (select sponsor_term_type_code from sponsor_term where AWARD_SPONSOR_TERM.SPONSOR_TERM_ID = sponsor_term.SPONSOR_TERM_ID and sponsor_term_type_code='5')
 
/

-- -----------------------------------------------------------------------
-- OSP$AWARD_REPORT_TERMS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$AWARD_REPORT_TERMS AS 
SELECT
AWARD_NUMBER MIT_AWARD_NUMBER,
SEQUENCE_NUMBER,
REPORT_CLASS_CODE,
REPORT_CODE,
FREQUENCY_CODE,
FREQUENCY_BASE_CODE,
OSP_DISTRIBUTION_CODE,
CONTACT_TYPE_CODE,
ROLODEX_ID,
DUE_DATE,
NUMBER_OF_COPIES,
A.UPDATE_TIMESTAMP,
A.UPDATE_USER
FROM AWARD_REPORT_TERMS A, AWARD_REP_TERMS_RECNT B WHERE A.AWARD_REPORT_TERMS_ID = B.AWARD_REPORT_TERMS_ID
 
/

-- -----------------------------------------------------------------------
-- OSP$AWARD_RIGHTS_IN_DATA_TERMS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$AWARD_RIGHTS_IN_DATA_TERMS AS 
SELECT 
	AWARD_NUMBER MIT_AWARD_NUMBER, 
	SEQUENCE_NUMBER SEQUENCE_NUMBER,
	SPONSOR_TERM_ID EQUIPMENT_APPROVAL_CODE,
	UPDATE_TIMESTAMP UPDATE_TIMESTAMP, 
	UPDATE_USER UPDATE_USER
FROM AWARD_SPONSOR_TERM where exists (select sponsor_term_type_code from sponsor_term where AWARD_SPONSOR_TERM.SPONSOR_TERM_ID = sponsor_term.SPONSOR_TERM_ID and sponsor_term_type_code='7')
 
/

-- -----------------------------------------------------------------------
-- OSP$AWARD_SCIENCE_CODE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$AWARD_SCIENCE_CODE AS 
SELECT 
	B.AWARD_NUMBER, 
	B.SEQUENCE_NUMBER, 
	A.SPECIAL_REVIEW_NUMBER, 
	A.SPECIAL_REVIEW_CODE, 
	A.APPROVAL_TYPE_CODE, 
	A.PROTOCOL_NUMBER, 
	A.APPLICATION_DATE, 
	A.APPROVAL_DATE, 
	A.COMMENTS, 
	A.UPDATE_USER, 
	A.UPDATE_TIMESTAMP 
	FROM AWARD_SPECIAL_REVIEW A,AWARD B
	where A.AWARD_ID=B.AWARD_ID
 
/

-- -----------------------------------------------------------------------
-- OSP$AWARD_STATUS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$AWARD_STATUS AS 
SELECT
	STATUS_CODE,
	DESCRIPTION,
	UPDATE_TIMESTAMP,
	UPDATE_USER
FROM AWARD_STATUS
 
/

-- -----------------------------------------------------------------------
-- OSP$AWARD_SUBCONTRACT_TERMS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$AWARD_SUBCONTRACT_TERMS AS 
SELECT 
	AWARD_NUMBER MIT_AWARD_NUMBER, 
	SEQUENCE_NUMBER SEQUENCE_NUMBER,
	SPONSOR_TERM_ID EQUIPMENT_APPROVAL_CODE,
	UPDATE_TIMESTAMP UPDATE_TIMESTAMP, 
	UPDATE_USER UPDATE_USER
FROM AWARD_SPONSOR_TERM where exists (select sponsor_term_type_code from sponsor_term where AWARD_SPONSOR_TERM.SPONSOR_TERM_ID = sponsor_term.SPONSOR_TERM_ID and sponsor_term_type_code='8')
 
/

-- -----------------------------------------------------------------------
-- OSP$AWARD_TRANSACTION_TYPE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$AWARD_TRANSACTION_TYPE AS 
SELECT
    AWARD_TRANSACTION_TYPE_CODE,
    DESCRIPTION,
    UPDATE_TIMESTAMP,
    UPDATE_USER,
    SHOW_IN_ACTION_SUMMARY
FROM AWARD_TRANSACTION_TYPE
 
/

-- -----------------------------------------------------------------------
-- OSP$AWARD_TRAVEL_TERMS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$AWARD_TRAVEL_TERMS AS 
SELECT 
	AWARD_NUMBER MIT_AWARD_NUMBER, 
	SEQUENCE_NUMBER SEQUENCE_NUMBER,
	SPONSOR_TERM_ID EQUIPMENT_APPROVAL_CODE,
	UPDATE_TIMESTAMP UPDATE_TIMESTAMP, 
	UPDATE_USER UPDATE_USER
FROM AWARD_SPONSOR_TERM where exists (select sponsor_term_type_code from sponsor_term where AWARD_SPONSOR_TERM.SPONSOR_TERM_ID = sponsor_term.SPONSOR_TERM_ID and sponsor_term_type_code='9')
 
/

-- -----------------------------------------------------------------------
-- OSP$AWARD_TYPE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$AWARD_TYPE AS 
SELECT
	AWARD_TYPE_CODE,
	DESCRIPTION,
	UPDATE_TIMESTAMP,
	UPDATE_USER
FROM AWARD_TYPE
 
/

-- -----------------------------------------------------------------------
-- OSP$BASIS_OF_PAYMENT
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$BASIS_OF_PAYMENT AS 
SELECT
	BASIS_OF_PAYMENT_CODE,
	DESCRIPTION,
	UPDATE_TIMESTAMP,
	UPDATE_USER
FROM AWARD_BASIS_OF_PAYMENT
 
/

-- -----------------------------------------------------------------------
-- OSP$BUDGET
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$BUDGET AS 
select PROPOSAL_NUMBER,VERSION_NUMBER,START_DATE,END_DATE,TOTAL_COST,TOTAL_DIRECT_COST,
	TOTAL_INDIRECT_COST,COST_SHARING_AMOUNT,UNDERRECOVERY_AMOUNT,RESIDUAL_FUNDS,TOTAL_COST_LIMIT,
	OH_RATE_CLASS_CODE,OH_RATE_TYPE_CODE,COMMENTS,FINAL_VERSION_FLAG,UPDATE_TIMESTAMP,
	UPDATE_USER,UR_RATE_CLASS_CODE,MODULAR_BUDGET_FLAG
	from BUDGET
 
/

-- -----------------------------------------------------------------------
-- OSP$BUDGET_CATEGORY
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$BUDGET_CATEGORY AS 
select BUDGET_CATEGORY_CODE,DESCRIPTION,CATEGORY_TYPE,UPDATE_TIMESTAMP,UPDATE_USER
	from BUDGET_CATEGORY
 
/

-- -----------------------------------------------------------------------
-- OSP$BUDGET_CATEGORY_MAPPING
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$BUDGET_CATEGORY_MAPPING AS 
select MAPPING_NAME,TARGET_CATEGORY_CODE,COEUS_CATEGORY_CODE,UPDATE_TIMESTAMP,UPDATE_USER
	from BUDGET_CATEGORY_MAPPING
 
/

-- -----------------------------------------------------------------------
-- OSP$BUDGET_CATEGORY_MAPS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$BUDGET_CATEGORY_MAPS AS 
select MAPPING_NAME,TARGET_CATEGORY_CODE,DESCRIPTION,CATEGORY_TYPE,UPDATE_TIMESTAMP,UPDATE_USER
	from BUDGET_CATEGORY_MAPS
 
/

-- -----------------------------------------------------------------------
-- OSP$BUDGET_DETAILS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$BUDGET_DETAILS AS 
select PROPOSAL_NUMBER,VERSION_NUMBER,BUDGET_PERIOD,LINE_ITEM_NUMBER,BUDGET_CATEGORY_CODE,COST_ELEMENT,
	LINE_ITEM_DESCRIPTION,BASED_ON_LINE_ITEM,LINE_ITEM_SEQUENCE,START_DATE,END_DATE,
	LINE_ITEM_COST,COST_SHARING_AMOUNT,UNDERRECOVERY_AMOUNT,ON_OFF_CAMPUS_FLAG,APPLY_IN_RATE_FLAG,
	BUDGET_JUSTIFICATION,UPDATE_TIMESTAMP,UPDATE_USER,QUANTITY
	from BUDGET_DETAILS
 
/

-- -----------------------------------------------------------------------
-- OSP$BUDGET_DETAILS_CAL_AMOUNTS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$BUDGET_DETAILS_CAL_AMOUNTS AS 
select "PROPOSAL_NUMBER","VERSION_NUMBER","BUDGET_PERIOD","LINE_ITEM_NUMBER","RATE_CLASS_CODE","RATE_TYPE_CODE","APPLY_RATE_FLAG","CALCULATED_COST","CALCULATED_COST_SHARING","UPDATE_TIMESTAMP","UPDATE_USER","VER_NBR","OBJ_ID","BUDGET_PERIOD_NUMBER"
	from BUDGET_DETAILS_CAL_AMTS
 
/

-- -----------------------------------------------------------------------
-- OSP$BUDGET_DETAILS_CAL_AMTS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$BUDGET_DETAILS_CAL_AMTS AS 
select PROPOSAL_NUMBER,VERSION_NUMBER,BUDGET_PERIOD,LINE_ITEM_NUMBER,RATE_CLASS_CODE,RATE_TYPE_CODE,
	APPLY_RATE_FLAG,CALCULATED_COST,CALCULATED_COST_SHARING,UPDATE_TIMESTAMP,UPDATE_USER
	from BUDGET_DETAILS_CAL_AMTS
 
/

-- -----------------------------------------------------------------------
-- OSP$BUDGET_JUSTIFICATION
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$BUDGET_JUSTIFICATION AS 
select null,null,null,null,null
	from dual
 
/

-- -----------------------------------------------------------------------
-- OSP$BUDGET_MODULAR
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$BUDGET_MODULAR AS 
select PROPOSAL_NUMBER, VERSION_NUMBER, BUDGET_PERIOD, DIRECT_COST_LESS_CONSOR_FNA, CONSORTIUM_FNA, TOTAL_DIRECT_COST, UPDATE_TIMESTAMP, UPDATE_USER
	from BUDGET_MODULAR
 
/

-- -----------------------------------------------------------------------
-- OSP$BUDGET_MODULAR_IDC
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$BUDGET_MODULAR_IDC AS 
select PROPOSAL_NUMBER, VERSION_NUMBER, BUDGET_PERIOD, RATE_NUMBER, DESCRIPTION, IDC_RATE, IDC_BASE, FUNDS_REQUESTED, UPDATE_TIMESTAMP, UPDATE_USER
	from budget_modular_idc
 
/

-- -----------------------------------------------------------------------
-- OSP$BUDGET_PERIODS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$BUDGET_PERIODS AS 
select PROPOSAL_NUMBER,VERSION_NUMBER,BUDGET_PERIOD,START_DATE,END_DATE,TOTAL_COST,
	TOTAL_DIRECT_COST,TOTAL_INDIRECT_COST,COST_SHARING_AMOUNT,UNDERRECOVERY_AMOUNT,TOTAL_COST_LIMIT,
	COMMENTS,UPDATE_TIMESTAMP,UPDATE_USER
	from BUDGET_PERIODS
 
/

-- -----------------------------------------------------------------------
-- OSP$BUDGET_PERSONNEL_CAL_AMTS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$BUDGET_PERSONNEL_CAL_AMTS AS 
select PROPOSAL_NUMBER,VERSION_NUMBER,BUDGET_PERIOD,LINE_ITEM_NUMBER,PERSON_NUMBER,RATE_CLASS_CODE,
	RATE_TYPE_CODE,APPLY_RATE_FLAG,CALCULATED_COST,CALCULATED_COST_SHARING,UPDATE_TIMESTAMP,
	UPDATE_USER
	from BUDGET_PERSONNEL_CAL_AMTS
 
/

-- -----------------------------------------------------------------------
-- OSP$BUDGET_PERSONNEL_DETAILS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$BUDGET_PERSONNEL_DETAILS AS 
select PROPOSAL_NUMBER,VERSION_NUMBER,BUDGET_PERIOD,LINE_ITEM_NUMBER,PERSON_NUMBER,PERSON_ID,
	JOB_CODE,START_DATE,END_DATE,PERIOD_TYPE,LINE_ITEM_DESCRIPTION,
	SEQUENCE_NUMBER,SALARY_REQUESTED,PERCENT_CHARGED,PERCENT_EFFORT,COST_SHARING_PERCENT,
	COST_SHARING_AMOUNT,UNDERRECOVERY_AMOUNT,ON_OFF_CAMPUS_FLAG,APPLY_IN_RATE_FLAG,BUDGET_JUSTIFICATION,
	UPDATE_TIMESTAMP,UPDATE_USER
	from BUDGET_PERSONNEL_DETAILS
 
/

-- -----------------------------------------------------------------------
-- OSP$BUDGET_PERSONS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$BUDGET_PERSONS AS 
select PROPOSAL_NUMBER,VERSION_NUMBER,PERSON_ID,JOB_CODE,EFFECTIVE_DATE,CALCULATION_BASE,
	APPOINTMENT_TYPE.DESCRIPTION APPOINTMENT_TYPE,PERSON_NAME,NON_EMPLOYEE_FLAG,BUDGET_PERSONS.UPDATE_TIMESTAMP,BUDGET_PERSONS.UPDATE_USER
	from BUDGET_PERSONS,APPOINTMENT_TYPE
	where BUDGET_PERSONS.APPOINTMENT_TYPE_CODE = APPOINTMENT_TYPE.APPOINTMENT_TYPE_CODE
 
/

-- -----------------------------------------------------------------------
-- OSP$BUDGET_PER_CAL_AMT_FOR_EDI
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$BUDGET_PER_CAL_AMT_FOR_EDI AS 
SELECT
  A.PROPOSAL_NUMBER PROPOSAL_NUMBER,
  A.BUDGET_PERIOD BUDGET_PERIOD ,
  A.LINE_ITEM_NUMBER LINE_ITEM_NUMBER,
  A.PERSON_NUMBER PERSON_NUMBER,
  A.RATE_NUMBER RATE_NUMBER,
  A.RATE_CLASS_CODE RATE_CLASS_CODE,
  A.RATE_TYPE_CODE RATE_TYPE_CODE,
  A.APPLIED_RATE APPLIED_RATE,
  A.CALCULATED_COST CALCULATED_COST,
  A.CALCULATED_COST_SHARING CALCULATED_COST_SHARING,
  B.APPLY_RATE_FLAG APPLY_RATE_FLAG,
  A.UPDATE_TIMESTAMP UPDATE_TIMESTAMP,
  A.UPDATE_USER UPDATE_USER
FROM (SELECT
	  PROPOSAL_NUMBER,
	  VERSION_NUMBER,
	  BUDGET_PERIOD ,
	  LINE_ITEM_NUMBER,
	  PERSON_NUMBER,
	  START_DATE,
	  END_DATE,
      RATE_NUMBER RATE_NUMBER,
	  RATE_CLASS_CODE,
	  RATE_TYPE_CODE,
  	  APPLIED_RATE APPLIED_RATE,
  	  CALCULATED_COST CALCULATED_COST,
  	  CALCULATED_COST_SHARING CALCULATED_COST_SHARING,
  	  UPDATE_TIMESTAMP UPDATE_TIMESTAMP,
  	  UPDATE_USER UPDATE_USER
	FROM BUDGET_PER_DET_RATE_AND_BASE X
MINUS
SELECT
	  PROPOSAL_NUMBER,
	  VERSION_NUMBER,
	  BUDGET_PERIOD ,
	  LINE_ITEM_NUMBER,
	  PERSON_NUMBER,
	  START_DATE,
	  END_DATE,
      RATE_NUMBER RATE_NUMBER,
	  X.RATE_CLASS_CODE,
	  X.RATE_TYPE_CODE,
  	  APPLIED_RATE APPLIED_RATE,
  	  CALCULATED_COST CALCULATED_COST,
  	  CALCULATED_COST_SHARING CALCULATED_COST_SHARING,
  	  UPDATE_TIMESTAMP UPDATE_TIMESTAMP,
  	  UPDATE_USER UPDATE_USER
	FROM BUDGET_PER_DET_RATE_AND_BASE X,	(SELECT RATE_CLASS_CODE, RATE_TYPE_CODE
	FROM VALID_CALC_TYPES WHERE RATE_CLASS_TYPE  IN ('E', 'V')) Y
	WHERE X.rate_class_code = Y.rate_class_code AND X.RATE_TYPE_CODE = Y.RATE_TYPE_CODE)A, BUDGET_PERSONNEL_CAL_AMTS B
WHERE B.PROPOSAL_NUMBER = A.PROPOSAL_NUMBER AND
B.BUDGET_PERIOD = A.BUDGET_PERIOD AND B.LINE_ITEM_NUMBER = A.LINE_ITEM_NUMBER AND
B.PERSON_NUMBER = A.PERSON_NUMBER AND B.RATE_CLASS_CODE = A.RATE_CLASS_CODE AND
B.RATE_TYPE_CODE = A.RATE_TYPE_CODE
 
/

-- -----------------------------------------------------------------------
-- OSP$BUDGET_PER_DETAILS_FOR_EDI
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$BUDGET_PER_DETAILS_FOR_EDI AS 
SELECT
  A.PROPOSAL_NUMBER, A.BUDGET_PERIOD, A.LINE_ITEM_NUMBER, A.PERSON_NUMBER, ROWNUM RATE_NUMBER, A.PERSON_ID, '000000' JOB_CODE,
  A.START_DATE, A.END_DATE, 'CC' PERIOD_TYPE, B.LINE_ITEM_DESCRIPTION, '0' SEQUENCE_NUMBER, A.SALARY_REQUESTED,
  A.PERCENT_EFFORT, A.PERCENT_CHARGED, '0.00' COST_SHARING_PERCENT, A.COST_SHARING_AMOUNT, A.UNDERRECOVERY_AMOUNT,
  B.ON_OFF_CAMPUS_FLAG, B.APPLY_IN_RATE_FLAG, B.BUDGET_JUSTIFICATION, B.UPDATE_TIMESTAMP, B.UPDATE_USER
FROM
  (VIEW_BPDFE_5) A,
BUDGET_DETAILS B
WHERE
B.PROPOSAL_NUMBER = A.PROPOSAL_NUMBER AND
B.VERSION_NUMBER = A.VERSION_NUMBER AND
B.BUDGET_PERIOD = A.BUDGET_PERIOD AND
B.LINE_ITEM_NUMBER = A.LINE_ITEM_NUMBER
 
/

-- -----------------------------------------------------------------------
-- OSP$BUDGET_PROJECT_INCOME
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$BUDGET_PROJECT_INCOME AS 
select PROPOSAL_NUMBER, BUDGET_VERSION_NUMBER, BUDGET_PERIOD, PROJECT_INCOME_ID, AMOUNT, DESCRIPTION, UPDATE_TIMESTAMP, UPDATE_USER
	from BUDGET_PROJECT_INCOME
 
/

-- -----------------------------------------------------------------------
-- OSP$BUDGET_RATE_AND_BASE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$BUDGET_RATE_AND_BASE AS 
select PROPOSAL_NUMBER,VERSION_NUMBER,BUDGET_PERIOD,LINE_ITEM_NUMBER,RATE_NUMBER,START_DATE,
	END_DATE,RATE_CLASS_CODE,RATE_TYPE_CODE,ON_OFF_CAMPUS_FLAG,APPLIED_RATE,
	BASE_COST,BASE_COST_SHARING,CALCULATED_COST,CALCULATED_COST_SHARING,UPDATE_TIMESTAMP,
	UPDATE_USER
	from BUDGET_RATE_AND_BASE
 
/

-- -----------------------------------------------------------------------
-- OSP$BUDGET_RATE_BASE_FOR_EDI
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$BUDGET_RATE_BASE_FOR_EDI AS 
SELECT
  A.PROPOSAL_NUMBER PROPOSAL_NUMBER,
  A.BUDGET_PERIOD BUDGET_PERIOD,
  A.LINE_ITEM_NUMBER LINE_ITEM_NUMBER,
  RATE_NUMBER,
  A.START_DATE START_DATE,
  A.END_DATE END_DATE,
  RATE_CLASS_CODE,
  RATE_TYPE_CODE,
  A.ON_OFF_CAMPUS_FLAG ON_OFF_CAMPUS_FLAG,
  APPLIED_RATE,
  BASE_COST,
  BASE_COST_SHARING,
  CALCULATED_COST,
  CALCULATED_COST_SHARING,
  A.UPDATE_TIMESTAMP UPDATE_TIMESTAMP,
  A.UPDATE_USER UPDATE_USER
FROM BUDGET_RATE_AND_BASE A, BUDGET_DETAILS B, BUDGET_CATEGORY C
WHERE B.PROPOSAL_NUMBER = A.PROPOSAL_NUMBER AND
B.VERSION_NUMBER = A.VERSION_NUMBER AND B.BUDGET_PERIOD = A.BUDGET_PERIOD
AND B.LINE_ITEM_NUMBER = A.LINE_ITEM_NUMBER
AND C.BUDGET_CATEGORY_CODE = B.BUDGET_CATEGORY_CODE
AND C.CATEGORY_TYPE != 'P'
 
/

-- -----------------------------------------------------------------------
-- OSP$BUDGET_SUB_AWARDS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$BUDGET_SUB_AWARDS AS 
select A.PROPOSAL_NUMBER,A.VERSION_NUMBER,A.SUB_AWARD_NUMBER,ORGANIZATION_NAME,
    SUB_AWARD_STATUS_CODE,B.SUB_AWARD_XFD_FILE SUB_AWARD_XFD_FILE,A.SUB_AWARD_XFD_FILE_NAME,
    A.COMMENTS,A.XFD_UPDATE_USER,A.XFD_UPDATE_TIMESTAMP,B.SUB_AWARD_XML_FILE SUB_AWARD_XML_FILE,
    A.TRANSLATION_COMMENTS,A.XML_UPDATE_USER,A.XML_UPDATE_TIMESTAMP,A.UPDATE_TIMESTAMP,A.UPDATE_USER
 from BUDGET_SUB_AWARDS A,BUDGET_SUB_AWARD_FILES B
 where A.PROPOSAL_NUMBER = B.PROPOSAL_NUMBER
   and A.VERSION_NUMBER = B.VERSION_NUMBER
   and A.SUB_AWARD_NUMBER = B.SUB_AWARD_NUMBER(+)
 
/

-- -----------------------------------------------------------------------
-- OSP$BUDGET_SUB_AWARD_ATT
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$BUDGET_SUB_AWARD_ATT AS 
select PROPOSAL_NUMBER,VERSION_NUMBER,SUB_AWARD_NUMBER,CONTENT_ID,CONTENT_TYPE,ATTACHMENT,
	UPDATE_TIMESTAMP,UPDATE_USER
	from BUDGET_SUB_AWARD_ATT
 
/

-- -----------------------------------------------------------------------
-- OSP$COEUS_MODULE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$COEUS_MODULE AS 
SELECT
    MODULE_CODE,
    DESCRIPTION,
    UPDATE_TIMESTAMP,
    UPDATE_USER
FROM COEUS_MODULE
 
/

-- -----------------------------------------------------------------------
-- OSP$COEUS_SUB_MODULE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$COEUS_SUB_MODULE AS 
SELECT
    MODULE_CODE,
    SUB_MODULE_CODE,
    DESCRIPTION,
    UPDATE_TIMESTAMP,
    UPDATE_USER
FROM COEUS_SUB_MODULE
 
/

-- -----------------------------------------------------------------------
-- OSP$COMMENT
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$COMMENT AS 
SELECT
	COMMENT_TYPE_CODE COMMENT_CODE,
	DESCRIPTION DESCRIPTION,
	TEMPLATE_FLAG TEMPLATE_FLAG,
	CHECKLIST_FLAG CHECKLIST_FLAG,
	AWARD_COMMENT_SCREEN_FLAG AWARD_COMMENT_SCREEN_FLAG,
	UPDATE_TIMESTAMP UPDATE_TIMESTAMP,
	UPDATE_USER UPDATE_USER
FROM COMMENT_TYPE
 
/

-- -----------------------------------------------------------------------
-- OSP$COMMITTEE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$COMMITTEE AS 
SELECT COMMITTEE_ID, COMMITTEE_NAME, HOME_UNIT_NUMBER, DESCRIPTION,
    SCHEDULE_DESCRIPTION, COMMITTEE_TYPE_CODE, MINIMUM_MEMBERS_REQUIRED,
    MAX_PROTOCOLS, ADV_SUBMISSION_DAYS_REQ, DEFAULT_REVIEW_TYPE_CODE,
    APPLICABLE_REVIEW_TYPE_CODE, CREATE_TIMESTAMP, CREATE_USER,
    UPDATE_TIMESTAMP, UPDATE_USER
FROM COMMITTEE
 
/

-- -----------------------------------------------------------------------
-- OSP$COMMITTEE_TYPE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$COMMITTEE_TYPE AS 
SELECT COMMITTEE_TYPE_CODE, DESCRIPTION, UPDATE_TIMESTAMP, UPDATE_USER
FROM COMMITTEE_TYPE
 
/

-- -----------------------------------------------------------------------
-- OSP$COMM_CORRESP_BATCH
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$COMM_CORRESP_BATCH AS 
SELECT 
    COMM_BATCH_CORRESP_ID AS CORRESP_BATCH_ID, 
    COMMITTEE_ID, 
    BATCH_CORRESPONDENCE_TYPE_CODE AS CORRESP_BATCH_TYPE_CODE, 
    BATCH_RUN_DATE, 
    TIME_WINDOW_START, 
    TIME_WINDOW_END, 
    UPDATE_TIMESTAMP, 
    UPDATE_USER
FROM COMM_BATCH_CORRESP
/

-- -----------------------------------------------------------------------
-- OSP$COMM_CORRESP_BATCH_DETAIL
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$COMM_CORRESP_BATCH_DETAIL AS 
SELECT 
    COMM_BATCH_CORRESP_DETAIL.COMM_BATCH_CORRESP_ID AS CORRESP_BATCH_ID, 
    PROTOCOL_ACTIONS.PROTOCOL_NUMBER, 
    PROTOCOL_ACTIONS.SEQUENCE_NUMBER, 
    PROTOCOL_ACTIONS.ACTION_ID, 
    COMM_BATCH_CORRESP_DETAIL.UPDATE_TIMESTAMP, 
    COMM_BATCH_CORRESP_DETAIL.UPDATE_USER
FROM COMM_BATCH_CORRESP_DETAIL, PROTOCOL_ACTIONS
WHERE COMM_BATCH_CORRESP_DETAIL.PROTOCOL_ACTION_ID = PROTOCOL_ACTIONS.PROTOCOL_ACTION_ID
/

-- -----------------------------------------------------------------------
-- OSP$COMM_MEMBERSHIPS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$COMM_MEMBERSHIPS AS 
SELECT
    COMMITTEE.COMMITTEE_ID,
    CASE 
      WHEN COMM_MEMBERSHIPS.PERSON_ID IS NULL THEN TO_CHAR(COMM_MEMBERSHIPS.ROLODEX_ID) 
      ELSE COMM_MEMBERSHIPS.PERSON_ID
    END AS PERSON_ID,
    COMM_MEMBERSHIPS.MEMBERSHIP_ID,
    COMMITTEE.SEQUENCE_NUMBER,
    COMM_MEMBERSHIPS.PERSON_NAME,
    CASE
      WHEN COMM_MEMBERSHIPS.PERSON_ID IS NULL THEN 'N'
      ELSE 'Y'
    END AS NON_EMPLOYEE_FLAG,
    COMM_MEMBERSHIPS.PAID_MEMBER_FLAG,
    COMM_MEMBERSHIPS.TERM_START_DATE,
    COMM_MEMBERSHIPS.TERM_END_DATE,
    COMM_MEMBERSHIPS.MEMBERSHIP_TYPE_CODE,
    COMM_MEMBERSHIPS.COMMENTS,
    COMM_MEMBERSHIPS.UPDATE_TIMESTAMP,
    COMM_MEMBERSHIPS.UPDATE_USER
FROM COMM_MEMBERSHIPS, COMMITTEE
WHERE COMM_MEMBERSHIPS.COMMITTEE_ID_FK = COMMITTEE.ID
 
/

-- -----------------------------------------------------------------------
-- OSP$COMM_MEMBERSHIP_TYPE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$COMM_MEMBERSHIP_TYPE AS 
SELECT 
    MEMBERSHIP_TYPE_CODE, 
    DESCRIPTION, 
    UPDATE_TIMESTAMP, 
    UPDATE_USER
FROM COMM_MEMBERSHIP_TYPE
 
/

-- -----------------------------------------------------------------------
-- OSP$COMM_MEMBER_EXPERTISE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$COMM_MEMBER_EXPERTISE AS 
SELECT
    COMM_MEMBERSHIPS.MEMBERSHIP_ID,
    COMMITTEE.SEQUENCE_NUMBER,
    COMM_MEMBER_EXPERTISE.RESEARCH_AREA_CODE,
    COMM_MEMBER_EXPERTISE.UPDATE_TIMESTAMP,
    COMM_MEMBER_EXPERTISE.UPDATE_USER
FROM COMM_MEMBER_EXPERTISE, COMM_MEMBERSHIPS, COMMITTEE
WHERE COMM_MEMBER_EXPERTISE.COMM_MEMBERSHIP_ID_FK = COMM_MEMBERSHIPS.COMM_MEMBERSHIP_ID
  AND COMM_MEMBERSHIPS.COMMITTEE_ID_FK = COMMITTEE.ID
 
/

-- -----------------------------------------------------------------------
-- OSP$COMM_MEMBER_ROLES
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$COMM_MEMBER_ROLES AS 
SELECT
    COMM_MEMBERSHIPS.MEMBERSHIP_ID,
    COMMITTEE.SEQUENCE_NUMBER,
    COMM_MEMBER_ROLES.MEMBERSHIP_ROLE_CODE,
    COMM_MEMBER_ROLES.START_DATE,
    COMM_MEMBER_ROLES.END_DATE,
    COMM_MEMBER_ROLES.UPDATE_TIMESTAMP,
    COMM_MEMBER_ROLES.UPDATE_USER
FROM COMM_MEMBER_ROLES, COMM_MEMBERSHIPS, COMMITTEE
WHERE COMM_MEMBER_ROLES.COMM_MEMBERSHIP_ID_FK = COMM_MEMBERSHIPS.COMM_MEMBERSHIP_ID
  AND COMM_MEMBERSHIPS.COMMITTEE_ID_FK = COMMITTEE.ID
 
/

-- -----------------------------------------------------------------------
-- OSP$COMM_RESEARCH_AREAS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$COMM_RESEARCH_AREAS AS 
SELECT
  COMMITTEE.COMMITTEE_ID,
  COMM_RESEARCH_AREAS.RESEARCH_AREA_CODE,
  COMM_RESEARCH_AREAS.UPDATE_TIMESTAMP,
  COMM_RESEARCH_AREAS.UPDATE_USER
FROM COMM_RESEARCH_AREAS, COMMITTEE
WHERE COMM_RESEARCH_AREAS.COMMITTEE_ID_FK = COMMITTEE.ID
 
/

-- -----------------------------------------------------------------------
-- OSP$COMM_SCHEDULE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$COMM_SCHEDULE AS 
SELECT
    COMM_SCHEDULE.SCHEDULE_ID,
    COMMITTEE.COMMITTEE_ID,
    COMM_SCHEDULE.SCHEDULED_DATE,
    COMM_SCHEDULE.PLACE,
    COMM_SCHEDULE.TIME,
    COMM_SCHEDULE.PROTOCOL_SUB_DEADLINE,
    COMM_SCHEDULE.SCHEDULE_STATUS_CODE,
    COMM_SCHEDULE.MEETING_DATE,
    COMM_SCHEDULE.START_TIME,
    COMM_SCHEDULE.END_TIME,
    COMM_SCHEDULE.AGENDA_PROD_REV_DATE,
    COMM_SCHEDULE.MAX_PROTOCOLS,
    COMM_SCHEDULE.COMMENTS,
    COMM_SCHEDULE.UPDATE_TIMESTAMP,
    COMM_SCHEDULE.UPDATE_USER
FROM COMM_SCHEDULE, COMMITTEE
WHERE COMM_SCHEDULE.COMMITTEE_ID_FK = COMMITTEE.ID
 
/

-- -----------------------------------------------------------------------
-- OSP$COMM_SCHEDULE_ACT_ITEMS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$COMM_SCHEDULE_ACT_ITEMS AS 
SELECT 
    COMM_SCHEDULE.SCHEDULE_ID, 
    COMM_SCHEDULE_ACT_ITEMS.ACTION_ITEM_NUMBER, 
    COMM_SCHEDULE_ACT_ITEMS.SCHEDULE_ACT_ITEM_TYPE_CODE, 
    COMM_SCHEDULE_ACT_ITEMS.ITEM_DESCTIPTION, 
    COMM_SCHEDULE_ACT_ITEMS.UPDATE_TIMESTAMP, 
    COMM_SCHEDULE_ACT_ITEMS.UPDATE_USER
FROM COMM_SCHEDULE_ACT_ITEMS,
     COMM_SCHEDULE
WHERE COMM_SCHEDULE.ID = COMM_SCHEDULE_ACT_ITEMS.SCHEDULE_ID_FK
 
/

-- -----------------------------------------------------------------------
-- OSP$COMM_SCHEDULE_ATTENDANCE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$COMM_SCHEDULE_ATTENDANCE AS 
SELECT 
    COMM_SCHEDULE.SCHEDULE_ID, 
    COMM_SCHEDULE_ATTENDANCE.PERSON_ID, 
    COMM_SCHEDULE_ATTENDANCE.GUEST_FLAG, 
    COMM_SCHEDULE_ATTENDANCE.ALTERNATE_FLAG, 
    COMM_SCHEDULE_ATTENDANCE.ALTERNATE_FOR, 
    COMM_SCHEDULE_ATTENDANCE.NON_EMPLOYEE_FLAG, 
    COMM_SCHEDULE_ATTENDANCE.COMMENTS, 
    COMM_SCHEDULE_ATTENDANCE.UPDATE_TIMESTAMP, 
    COMM_SCHEDULE_ATTENDANCE.UPDATE_USER
FROM COMM_SCHEDULE_ATTENDANCE,
     COMM_SCHEDULE
WHERE COMM_SCHEDULE.ID = COMM_SCHEDULE_ATTENDANCE.SCHEDULE_ID_FK
 
/

-- -----------------------------------------------------------------------
-- OSP$COMM_SCHEDULE_FREQUENCY
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$COMM_SCHEDULE_FREQUENCY AS 
SELECT 
  frequency_code,
  description,
  no_of_days,
  update_timestamp,
  update_user
FROM comm_schedule_frequency
 
/

-- -----------------------------------------------------------------------
-- OSP$COMM_SCHEDULE_MINUTES
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$COMM_SCHEDULE_MINUTES AS 
SELECT 
    COMM_SCHEDULE.SCHEDULE_ID, 
    COMM_SCHEDULE_MINUTES.ENTRY_NUMBER, 
    COMM_SCHEDULE_MINUTES.MINUTE_ENTRY_TYPE_CODE, 
    PROTOCOL.PROTOCOL_NUMBER, 
    PROTOCOL.SEQUENCE_NUMBER, 
    PROTOCOL_SUBMISSION.SUBMISSION_NUMBER, 
    COMM_SCHEDULE_MINUTES.PRIVATE_COMMENT_FLAG, 
    COMM_SCHEDULE_MINUTES.PROTOCOL_CONTINGENCY_CODE, 
    COMM_SCHEDULE_MINUTES.MINUTE_ENTRY, 
    COMM_SCHEDULE_MINUTES.UPDATE_TIMESTAMP, 
    COMM_SCHEDULE_MINUTES.UPDATE_USER
FROM COMM_SCHEDULE_MINUTES,
     COMM_SCHEDULE,
     PROTOCOL,
     PROTOCOL_SUBMISSION
WHERE COMM_SCHEDULE.ID = COMM_SCHEDULE_MINUTES.SCHEDULE_ID_FK and
      PROTOCOL_SUBMISSION.SUBMISSION_ID = COMM_SCHEDULE_MINUTES.SUBMISSION_ID_FK and
      PROTOCOL.PROTOCOL_ID = COMM_SCHEDULE_MINUTES.PROTOCOL_ID_FK
 
/

-- -----------------------------------------------------------------------
-- OSP$COMM_SCHEDULE_MINUTE_DOC
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$COMM_SCHEDULE_MINUTE_DOC AS 
SELECT 
    COMM_SCHEDULE.SCHEDULE_ID, 
    COMM_SCHEDULE_MINUTE_DOC.MINUTE_NUMBER, 
    COMM_SCHEDULE_MINUTE_DOC.MINUTE_NAME, 
    COMM_SCHEDULE_MINUTE_DOC.PDF_STORE, 
    COMM_SCHEDULE_MINUTE_DOC.CREATE_TIMESTAMP, 
    COMM_SCHEDULE_MINUTE_DOC.CREATE_USER, 
    COMM_SCHEDULE_MINUTE_DOC.UPDATE_TIMESTAMP, 
    COMM_SCHEDULE_MINUTE_DOC.UPDATE_USER
FROM COMM_SCHEDULE_MINUTE_DOC,
     COMM_SCHEDULE
WHERE COMM_SCHEDULE.ID = COMM_SCHEDULE_MINUTE_DOC.SCHEDULE_ID_FK
 
/

-- -----------------------------------------------------------------------
-- OSP$CONTACT_TYPE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$CONTACT_TYPE AS 
SELECT 
	CONTACT_TYPE_CODE, 
	DESCRIPTION, 
	UPDATE_TIMESTAMP, 
	UPDATE_USER
FROM CONTACT_TYPE
 
/

-- -----------------------------------------------------------------------
-- OSP$CORRESPONDENT_TYPE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$CORRESPONDENT_TYPE AS 
SELECT 
    CORRESPONDENT_TYPE_CODE, 
    DESCRIPTION, 
    QUALIFIER, 
    UPDATE_TIMESTAMP, 
    UPDATE_USER
FROM CORRESPONDENT_TYPE
/

-- -----------------------------------------------------------------------
-- OSP$COST_ELEMENT
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$COST_ELEMENT AS 
select COST_ELEMENT,DESCRIPTION,BUDGET_CATEGORY_CODE,ON_OFF_CAMPUS_FLAG,UPDATE_TIMESTAMP,UPDATE_USER
	from COST_ELEMENT
 
/

-- -----------------------------------------------------------------------
-- OSP$COST_SHARING_TYPE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$COST_SHARING_TYPE AS 
SELECT 
	COST_SHARE_TYPE_CODE COST_SHARING_TYPE_CODE,
	DESCRIPTION DESCRIPTION,
	UPDATE_TIMESTAMP UPDATE_TIMESTAMP, 
	UPDATE_USER UPDATE_USER
FROM COST_SHARE_TYPE
 
/

-- -----------------------------------------------------------------------
-- OSP$COUNTRY_CODE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$COUNTRY_CODE AS 
select COUNTRY_CODE, COUNTRY_NAME, UPDATE_TIMESTAMP, UPDATE_USER
	from COUNTRY_CODE
 
/

-- -----------------------------------------------------------------------
-- OSP$DEGREE_TYPE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$DEGREE_TYPE AS 
select DEGREE_CODE, DESCRIPTION, UPDATE_TIMESTAMP, UPDATE_USER, null
	from DEGREE_TYPE
 
/

-- -----------------------------------------------------------------------
-- OSP$DISTRIBUTION
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$DISTRIBUTION AS 
SELECT 
	OSP_DISTRIBUTION_CODE, 
	DESCRIPTION, 
	UPDATE_TIMESTAMP, 
	UPDATE_USER
FROM DISTRIBUTION
 
/

-- -----------------------------------------------------------------------
-- OSP$EPS_PROPOSAL
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$EPS_PROPOSAL AS 
select PROPOSAL_NUMBER, PROPOSAL_TYPE_CODE, STATUS_CODE, CREATION_STATUS_CODE, BASE_PROPOSAL_NUMBER, CONTINUED_FROM, TEMPLATE_FLAG, ORGANIZATION_ID, PERFORMING_ORGANIZATION_ID, CURRENT_ACCOUNT_NUMBER, CURRENT_AWARD_NUMBER, TITLE, SPONSOR_CODE, SPONSOR_PROPOSAL_NUMBER, INTR_COOP_ACTIVITIES_FLAG, INTR_COUNTRY_LIST, OTHER_AGENCY_FLAG, NOTICE_OF_OPPORTUNITY_CODE, PROGRAM_ANNOUNCEMENT_NUMBER, PROGRAM_ANNOUNCEMENT_TITLE, ACTIVITY_TYPE_CODE, REQUESTED_START_DATE_INITIAL, REQUESTED_START_DATE_TOTAL, REQUESTED_END_DATE_INITIAL, REQUESTED_END_DATE_TOTAL, DURATION_MONTHS, NUMBER_OF_COPIES, DEADLINE_DATE, DEADLINE_TYPE, MAILING_ADDRESS_ID, MAIL_BY, MAIL_TYPE, CARRIER_CODE_TYPE, CARRIER_CODE, MAIL_DESCRIPTION, MAIL_ACCOUNT_NUMBER, SUBCONTRACT_FLAG, NARRATIVE_STATUS, BUDGET_STATUS, OWNED_BY_UNIT, CREATE_TIMESTAMP, CREATE_USER, UPDATE_TIMESTAMP, UPDATE_USER, NSF_CODE, PRIME_SPONSOR_CODE, CFDA_NUMBER, AGENCY_PROGRAM_CODE, AGENCY_DIVISION_CODE
	from EPS_PROPOSAL
 
/

-- -----------------------------------------------------------------------
-- OSP$EPS_PROPOSAL_STATUS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$EPS_PROPOSAL_STATUS AS 
select STATUS_CODE, DESCRIPTION, UPDATE_TIMESTAMP, UPDATE_USER
	from eps_proposal_status
 
/

-- -----------------------------------------------------------------------
-- OSP$EPS_PROP_ABSTRACT
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$EPS_PROP_ABSTRACT AS 
select  PROPOSAL_NUMBER, ABSTRACT_TYPE_CODE, ABSTRACT_DETAILS, UPDATE_TIMESTAMP, UPDATE_USER
	from EPS_PROP_ABSTRACT
 
/

-- -----------------------------------------------------------------------
-- OSP$EPS_PROP_COST_SHARING
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$EPS_PROP_COST_SHARING AS 
select PROPOSAL_NUMBER,BUDGET_VERSION_NUMBER,FISCAL_YEAR,COST_SHARING_PERCENTAGE,SOURCE_ACCOUNT,AMOUNT,UPDATE_TIMESTAMP,UPDATE_USER
	from EPS_PROP_COST_SHARING
 
/

-- -----------------------------------------------------------------------
-- OSP$EPS_PROP_IDC_RATE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$EPS_PROP_IDC_RATE AS 
select PROPOSAL_NUMBER, BUDGET_VERSION_NUMBER, APPLICABLE_IDC_RATE, FISCAL_YEAR, ON_CAMPUS_FLAG, UNDERRECOVERY_OF_IDC, SOURCE_ACCOUNT, UPDATE_TIMESTAMP, UPDATE_USER
	from EPS_PROP_IDC_RATE
 
/

-- -----------------------------------------------------------------------
-- OSP$EPS_PROP_INVESTIGATORS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$EPS_PROP_INVESTIGATORS AS 
select
	   PROPOSAL_NUMBER, cast(decode(to_char(ROLODEX_ID),null,PERSON_ID,to_char(ROLODEX_ID)) as varchar2(10)) PERSON_ID, FULL_NAME,
	   decode(PROP_PERSON_ROLE_ID,'PI','Y','N') PRINCIPAL_INVESTIGATOR_FLAG, IS_FACULTY,
	   decode(PERSON_ID,null,'Y','N') NON_MIT_PERSON_FLAG,CONFLICT_OF_INTEREST_FLAG, PERCENTAGE_EFFORT,
	   FEDR_DEBR_FLAG, FEDR_DELQ_FLAG, UPDATE_TIMESTAMP, UPDATE_USER
	from EPS_PROP_PERSON WHERE PROP_PERSON_ROLE_ID in ('PI','COI')
 
/

-- -----------------------------------------------------------------------
-- OSP$EPS_PROP_KEY_PERSONS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$EPS_PROP_KEY_PERSONS AS 
select
       PROPOSAL_NUMBER, CASE WHEN PERSON_ID IS null THEN cast(ROLODEX_ID as char) ELSE PERSON_ID END PERSON_ID,
       FULL_NAME, PRIMARY_TITLE, IS_FACULTY, CASE WHEN PERSON_ID IS null THEN 'N' ELSE 'Y' END NON_MIT_PERSON_FLAG,
       CASE WHEN IS_OSC = 'Y' THEN 999.00 ELSE PERCENTAGE_EFFORT END PERCENTAGE_EFFORT,
       UPDATE_TIMESTAMP, UPDATE_USER
       from EPS_PROP_PERSON WHERE PROP_PERSON_ROLE_ID='KP'
 
/

-- -----------------------------------------------------------------------
-- OSP$EPS_PROP_LA_RATES
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$EPS_PROP_LA_RATES AS 
select PROPOSAL_NUMBER,VERSION_NUMBER,RATE_TYPE_CODE,FISCAL_YEAR,ON_OFF_CAMPUS_FLAG,START_DATE,
	APPLICABLE_RATE,INSTITUTE_RATE,UPDATE_TIMESTAMP,UPDATE_USER,RATE_CLASS_CODE
	from EPS_PROP_LA_RATES
 
/

-- -----------------------------------------------------------------------
-- OSP$EPS_PROP_LOCATION
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$EPS_PROP_LOCATION AS 
select PROPOSAL_NUMBER,LOCATION,ROLODEX_ID,UPDATE_TIMESTAMP,UPDATE_USER
	from EPS_PROP_LOCATION
 
/

-- -----------------------------------------------------------------------
-- OSP$EPS_PROP_PERSON
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$EPS_PROP_PERSON AS 
select PROPOSAL_NUMBER, PERSON_ID, SSN, LAST_NAME, FIRST_NAME, MIDDLE_NAME, FULL_NAME, PRIOR_NAME, USER_NAME, EMAIL_ADDRESS, DATE_OF_BIRTH, AGE, AGE_BY_FISCAL_YEAR, GENDER, RACE, EDUCATION_LEVEL, DEGREE, MAJOR, IS_HANDICAPPED, HANDICAP_TYPE, IS_VETERAN, VETERAN_TYPE, VISA_CODE, VISA_TYPE, VISA_RENEWAL_DATE, HAS_VISA, OFFICE_LOCATION, OFFICE_PHONE, SECONDRY_OFFICE_LOCATION, SECONDRY_OFFICE_PHONE, SCHOOL, YEAR_GRADUATED, DIRECTORY_DEPARTMENT, SALUTATION, COUNTRY_OF_CITIZENSHIP, PRIMARY_TITLE, DIRECTORY_TITLE, HOME_UNIT, IS_FACULTY, IS_GRADUATE_STUDENT_STAFF, IS_RESEARCH_STAFF, IS_SERVICE_STAFF, IS_SUPPORT_STAFF, IS_OTHER_ACCADEMIC_GROUP, IS_MEDICAL_STAFF, VACATION_ACCURAL, IS_ON_SABBATICAL, ID_PROVIDED, ID_VERIFIED, UPDATE_TIMESTAMP, UPDATE_USER, ADDRESS_LINE_1, ADDRESS_LINE_2, ADDRESS_LINE_3, CITY, COUNTY, STATE, POSTAL_CODE, COUNTRY_CODE, FAX_NUMBER, PAGER_NUMBER, MOBILE_PHONE_NUMBER, ERA_COMMONS_USER_NAME, 1
	from eps_prop_person
 
/

-- -----------------------------------------------------------------------
-- OSP$EPS_PROP_PERSON_BIO
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$EPS_PROP_PERSON_BIO AS 
select PROPOSAL_NUMBER,PERSON_ID,BIO_NUMBER,DESCRIPTION,DOCUMENT_TYPE_CODE,UPDATE_TIMESTAMP,
	UPDATE_USER
	from EPS_PROP_PERSON_BIO
 
/

-- -----------------------------------------------------------------------
-- OSP$EPS_PROP_PERSON_BIO_PDF
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$EPS_PROP_PERSON_BIO_PDF AS 
select  EPS_PROP_PERSON_BIO.PROPOSAL_NUMBER, decode(PERSON_ID,null,ROLODEX_ID,PERSON_ID) PERSON_ID,
	   	  		  				   EPS_PROP_PERSON_BIO.BIO_NUMBER,BIO_DATA,
	   	  		  				   EPS_PROP_PERSON_BIO.FILE_NAME, EPS_PROP_PERSON_BIO.UPDATE_TIMESTAMP, EPS_PROP_PERSON_BIO.UPDATE_USER
	   from EPS_PROP_PERSON_BIO, EPS_PROP_PERSON_BIO_ATTACHMENT
	   where  EPS_PROP_PERSON_BIO.PROPOSAL_NUMBER = EPS_PROP_PERSON_BIO_ATTACHMENT.PROPOSAL_NUMBER(+) and
	   		  EPS_PROP_PERSON_BIO.PROP_PERSON_NUMBER = EPS_PROP_PERSON_BIO_ATTACHMENT.PROP_PERSON_NUMBER(+) and
	   		  EPS_PROP_PERSON_BIO.BIO_NUMBER = EPS_PROP_PERSON_BIO_ATTACHMENT.BIO_NUMBER(+)
 
/

-- -----------------------------------------------------------------------
-- OSP$EPS_PROP_PERSON_DEGREE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$EPS_PROP_PERSON_DEGREE AS 
select a.PROPOSAL_NUMBER, decode(b.PERSON_ID,null,b.rolodex_id,b.person_id), DEGREE_CODE, to_date(GRADUATION_YEAR,'YYYY'), a.DEGREE, FIELD_OF_STUDY, SPECIALIZATION, a.SCHOOL, SCHOOL_ID_CODE, SCHOOL_ID, a.UPDATE_TIMESTAMP, a.UPDATE_USER
	from eps_prop_person_degree a ,eps_prop_person b
	where a.proposal_number = b.proposal_number
		  and a.prop_person_number = b.prop_person_number
 
/

-- -----------------------------------------------------------------------
-- OSP$EPS_PROP_PERS_YNQ
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$EPS_PROP_PERS_YNQ AS 
select A.PROPOSAL_NUMBER,B.PERSON_ID,QUESTION_ID,ANSWER,A.UPDATE_TIMESTAMP,A.UPDATE_USER
	from EPS_PROP_PERS_YNQ A, EPS_PROP_PERSON B
	where B.PROPOSAL_NUMBER = A.PROPOSAL_NUMBER AND B.PROP_PERSON_NUMBER = A.PROP_PERSON_NUMBER
 
/

-- -----------------------------------------------------------------------
-- OSP$EPS_PROP_PER_CREDIT_SPLIT
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$EPS_PROP_PER_CREDIT_SPLIT AS 
select A.PROPOSAL_NUMBER,B.PERSON_ID,INV_CREDIT_TYPE_CODE,CREDIT,
		A.UPDATE_TIMESTAMP,A.UPDATE_USER
	from EPS_PROP_PER_CREDIT_SPLIT A, EPS_PROP_PERSON B
	where B.PROPOSAL_NUMBER = A.PROPOSAL_NUMBER AND B.PROP_PERSON_NUMBER = A.PROP_PERSON_NUMBER
 
/

-- -----------------------------------------------------------------------
-- OSP$EPS_PROP_PER_DOC_TYPE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$EPS_PROP_PER_DOC_TYPE AS 
select DOCUMENT_TYPE_CODE,DESCRIPTION,UPDATE_TIMESTAMP,UPDATE_USER
	from EPS_PROP_PER_DOC_TYPE
 
/

-- -----------------------------------------------------------------------
-- OSP$EPS_PROP_RATES
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$EPS_PROP_RATES AS 
select PROPOSAL_NUMBER,VERSION_NUMBER,RATE_CLASS_CODE,RATE_TYPE_CODE,FISCAL_YEAR,ON_OFF_CAMPUS_FLAG,
	ACTIVITY_TYPE_CODE,START_DATE,APPLICABLE_RATE,INSTITUTE_RATE,UPDATE_TIMESTAMP,
	UPDATE_USER
	from EPS_PROP_RATES
 
/

-- -----------------------------------------------------------------------
-- OSP$EPS_PROP_SCIENCE_CODE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$EPS_PROP_SCIENCE_CODE AS 
select PROPOSAL_NUMBER, SCIENCE_KEYWORD_CODE, UPDATE_TIMESTAMP, UPDATE_USER
	from EPS_PROP_SCIENCE_KEYWORD
 
/

-- -----------------------------------------------------------------------
-- OSP$EPS_PROP_SPECIAL_REVIEW
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$EPS_PROP_SPECIAL_REVIEW AS 
select PROPOSAL_NUMBER,SPECIAL_REVIEW_NUMBER,SPECIAL_REVIEW_CODE,APPROVAL_TYPE_CODE,PROTOCOL_NUMBER,APPLICATION_DATE,
	APPROVAL_DATE,(select FN_GET_PROP_EXEMPT_NUMBERS(PROPOSAL_NUMBER,SPECIAL_REVIEW_NUMBER) from dual)  as comments,UPDATE_USER,UPDATE_TIMESTAMP
	from EPS_PROP_SPECIAL_REVIEW
 
/

-- -----------------------------------------------------------------------
-- OSP$EPS_PROP_UNITS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$EPS_PROP_UNITS AS 
select EPS_PROP_PERSON_UNITS.PROPOSAL_NUMBER, decode(EPS_PROP_PERSON.PERSON_ID,null,EPS_PROP_PERSON.PERSON_ID,EPS_PROP_PERSON.ROLODEX_ID) PERSON_ID,
   		  UNIT_NUMBER, LEAD_UNIT_FLAG, EPS_PROP_PERSON_UNITS.UPDATE_TIMESTAMP, EPS_PROP_PERSON_UNITS.UPDATE_USER
	from EPS_PROP_PERSON_UNITS,EPS_PROP_PERSON
	where EPS_PROP_PERSON_UNITS.PROPOSAL_NUMBER = EPS_PROP_PERSON.PROPOSAL_NUMBER and
	 	  EPS_PROP_PERSON_UNITS.PROP_PERSON_NUMBER = EPS_PROP_PERSON.PROP_PERSON_NUMBER
 
/

-- -----------------------------------------------------------------------
-- OSP$EPS_PROP_UNIT_CREDIT_SPLIT
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$EPS_PROP_UNIT_CREDIT_SPLIT AS 
select A.PROPOSAL_NUMBER,B.PERSON_ID,UNIT_NUMBER,INV_CREDIT_TYPE_CODE,CREDIT,A.UPDATE_TIMESTAMP,
	A.UPDATE_USER
	from EPS_PROP_UNIT_CREDIT_SPLIT A, EPS_PROP_PERSON B
	where B.PROPOSAL_NUMBER = A.PROPOSAL_NUMBER AND B.PROP_PERSON_NUMBER = A.PROP_PERSON_NUMBER
 
/

-- -----------------------------------------------------------------------
-- OSP$EPS_PROP_USER_ROLES
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$EPS_PROP_USER_ROLES AS 
select PROPOSAL_NUMBER,USER_ID,ROLE_ID,UPDATE_TIMESTAMP,UPDATE_USER
	from EPS_PROP_USER_ROLES
 
/

-- -----------------------------------------------------------------------
-- OSP$EPS_PROP_YNQ
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$EPS_PROP_YNQ AS 
select PROPOSAL_NUMBER,QUESTION_ID,ANSWER,EXPLANATION,REVIEW_DATE,UPDATE_TIMESTAMP,
	UPDATE_USER
	from EPS_PROP_YNQ
 
/

-- -----------------------------------------------------------------------
-- OSP$EXEMPT_STUDIES_CHECKLIST
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$EXEMPT_STUDIES_CHECKLIST AS 
SELECT
  EXEMPT_STUDIES_CHECKLIST_CODE,
  DESCRIPTION,
  UPDATE_TIMESTAMP,
  UPDATE_USER
FROM EXEMPT_STUDIES_CHECKLIST
 
/

-- -----------------------------------------------------------------------
-- OSP$EXPEDITED_REVIEW_CHECKLIST
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$EXPEDITED_REVIEW_CHECKLIST AS 
SELECT
  EXPEDITED_REV_CHKLST_CODE,
  DESCRIPTION,
  UPDATE_TIMESTAMP,
  UPDATE_USER
FROM EXPEDITED_REVIEW_CHECKLIST
 
/

-- -----------------------------------------------------------------------
-- OSP$FREQUENCY
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$FREQUENCY AS 
SELECT 
	FREQUENCY_CODE, 
	DESCRIPTION, 
	NUMBER_OF_DAYS, 
	NUMBER_OF_MONTHS, 
	REPEAT_FLAG, 
	PROPOSAL_DUE_FLAG, 
	INVOICE_FLAG, 
	UPDATE_TIMESTAMP, 
	UPDATE_USER, 
	ADVANCE_NUMBER_OF_DAYS, 
	ADVANCE_NUMBER_OF_MONTHS
FROM FREQUENCY
 
/

-- -----------------------------------------------------------------------
-- OSP$FREQUENCY_BASE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$FREQUENCY_BASE AS 
SELECT 
	FREQUENCY_BASE_CODE, 
	DESCRIPTION, 
	UPDATE_TIMESTAMP, 
	UPDATE_USER
FROM FREQUENCY_BASE
 
/

-- -----------------------------------------------------------------------
-- OSP$FUNDING_SOURCE_TYPE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$FUNDING_SOURCE_TYPE AS 
SELECT 
    FUNDING_SOURCE_TYPE_CODE, 
    DESCRIPTION, 
    UPDATE_TIMESTAMP, 
    UPDATE_USER, 
    FUNDING_SOURCE_TYPE_FLAG
FROM FUNDING_SOURCE_TYPE
 
/

-- -----------------------------------------------------------------------
-- OSP$GROUP_TYPES
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$GROUP_TYPES AS 
SELECT
    GROUP_TYPE_CODE,
    GROUP_NAME,
    UPDATE_TIMESTAMP,
    UPDATE_USER
FROM GROUP_TYPES
 
/

-- -----------------------------------------------------------------------
-- OSP$IDC_RATE_TYPE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$IDC_RATE_TYPE AS 
SELECT
	IDC_RATE_TYPE_CODE,
	DESCRIPTION,
	UPDATE_TIMESTAMP,
	UPDATE_USER
FROM IDC_RATE_TYPE
 
/

-- -----------------------------------------------------------------------
-- OSP$INSTITUTE_LA_RATES
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$INSTITUTE_LA_RATES AS 
select UNIT_NUMBER,RATE_TYPE_CODE,FISCAL_YEAR,START_DATE,ON_OFF_CAMPUS_FLAG,RATE,
	UPDATE_TIMESTAMP,UPDATE_USER,RATE_CLASS_CODE
	from INSTITUTE_LA_RATES
 
/

-- -----------------------------------------------------------------------
-- OSP$INSTITUTE_RATES
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$INSTITUTE_RATES AS 
select RATE_CLASS_CODE,RATE_TYPE_CODE,ACTIVITY_TYPE_CODE,FISCAL_YEAR,START_DATE,ON_OFF_CAMPUS_FLAG,
	RATE,UPDATE_TIMESTAMP,UPDATE_USER,UNIT_NUMBER
	from INSTITUTE_RATES
 
/

-- -----------------------------------------------------------------------
-- OSP$INV_CREDIT_TYPE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$INV_CREDIT_TYPE AS 
select INV_CREDIT_TYPE_CODE,DESCRIPTION,ADDS_TO_HUNDRED,UPDATE_TIMESTAMP,UPDATE_USER
	from INV_CREDIT_TYPE
 
/

-- -----------------------------------------------------------------------
-- OSP$IP_REVIEW_ACTIVITY_TYPE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$IP_REVIEW_ACTIVITY_TYPE AS 
SELECT
    IP_REVIEW_ACTIVITY_TYPE_CODE,
    DESCRIPTION,
    UPDATE_TIMESTAMP,
    UPDATE_USER
FROM IP_REVIEW_ACTIVITY_TYPE
 
/

-- -----------------------------------------------------------------------
-- OSP$IP_REVIEW_REQ_TYPE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$IP_REVIEW_REQ_TYPE AS 
SELECT
    IP_REVIEW_REQ_TYPE_CODE,
    DESCRIPTION,
    UPDATE_TIMESTAMP,
    UPDATE_USER
FROM IP_REVIEW_REQ_TYPE
 
/

-- -----------------------------------------------------------------------
-- OSP$IP_REVIEW_RESULT_TYPE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$IP_REVIEW_RESULT_TYPE AS 
SELECT
    IP_REVIEW_RESULT_TYPE_CODE,
    DESCRIPTION,
    UPDATE_TIMESTAMP,
    UPDATE_USER
FROM IP_REVIEW_RESULT_TYPE
 
/

-- -----------------------------------------------------------------------
-- OSP$JOB_CODE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$JOB_CODE AS 
select JOB_CODE,JOB_TITLE,UPDATE_TIMESTAMP,UPDATE_USER
	from JOB_CODE
 
/

-- -----------------------------------------------------------------------
-- OSP$MEMBERSHIP_ROLE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$MEMBERSHIP_ROLE AS 
SELECT
    MEMBERSHIP_ROLE_CODE,
    DESCRIPTION,
    UPDATE_TIMESTAMP,
    UPDATE_USER
FROM MEMBERSHIP_ROLE
 
/

-- -----------------------------------------------------------------------
-- OSP$METHOD_OF_PAYMENT
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$METHOD_OF_PAYMENT AS 
SELECT
	METHOD_OF_PAYMENT_CODE,
	DESCRIPTION,
	UPDATE_TIMESTAMP,
	UPDATE_USER
FROM AWARD_METHOD_OF_PAYMENT
 
/

-- -----------------------------------------------------------------------
-- OSP$MINUTE_ENTRY_TYPE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$MINUTE_ENTRY_TYPE AS 
SELECT 
    MINUTE_ENTRY_TYPE_CODE, 
    SORT_ID, 
    DESCRIPTION, 
    UPDATE_TIMESTAMP, 
    UPDATE_USER
FROM MINUTE_ENTRY_TYPE
 
/

-- -----------------------------------------------------------------------
-- OSP$NARRATIVE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$NARRATIVE AS 
select PROPOSAL_NUMBER,MODULE_NUMBER,MODULE_SEQUENCE_NUMBER,MODULE_TITLE,MODULE_STATUS_CODE,CONTACT_NAME,
	PHONE_NUMBER,EMAIL_ADDRESS,COMMENTS,UPDATE_USER,UPDATE_TIMESTAMP,
	NARRATIVE_TYPE_CODE
	from NARRATIVE
 
/

-- -----------------------------------------------------------------------
-- OSP$NARRATIVE_PDF
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$NARRATIVE_PDF AS 
select PROPOSAL_NUMBER,MODULE_NUMBER,NARRATIVE_DATA NARRATIVE_PDF,FILE_NAME,UPDATE_USER,UPDATE_TIMESTAMP
	from NARRATIVE_ATTACHMENT
 
/

-- -----------------------------------------------------------------------
-- OSP$NARRATIVE_TYPE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$NARRATIVE_TYPE AS 
select NARRATIVE_TYPE_CODE,DESCRIPTION,SYSTEM_GENERATED,ALLOW_MULTIPLE,NARRATIVE_TYPE_GROUP,UPDATE_TIMESTAMP,
	UPDATE_USER
	from NARRATIVE_TYPE
 
/

-- -----------------------------------------------------------------------
-- OSP$NARRATIVE_USER_RIGHTS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$NARRATIVE_USER_RIGHTS AS 
select PROPOSAL_NUMBER,MODULE_NUMBER,USER_ID,ACCESS_TYPE,UPDATE_TIMESTAMP,UPDATE_USER
	from NARRATIVE_USER_RIGHTS
 
/

-- -----------------------------------------------------------------------
-- OSP$NOTICE_OF_OPPORTUNITY
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$NOTICE_OF_OPPORTUNITY AS 
SELECT NOTICE_OF_OPPORTUNITY_CODE, DESCRIPTION, UPDATE_TIMESTAMP, UPDATE_USER
  FROM NOTICE_OF_OPPORTUNITY
 
/

-- -----------------------------------------------------------------------
-- OSP$NSF_CODES
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$NSF_CODES AS 
select NSF_CODE, DESCRIPTION, UPDATE_TIMESTAMP, UPDATE_USER
	from nsf_codes
 
/

-- -----------------------------------------------------------------------
-- OSP$ORGANIZATION
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$ORGANIZATION AS 
select ORGANIZATION_ID, ORGANIZATION_NAME, CONTACT_ADDRESS_ID, ADDRESS,
 CABLE_ADDRESS, TELEX_NUMBER, COUNTY, CONGRESSIONAL_DISTRICT, INCORPORATED_IN,
 INCORPORATED_DATE, NUMBER_OF_EMPLOYEES, IRS_TAX_EXCEMPTION, FEDRAL_EMPLOYER_ID,
 MASS_TAX_EXCEMPT_NUM,AGENCY_SYMBOL, VENDOR_CODE, COM_GOV_ENTITY_CODE,
 MASS_EMPLOYEE_CLAIM, DUNS_NUMBER, DUNS_PLUS_FOUR_NUMBER, DODAC_NUMBER,
 CAGE_NUMBER, HUMAN_SUB_ASSURANCE, ANIMAL_WELFARE_ASSURANCE,  SCIENCE_MISCONDUCT_COMPL_DATE,
 PHS_ACOUNT, NSF_INSTITUTIONAL_CODE, INDIRECT_COST_RATE_AGREEMENT, COGNIZANT_AUDITOR,
 ONR_RESIDENT_REP, UPDATE_TIMESTAMP,  UPDATE_USER
 from ORGANIZATION
 
/

-- -----------------------------------------------------------------------
-- OSP$ORGANIZATION_AUDIT
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$ORGANIZATION_AUDIT AS 
select ORGANIZATION_ID, FISCAL_YEAR, AUDIT_ACCEPTED, AUDIT_COMMENT, UPDATE_TIMESTAMP, UPDATE_USER
	from ORGANIZATION_AUDIT
 
/

-- -----------------------------------------------------------------------
-- OSP$ORGANIZATION_IDC
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$ORGANIZATION_IDC AS 
select ORGANIZATION_ID, IDC_NUMBER, START_DATE, END_DATE, REQUESTED_DATE, IDC_RATE_TYPE_CODE, APPLICABLE_IDC_RATE, IDC_COMMENT, UPDATE_TIMESTAMP, UPDATE_USER
	from ORGANIZATION_IDC
 
/

-- -----------------------------------------------------------------------
-- OSP$ORGANIZATION_TYPE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$ORGANIZATION_TYPE AS 
select ORGANIZATION_ID,ORGANIZATION_TYPE_CODE,UPDATE_TIMESTAMP,UPDATE_USER
	from ORGANIZATION_TYPE
 
/

-- -----------------------------------------------------------------------
-- OSP$ORGANIZATION_TYPE_LIST
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$ORGANIZATION_TYPE_LIST AS 
select ORGANIZATION_TYPE_CODE, DESCRIPTION, UPDATE_TIMESTAMP, UPDATE_USER
	from ORGANIZATION_TYPE_LIST
 
/

-- -----------------------------------------------------------------------
-- OSP$ORGANIZATION_YNQ
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$ORGANIZATION_YNQ AS 
select ORGANIZATION_ID, QUESTION_ID, ANSWER, EXPLANATION, REVIEW_DATE, UPDATE_TIMESTAMP, UPDATE_USER
	from ORGANIZATION_YNQ
 
/

-- -----------------------------------------------------------------------
-- OSP$PARAMETER
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$PARAMETER AS 
SELECT UPPER (PARM_NM) PARAMETER, 
       to_date('01-JAN-2000','DD-MON-YYYY') EFFECTIVE_DATE, 
       TXT VALUE, 
       to_date('01-JAN-2000','DD-MON-YYYY') UPDATE_TIMESTAMP, 
       'COEUS' UPDATE_USER 
FROM KRNS_PARM_T 
WHERE PARM_TYP_CD = 'CONFG'
 
/

-- -----------------------------------------------------------------------
-- OSP$PERSON_BIO
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$PERSON_BIO AS 
select null,null,null,null,null,null,null,null,null
	from dual
 
/

-- -----------------------------------------------------------------------
-- OSP$PERSON_BIO_PDF
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$PERSON_BIO_PDF AS 
select null,null,null,null,null,null
	from dual
 
/

-- -----------------------------------------------------------------------
-- OSP$PERSON_BIO_SOURCE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$PERSON_BIO_SOURCE AS 
select null,null,null,null,null,null,null,null,null
	from dual
 
/

-- -----------------------------------------------------------------------
-- OSP$PERSON_EDITABLE_FIELDS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$PERSON_EDITABLE_FIELDS AS 
select "FIELD_NAME","ACTIVE_FLAG","UPDATE_TIMESTAMP","UPDATE_USER","VER_NBR","OBJ_ID"
	from PERSON_EDITABLE_FIELDS
 
/

-- -----------------------------------------------------------------------
-- OSP$PERSON_TRAINING
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$PERSON_TRAINING AS 
SELECT 
	PERSON_ID, 
	TRAINING_NUMBER, 
	TRAINING_CODE, 
	DATE_REQUESTED, 
	DATE_SUBMITTED, 
	DATE_ACKNOWLEDGED, 
	FOLLOWUP_DATE, 
	SCORE, 
	COMMENTS, 
	UPDATE_TIMESTAMP, 
	UPDATE_USER
FROM PERSON_TRAINING
 
/

-- -----------------------------------------------------------------------
-- OSP$PROPOSAL
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$PROPOSAL AS 
SELECT 
    P.PROPOSAL_NUMBER, 
    SPONSOR_PROPOSAL_NUMBER, 
    P.SEQUENCE_NUMBER, 
    PROPOSAL_TYPE_CODE, 
    CURRENT_ACCOUNT_NUMBER, 
    TITLE, 
    SPONSOR_CODE, 
    ROLODEX_ID, 
    NOTICE_OF_OPPORTUNITY_CODE, 
    GRAD_STUD_HEADCOUNT, 
    GRAD_STUD_PERSON_MONTHS, 
    TYPE_OF_ACCOUNT, 
    ACTIVITY_TYPE_CODE, 
    REQUESTED_START_DATE_INITIAL, 
    REQUESTED_START_DATE_TOTAL, 
    REQUESTED_END_DATE_INITIAL, 
    REQUESTED_END_DATE_TOTAL, 
    TOTAL_DIRECT_COST_INITIAL, 
    TOTAL_DIRECT_COST_TOTAL, 
    TOTAL_INDIRECT_COST_INITIAL, 
    TOTAL_INDIRECT_COST_TOTAL, 
    NUMBER_OF_COPIES, 
    DEADLINE_DATE, 
    DEADLINE_TYPE, 
    MAIL_BY, 
    MAIL_TYPE, 
    MAIL_ACCOUNT_NUMBER, 
    SUBCONTRACT_FLAG, 
    COST_SHARING_INDICATOR, 
    IDC_RATE_INDICATOR, 
    SPECIAL_REVIEW_INDICATOR, 
    STATUS_CODE, 
    SCIENCE_CODE_INDICATOR, 
    NSF_CODE, 
    PRIME_SPONSOR_CODE, 
    CREATE_TIMESTAMP, 
    INITIAL_CONTRACT_ADMIN, 
    IP_REVIEW_REQ_TYPE_CODE, 
    REVIEW_SUBMISSION_DATE, 
    REVIEW_RECEIVE_DATE, 
    REVIEW_RESULT_CODE, 
    IP_REVIEWER, 
    IP_REVIEW_ACTIVITY_INDICATOR, 
    CURRENT_AWARD_NUMBER, 
    CFDA_NUMBER, 
    OPPORTUNITY, 
    P.UPDATE_TIMESTAMP, 
    P.UPDATE_USER, 
    AWARD_TYPE_CODE
FROM PROPOSAL P, IP_REVIEW R
where P.PROPOSAL_NUMBER=R.PROPOSAL_NUMBER and R.IP_REVIEW_SEQUENCE_STATUS='ACTIVE'
 
/

-- -----------------------------------------------------------------------
-- OSP$PROPOSAL_ADMIN_DETAILS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$PROPOSAL_ADMIN_DETAILS AS 
SELECT
B.PROPOSAL_NUMBER DEV_PROPOSAL_NUMBER,
C.PROPOSAL_NUMBER INST_PROPOSAL_NUMBER,
C.SEQUENCE_NUMBER INST_PROP_SEQUENCE_NUMBER,
A.DATE_SUBMITTED_BY_DEPT DATE_SUBMITTED_BY_DEPT, 
A.DATE_RETURNED_TO_DEPT DATE_RETURNED_TO_DEPT, 
A.DATE_APPROVED_BY_OSP DATE_APPROVED_BY_OSP, 
A.DATE_SUBMITTED_TO_AGENCY DATE_SUBMITTED_TO_AGENCY, 
A.INST_PROP_CREATE_DATE INST_PROP_CREATE_DATE, 
A.INST_PROP_CREATE_USER INST_PROP_CREATE_USER,
A.SIGNED_BY SIGNED_BY, 
A.SUBMISSION_TYPE SUBMISSION_TYPE
FROM PROPOSAL_ADMIN_DETAILS A, EPS_PROPOSAL B, PROPOSAL C
WHERE A.INST_PROPOSAL_ID = C.PROPOSAL_ID AND
A.DEV_PROPOSAL_NUMBER = B.PROPOSAL_NUMBER
 
/

-- -----------------------------------------------------------------------
-- OSP$PROPOSAL_COMMENTS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$PROPOSAL_COMMENTS AS 
SELECT
    PROPOSAL_NUMBER,
    SEQUENCE_NUMBER,
    COMMENT_TYPE_CODE COMMENT_CODE,
    COMMENTS,
    UPDATE_TIMESTAMP,
    UPDATE_USER
FROM PROPOSAL_COMMENTS
 
/

-- -----------------------------------------------------------------------
-- OSP$PROPOSAL_COST_SHARING
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$PROPOSAL_COST_SHARING AS 
SELECT
    PROPOSAL_NUMBER,
    SEQUENCE_NUMBER,
    FISCAL_YEAR,
    COST_SHARING_PERCENTAGE,
    COST_SHARING_TYPE_CODE,
    SOURCE_ACCOUNT,
    AMOUNT,
    UPDATE_TIMESTAMP,
    UPDATE_USER
FROM PROPOSAL_COST_SHARING
 
/

-- -----------------------------------------------------------------------
-- OSP$PROPOSAL_CUSTOM_DATA
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$PROPOSAL_CUSTOM_DATA AS 
SELECT
	PROPOSAL_NUMBER,
	SEQUENCE_NUMBER,
	CA.NAME COLUMN_NAME,
	PCD.VALUE COLUMN_VALUE,
	PCD.UPDATE_TIMESTAMP UPDATE_TIMESTAMP,
	PCD.UPDATE_USER UPDATE_USER
FROM PROPOSAL_CUSTOM_DATA PCD, CUSTOM_ATTRIBUTE CA
WHERE PCD.CUSTOM_ATTRIBUTE_ID = CA.ID
 
/

-- -----------------------------------------------------------------------
-- OSP$PROPOSAL_IDC_RATE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$PROPOSAL_IDC_RATE AS 
SELECT
    PROPOSAL_NUMBER,
    SEQUENCE_NUMBER,
    APPLICABLE_IDC_RATE,
    IDC_RATE_TYPE_CODE,
    FISCAL_YEAR,
    ON_CAMPUS_FLAG,
    UNDERRECOVERY_OF_IDC,
    SOURCE_ACCOUNT,
    UPDATE_TIMESTAMP,
    UPDATE_USER
FROM PROPOSAL_IDC_RATE
 
/

-- -----------------------------------------------------------------------
-- OSP$PROPOSAL_INV_CERTIFICATION
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$PROPOSAL_INV_CERTIFICATION AS 
select A.PROPOSAL_NUMBER,B.PERSON_ID,CERTIFIED_FLAG,DATE_CERTIFIED,DATE_RECEIVED_BY_OSP,A.UPDATE_TIMESTAMP,
	A.UPDATE_USER
	from PROPOSAL_INV_CERTIFICATION A, EPS_PROP_PERSON B
	where B.PROPOSAL_NUMBER = A.PROPOSAL_NUMBER AND B.PROP_PERSON_NUMBER = A.PROP_PERSON_NUMBER
 
/

-- -----------------------------------------------------------------------
-- OSP$PROPOSAL_IP_REV_ACTIVITY
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$PROPOSAL_IP_REV_ACTIVITY AS 
SELECT
    PROPOSAL_NUMBER,
    SEQUENCE_NUMBER,
    ACTIVITY_NUMBER,
    IP_REVIEW_ACTIVITY_TYPE_CODE,
    ACTIVITY_DATE,
    COMMENTS,
    UPDATE_TIMESTAMP,
    UPDATE_USER
FROM PROPOSAL_IP_REV_ACTIVITY
 
/

-- -----------------------------------------------------------------------
-- OSP$PROPOSAL_LOG
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$PROPOSAL_LOG AS 
SELECT
    PROPOSAL_NUMBER,
    PROPOSAL_TYPE_CODE,
    TITLE,
    PI_ID,
    PI_NAME,
    LEAD_UNIT,
    SPONSOR_CODE,
    SPONSOR_NAME,
    LOG_STATUS,
    COMMENTS,
    UPDATE_TIMESTAMP,
    UPDATE_USER,
    CREATE_TIMESTAMP,
    CREATE_USER,
    DEADLINE_DATE
FROM PROPOSAL_LOG
 
/

-- -----------------------------------------------------------------------
-- OSP$PROPOSAL_NOTEPAD
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$PROPOSAL_NOTEPAD AS 
SELECT
    PROPOSAL_NUMBER,
    ENTRY_NUMBER,
    COMMENTS,
    RESTRICTED_VIEW,
    UPDATE_TIMESTAMP,
    UPDATE_USER
FROM PROPOSAL_NOTEPAD
 
/

-- -----------------------------------------------------------------------
-- OSP$PROPOSAL_SCIENCE_CODE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$PROPOSAL_SCIENCE_CODE AS 
SELECT
    PROPOSAL_NUMBER,
    SEQUENCE_NUMBER,
    SCIENCE_KEYWORD_CODE SCIENCE_CODE,
    UPDATE_TIMESTAMP,
    UPDATE_USER
FROM PROPOSAL_SCIENCE_KEYWORD
 
/

-- -----------------------------------------------------------------------
-- OSP$PROPOSAL_SPECIAL_REVIEW
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$PROPOSAL_SPECIAL_REVIEW AS 
SELECT
    PROPOSAL_NUMBER,
    SEQUENCE_NUMBER,
    SPECIAL_REVIEW_NUMBER,
    SPECIAL_REVIEW_CODE,
    APPROVAL_TYPE_CODE,
    PROTOCOL_NUMBER,
    APPLICATION_DATE,
    APPROVAL_DATE,
    COMMENTS,
    UPDATE_USER,
    UPDATE_TIMESTAMP
FROM PROPOSAL_SPECIAL_REVIEW
 
/

-- -----------------------------------------------------------------------
-- OSP$PROPOSAL_STATUS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$PROPOSAL_STATUS AS 
SELECT
    PROPOSAL_STATUS_CODE,
    DESCRIPTION,
    UPDATE_TIMESTAMP,
    UPDATE_USER
FROM PROPOSAL_STATUS
 
/

-- -----------------------------------------------------------------------
-- OSP$PROPOSAL_TYPE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$PROPOSAL_TYPE AS 
select PROPOSAL_TYPE_CODE, DESCRIPTION, UPDATE_TIMESTAMP, UPDATE_USER
	from proposal_type
 
/

-- -----------------------------------------------------------------------
-- OSP$PROPOSAL_UNITS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$PROPOSAL_UNITS AS 
SELECT
    PROPOSAL_NUMBER,
    SEQUENCE_NUMBER,
    PERSON_ID,
    UNIT_NUMBER,
    LEAD_UNIT_FLAG,
    UPDATE_TIMESTAMP,
    UPDATE_USER
FROM PROPOSAL_UNITS
 
/

-- -----------------------------------------------------------------------
-- OSP$PROPOSAL_UNIT_CREDIT_SPLIT
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$PROPOSAL_UNIT_CREDIT_SPLIT AS 
SELECT
    PROPOSAL_NUMBER,
    SEQUENCE_NUMBER,
    PERSON_ID,
    UNIT_NUMBER,
    INV_CREDIT_TYPE_CODE,
    CREDIT,
    UPDATE_TIMESTAMP,
    UPDATE_USER
FROM PROPOSAL_UNIT_CREDIT_SPLIT
 
/

-- -----------------------------------------------------------------------
-- OSP$PROP_UNIT_ADMINISTRATORS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$PROP_UNIT_ADMINISTRATORS AS 
SELECT
    PROPOSAL_NUMBER,
    SEQUENCE_NUMBER,
    UNIT_ADMINISTRATOR_TYPE_CODE,
    ADMINISTRATOR,
    UPDATE_TIMESTAMP,
    UPDATE_USER
FROM PROP_UNIT_ADMINISTRATORS
 
/

-- -----------------------------------------------------------------------
-- OSP$PROTOCOL
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$PROTOCOL AS 
SELECT
	PROTOCOL_NUMBER,
	SEQUENCE_NUMBER,
	PROTOCOL_TYPE_CODE,
	PROTOCOL_STATUS_CODE,
	TITLE,
	DESCRIPTION,
	APPLICATION_DATE,
	APPROVAL_DATE,
	EXPIRATION_DATE,
	LAST_APPROVAL_DATE,
	FDA_APPLICATION_NUMBER,
	REFERENCE_NUMBER_1,
	REFERENCE_NUMBER_2,
	IS_BILLABLE,
	SPECIAL_REVIEW_INDICATOR,
	VULNERABLE_SUBJECT_INDICATOR,
	KEY_STUDY_PERSON_INDICATOR,
	FUNDING_SOURCE_INDICATOR,
	CORRESPONDENT_INDICATOR,
	REFERENCE_INDICATOR,
	RELATED_PROJECTS_INDICATOR,
	CREATE_TIMESTAMP,
	CREATE_USER,
	UPDATE_TIMESTAMP,
	UPDATE_USER
FROM PROTOCOL
 
/

-- -----------------------------------------------------------------------
-- OSP$PROTOCOL_ACTIONS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$PROTOCOL_ACTIONS AS 
SELECT
  PROTOCOL_NUMBER,
  SEQUENCE_NUMBER,
  ACTION_ID,
  PROTOCOL_ACTION_TYPE_CODE,
  SUBMISSION_NUMBER,
  COMMENTS,
  ACTUAL_ACTION_DATE as UPDATE_TIMESTAMP,
  UPDATE_USER,
  ACTION_DATE
FROM PROTOCOL_ACTIONS
 
/

-- -----------------------------------------------------------------------
-- OSP$PROTOCOL_ACTION_TYPE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$PROTOCOL_ACTION_TYPE AS 
SELECT
  PROTOCOL_ACTION_TYPE_CODE,
  DESCRIPTION,
  TRIGGER_SUBMISSION,
  TRIGGER_CORRESPONDENCE,
  UPDATE_TIMESTAMP,
  UPDATE_USER
FROM PROTOCOL_ACTION_TYPE
 
/

-- -----------------------------------------------------------------------
-- OSP$PROTOCOL_CONTINGENCY
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$PROTOCOL_CONTINGENCY AS 
SELECT 
    PROTOCOL_CONTINGENCY_CODE, 
    DESCRIPTION, 
    UPDATE_TIMESTAMP, 
    UPDATE_USER
FROM PROTOCOL_CONTINGENCY
 
/

-- -----------------------------------------------------------------------
-- OSP$PROTOCOL_CORRESPONDENCE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$PROTOCOL_CORRESPONDENCE AS 
SELECT
    PROTOCOL_NUMBER,
    SEQUENCE_NUMBER,
    ACTION_ID,
    PROTO_CORRESP_TYPE_CODE,
    CORRESPONDENCE,
    FINAL_FLAG,
    UPDATE_TIMESTAMP,
    UPDATE_USER
FROM PROTOCOL_CORRESPONDENCE
 
/

-- -----------------------------------------------------------------------
-- OSP$PROTOCOL_DOCUMENT_STATUS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$PROTOCOL_DOCUMENT_STATUS AS 
SELECT STATUS_CD, DESCRIPTION, UPDATE_TIMESTAMP, UPDATE_USER
    FROM PROTOCOL_ATTACHMENT_STATUS
 
/

-- -----------------------------------------------------------------------
-- OSP$PROTOCOL_DOCUMENT_TYPE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$PROTOCOL_DOCUMENT_TYPE AS 
SELECT t.TYPE_CD, t.DESCRIPTION, t.UPDATE_TIMESTAMP, t.UPDATE_USER, g.GROUP_CD
    FROM PROTOCOL_ATTACHMENT_TYPE t, PROTOCOL_ATTACHMENT_GROUP g, PROTOCOL_ATTACHMENT_TYPE_GROUP tg
    WHERE t.TYPE_CD = tg.TYPE_CD AND g.GROUP_CD = tg.GROUP_CD
 
/

-- -----------------------------------------------------------------------
-- OSP$PROTOCOL_EXEMPT_CHKLST
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$PROTOCOL_EXEMPT_CHKLST AS 
SELECT
    PROTOCOL_NUMBER,
    SEQUENCE_NUMBER,
    SUBMISSION_NUMBER,
    EXEMPT_STUDIES_CHECKLIST_CODE,
    UPDATE_TIMESTAMP,
    UPDATE_USER
FROM PROTOCOL_EXEMPT_CHKLST
 
/

-- -----------------------------------------------------------------------
-- OSP$PROTOCOL_EXPIDITED_CHKLST
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$PROTOCOL_EXPIDITED_CHKLST AS 
SELECT
    PROTOCOL_NUMBER,
    SEQUENCE_NUMBER,
    SUBMISSION_NUMBER,
    EXPEDITED_REV_CHKLST_CODE,
    UPDATE_TIMESTAMP,
    UPDATE_USER
FROM PROTOCOL_EXPIDITED_CHKLST
 
/

-- -----------------------------------------------------------------------
-- OSP$PROTOCOL_FUNDING_SOURCE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$PROTOCOL_FUNDING_SOURCE AS 
SELECT 
    PROTOCOL_NUMBER, 
    SEQUENCE_NUMBER, 
    FUNDING_SOURCE_TYPE_CODE, 
    FUNDING_SOURCE, 
    UPDATE_TIMESTAMP, 
    UPDATE_USER
FROM PROTOCOL_FUNDING_SOURCE
 
/

-- -----------------------------------------------------------------------
-- OSP$PROTOCOL_INVESTIGATORS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$PROTOCOL_INVESTIGATORS AS 
SELECT PROTOCOL_NUMBER, SEQUENCE_NUMBER, 
cast(DECODE(TO_CHAR(ROLODEX_ID),NULL,PERSON_ID,TO_CHAR(ROLODEX_ID)) AS VARCHAR2(10)) PERSON_ID,
PERSON_NAME, DECODE(PERSON_ID,NULL,'Y','N') NON_EMPLOYEE_FLAG, 
DECODE(PROTOCOL_PERSON_ROLE_ID,'PI','Y','N') PRINCIPAL_INVESTIGATOR_FLAG,
AFFILIATION_TYPE_CODE, UPDATE_TIMESTAMP, UPDATE_USER
FROM PROTOCOL_PERSONS
WHERE PROTOCOL_PERSON_ROLE_ID IN ('PI','COI')
 
/

-- -----------------------------------------------------------------------
-- OSP$PROTOCOL_KEY_PERSONS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$PROTOCOL_KEY_PERSONS AS 
SELECT
PROTOCOL_NUMBER, SEQUENCE_NUMBER,
DECODE(PERSON_ID,NULL,TO_CHAR(ROLODEX_ID),PERSON_ID) PERSON_ID, 
PERSON_NAME, B.DESCRIPTION PERSON_ROLE,
DECODE(PERSON_ID,NULL,'N','Y') NON_EMPLOYEE_FLAG, 
AFFILIATION_TYPE_CODE, A.UPDATE_TIMESTAMP UPDATE_TIMESTAMP, A.UPDATE_USER UPDATE_USER
FROM PROTOCOL_PERSONS A, PROTOCOL_PERSON_ROLES B 
WHERE B.PROTOCOL_PERSON_ROLE_ID = A.PROTOCOL_PERSON_ROLE_ID AND
A.PROTOCOL_PERSON_ROLE_ID NOT IN ('PI','COI')
 
/

-- -----------------------------------------------------------------------
-- OSP$PROTOCOL_LOCATION
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$PROTOCOL_LOCATION AS 
SELECT 
	PROTOCOL_NUMBER, 
	SEQUENCE_NUMBER, 
	PROTOCOL_ORG_TYPE_CODE, 
	ORGANIZATION_ID, 
	ROLODEX_ID, 
	UPDATE_TIMESTAMP, 
	UPDATE_USER
FROM PROTOCOL_LOCATION
 
/

-- -----------------------------------------------------------------------
-- OSP$PROTOCOL_MODULES
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$PROTOCOL_MODULES AS 
SELECT
  PROTOCOL_MODULE_CODE,
  DESCRIPTION,
  UPDATE_TIMESTAMP,
  UPDATE_USER
FROM PROTOCOL_MODULES
 
/

-- -----------------------------------------------------------------------
-- OSP$PROTOCOL_ORG_TYPE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$PROTOCOL_ORG_TYPE AS 
SELECT 
	PROTOCOL_ORG_TYPE_CODE, 
	DESCRIPTION, 
	UPDATE_TIMESTAMP, 
	UPDATE_USER
FROM PROTOCOL_ORG_TYPE
 
/

-- -----------------------------------------------------------------------
-- OSP$PROTOCOL_REFERENCES
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$PROTOCOL_REFERENCES AS 
select
  protocol_number,
  sequence_number,
  protocol_reference_number,
  protocol_reference_type_code,
  reference_key,
  application_date,
  approval_date,
  comments,
  update_timestamp,
  update_user
from protocol_references
 
/

-- -----------------------------------------------------------------------
-- OSP$PROTOCOL_REFERENCE_TYPE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$PROTOCOL_REFERENCE_TYPE AS 
select
  protocol_reference_type_code,
  description,
  update_timestamp,
  update_user
from protocol_reference_type
 
/

-- -----------------------------------------------------------------------
-- OSP$PROTOCOL_RESEARCH_AREAS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$PROTOCOL_RESEARCH_AREAS AS 
SELECT
  PROTOCOL_NUMBER,
  SEQUENCE_NUMBER,
  RESEARCH_AREA_CODE,
  UPDATE_TIMESTAMP,
  UPDATE_USER
FROM PROTOCOL_RESEARCH_AREAS
 
/

-- -----------------------------------------------------------------------
-- OSP$PROTOCOL_REVIEWERS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$PROTOCOL_REVIEWERS AS 
SELECT
    PROTOCOL_NUMBER,
    SEQUENCE_NUMBER,
    SUBMISSION_NUMBER,
    PERSON_ID,
    NON_EMPLOYEE_FLAG,
    REVIEWER_TYPE_CODE,
    UPDATE_TIMESTAMP,
    UPDATE_USER
FROM PROTOCOL_REVIEWERS
 
/

-- -----------------------------------------------------------------------
-- OSP$PROTOCOL_REVIEWER_TYPE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$PROTOCOL_REVIEWER_TYPE AS 
SELECT
  REVIEWER_TYPE_CODE,
  DESCRIPTION,
  UPDATE_TIMESTAMP,
  UPDATE_USER
FROM PROTOCOL_REVIEWER_TYPE
 
/

-- -----------------------------------------------------------------------
-- OSP$PROTOCOL_REVIEW_TYPE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$PROTOCOL_REVIEW_TYPE AS 
SELECT PROTOCOL_REVIEW_TYPE_CODE, DESCRIPTION, UPDATE_TIMESTAMP, UPDATE_USER, null as AVAILABLE_IN_LITE
FROM PROTOCOL_REVIEW_TYPE
 
/

-- -----------------------------------------------------------------------
-- OSP$PROTOCOL_RISK_LEVELS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$PROTOCOL_RISK_LEVELS AS 
SELECT
	PROTOCOL_NUMBER,
	SEQUENCE_NUMBER,
	RISK_LEVEL_CODE,
	COMMENTS,
	DATE_ASSIGNED,
	DATE_UPDATED,
	STATUS,
	UPDATE_USER,
	UPDATE_TIMESTAMP
FROM PROTOCOL_RISK_LEVELS
 
/

-- -----------------------------------------------------------------------
-- OSP$PROTOCOL_SPECIAL_REVIEW
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$PROTOCOL_SPECIAL_REVIEW AS 
SELECT PROTOCOL_NUMBER,
          0 as SEQUENCE_NUMBER,
          SPECIAL_REVIEW_NUMBER,
          SPECIAL_REVIEW_CODE,
          APPROVAL_TYPE_CODE,
          null as SP_REV_PROTOCOL_NUMBER,
          APPLICATION_DATE,
          APPROVAL_DATE,
          COMMENTS,
          UPDATE_TIMESTAMP,
          UPDATE_USER
FROM PROTOCOL_SPECIAL_REVIEW
 
/

-- -----------------------------------------------------------------------
-- OSP$PROTOCOL_STATUS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$PROTOCOL_STATUS AS 
SELECT
	PROTOCOL_STATUS_CODE,
	DESCRIPTION,
	UPDATE_TIMESTAMP,
	UPDATE_USER
FROM PROTOCOL_STATUS
 
/

-- -----------------------------------------------------------------------
-- OSP$PROTOCOL_SUBMISSION
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$PROTOCOL_SUBMISSION AS 
SELECT
    PROTOCOL_NUMBER,
    SEQUENCE_NUMBER,
    SUBMISSION_NUMBER,
    SCHEDULE_ID,
    COMMITTEE_ID,
    SUBMISSION_TYPE_CODE,
    SUBMISSION_TYPE_QUAL_CODE,
    PROTOCOL_REVIEW_TYPE_CODE
    SUBMISSION_STATUS_CODE,
    SUBMISSION_DATE,
    COMMENTS,
    YES_VOTE_COUNT,
    NO_VOTE_COUNT,
    ABSTAINER_COUNT,
    VOTING_COMMENTS,
    UPDATE_TIMESTAMP,
    UPDATE_USER
FROM PROTOCOL_SUBMISSION
 
/

-- -----------------------------------------------------------------------
-- OSP$PROTOCOL_SUBMISSION_DOC
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$PROTOCOL_SUBMISSION_DOC AS 
SELECT
    PROTOCOL_NUMBER,
    SEQUENCE_NUMBER,
    SUBMISSION_NUMBER,
    DOCUMENT_ID,
    FILE_NAME,
    DOCUMENT,
    UPDATE_TIMESTAMP,
    UPDATE_USER
FROM PROTOCOL_SUBMISSION_DOC
 
/

-- -----------------------------------------------------------------------
-- OSP$PROTOCOL_TYPE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$PROTOCOL_TYPE AS 
SELECT
	PROTOCOL_TYPE_CODE,
	DESCRIPTION,
	UPDATE_TIMESTAMP,
	UPDATE_USER
FROM PROTOCOL_TYPE
 
/

-- -----------------------------------------------------------------------
-- OSP$PROTOCOL_UNITS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$PROTOCOL_UNITS AS 
SELECT 
	PROTOCOL_NUMBER, 
	SEQUENCE_NUMBER, 
	UNIT_NUMBER, 
	LEAD_UNIT_FLAG, 
	PERSON_ID, 
	UPDATE_TIMESTAMP, 
	UPDATE_USER
FROM PROTOCOL_UNITS
 
/

-- -----------------------------------------------------------------------
-- OSP$PROTOCOL_VOTE_ABSTAINEES
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$PROTOCOL_VOTE_ABSTAINEES AS 
SELECT 
    PROTOCOL.PROTOCOL_NUMBER, 
    PROTOCOL.SEQUENCE_NUMBER, 
    COMM_SCHEDULE.SCHEDULE_ID, 
    PROTOCOL_VOTE_ABSTAINEES.PERSON_ID, 
    PROTOCOL_VOTE_ABSTAINEES.NON_EMPLOYEE_FLAG, 
    PROTOCOL_VOTE_ABSTAINEES.COMMENTS, 
    PROTOCOL_VOTE_ABSTAINEES.UPDATE_TIMESTAMP, 
    PROTOCOL_VOTE_ABSTAINEES.UPDATE_USER
FROM PROTOCOL_VOTE_ABSTAINEES,
     COMM_SCHEDULE,
     PROTOCOL
WHERE COMM_SCHEDULE.ID = PROTOCOL_VOTE_ABSTAINEES.SCHEDULE_ID_FK and
      PROTOCOL.PROTOCOL_ID = PROTOCOL_VOTE_ABSTAINEES.PROTOCOL_ID_FK
 
/

-- -----------------------------------------------------------------------
-- OSP$PROTOCOL_VULNERABLE_SUB
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$PROTOCOL_VULNERABLE_SUB AS 
SELECT 
    PROTOCOL_NUMBER, 
    SEQUENCE_NUMBER, 
    VULNERABLE_SUBJECT_TYPE_CODE, 
    SUBJECT_COUNT, 
    UPDATE_TIMESTAMP, 
    UPDATE_USER
FROM PROTOCOL_VULNERABLE_SUB
 
/

-- -----------------------------------------------------------------------
-- OSP$PROTO_AMEND_RENEWAL
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$PROTO_AMEND_RENEWAL AS 
SELECT
  PROTO_AMEND_REN_NUMBER,
  DATE_CREATED,
  SUMMARY,
  PROTOCOL_NUMBER,
  SEQUENCE_NUMBER,
  UPDATE_TIMESTAMP,
  UPDATE_USER
FROM PROTO_AMEND_RENEWAL
 
/

-- -----------------------------------------------------------------------
-- OSP$PROTO_AMEND_RENEW_MODULES
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$PROTO_AMEND_RENEW_MODULES AS 
SELECT
  PROTO_AMEND_RENEWAL_NUMBER,
  PROTOCOL_NUMBER,
  PROTOCOL_MODULE_CODE,
  UPDATE_TIMESTAMP,
  UPDATE_USER
FROM PROTO_AMEND_RENEW_MODULES
 
/

-- -----------------------------------------------------------------------
-- OSP$PROTO_CORRESP_TEMPL
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$PROTO_CORRESP_TEMPL AS 
SELECT 
    PROTO_CORRESP_TYPE_CODE, 
    COMMITTEE_ID, 
    CORRESPONDENCE_TEMPLATE AS CORESPONDENCE_TEMPLATE, 
    UPDATE_TIMESTAMP, 
    UPDATE_USER
FROM PROTO_CORRESP_TEMPL
/

-- -----------------------------------------------------------------------
-- OSP$PROTO_CORRESP_TYPE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$PROTO_CORRESP_TYPE AS 
SELECT 
    PROTO_CORRESP_TYPE_CODE, 
    DESCRIPTION, 
    MODULE_ID, 
    UPDATE_TIMESTAMP, 
    UPDATE_USER
FROM PROTO_CORRESP_TYPE
/

-- -----------------------------------------------------------------------
-- OSP$QUESTION
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$QUESTION AS 
SELECT 
    QUESTION.QUESTION_ID, 
    QUESTION.QUESTION, 
    QUESTION.MAX_ANSWERS, 
    NULL AS VALID_ANSWER, 
    QUESTION.LOOKUP_RETURN AS LOOKUP_NAME, 
    QUESTION_TYPES.QUESTION_TYPE_NAME AS ANSWER_DATA_TYPE, 
    QUESTION.ANSWER_MAX_LENGTH, 
    QUESTION.LOOKUP_CLASS AS LOOKUP_GUI, 
    QUESTION.UPDATE_TIMESTAMP, 
    QUESTION.UPDATE_USER, 
    QUESTION.GROUP_TYPE_CODE
FROM QUESTION,
     QUESTION_TYPES
WHERE QUESTION.QUESTION_TYPE_ID = QUESTION_TYPES.QUESTION_TYPE_ID
 
/

-- -----------------------------------------------------------------------
-- OSP$QUESTIONNAIRE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$QUESTIONNAIRE AS 
SELECT
    QUESTIONNAIRE_ID,
    NAME,
    DESCRIPTION,
    UPDATE_TIMESTAMP,
    UPDATE_USER,
    IS_FINAL
FROM QUESTIONNAIRE
 
/

-- -----------------------------------------------------------------------
-- OSP$QUESTIONNAIRE_ANSWERS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$QUESTIONNAIRE_ANSWERS AS 
SELECT 
    QUESTIONNAIRE_ANSWER.QUESTIONNAIRE_AH_ID_FK, 
    QUESTION.QUESTION_ID, 
    QUESTIONNAIRE_ANSWER.QUESTION_NUMBER, 
    QUESTIONNAIRE_ANSWER.ANSWER_NUMBER, 
    QUESTIONNAIRE_ANSWER.ANSWER, 
    QUESTIONNAIRE_ANSWER.UPDATE_TIMESTAMP, 
    QUESTIONNAIRE_ANSWER.UPDATE_USER
FROM QUESTIONNAIRE_ANSWER,
     QUESTION
WHERE QUESTION.QUESTION_REF_ID = QUESTIONNAIRE_ANSWER.QUESTION_REF_ID_FK
 
/

-- -----------------------------------------------------------------------
-- OSP$QUESTIONNAIRE_ANS_HEADER
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$QUESTIONNAIRE_ANS_HEADER AS 
SELECT 
    MODULE_ITEM_CODE, 
    MODULE_ITEM_KEY, 
    MODULE_SUB_ITEM_CODE, 
    MODULE_SUB_ITEM_KEY, 
    QUESTIONNAIRE.QUESTIONNAIRE_ID, 
    QUESTIONNAIRE_ANSWER_HEADER_ID, 
    QUESTIONNAIRE_ANSWER_HEADER.UPDATE_TIMESTAMP, 
    QUESTIONNAIRE_ANSWER_HEADER.UPDATE_USER, 
    QUESTIONNAIRE_COMPLETED_FLAG
FROM QUESTIONNAIRE_ANSWER_HEADER,
     QUESTIONNAIRE 
WHERE QUESTIONNAIRE.QUESTIONNAIRE_REF_ID = QUESTIONNAIRE_ANSWER_HEADER.QUESTIONNAIRE_REF_ID_FK
 
/

-- -----------------------------------------------------------------------
-- OSP$QUESTIONNAIRE_QUESTIONS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$QUESTIONNAIRE_QUESTIONS AS 
SELECT 
    QUESTIONNAIRE.QUESTIONNAIRE_ID, 
    QUESTION.QUESTION_ID, 
    QUESTIONNAIRE_QUESTIONS.QUESTION_NUMBER, 
    QUESTIONNAIRE_QUESTIONS.PARENT_QUESTION_NUMBER, 
    QUESTIONNAIRE_QUESTIONS.CONDITION_FLAG, 
    QUESTIONNAIRE_QUESTIONS.CONDITION_TYPE, 
    QUESTIONNAIRE_QUESTIONS.CONDITION_VALUE, 
    QUESTIONNAIRE_QUESTIONS.UPDATE_TIMESTAMP, 
    QUESTIONNAIRE_QUESTIONS.UPDATE_USER, 
    QUESTIONNAIRE_QUESTIONS.QUESTION_SEQ_NUMBER
FROM QUESTIONNAIRE_QUESTIONS,
     QUESTION,
     QUESTIONNAIRE
WHERE QUESTION.QUESTION_REF_ID = QUESTIONNAIRE_QUESTIONS.QUESTION_REF_ID_FK and
      QUESTIONNAIRE.QUESTIONNAIRE_REF_ID = QUESTIONNAIRE_QUESTIONS.QUESTIONNAIRE_REF_ID_FK
 
/

-- -----------------------------------------------------------------------
-- OSP$QUESTIONNAIRE_USAGE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$QUESTIONNAIRE_USAGE AS 
SELECT 
    MODULE_ITEM_CODE, 
    MODULE_SUB_ITEM_CODE, 
    QUESTIONNAIRE.QUESTIONNAIRE_ID, 
    RULE_ID, 
    QUESTIONNAIRE_LABEL, 
    QUESTIONNAIRE_USAGE.UPDATE_TIMESTAMP, 
    QUESTIONNAIRE_USAGE.UPDATE_USER
FROM QUESTIONNAIRE_USAGE,
     QUESTIONNAIRE 
WHERE QUESTIONNAIRE.QUESTIONNAIRE_REF_ID = QUESTIONNAIRE_USAGE.QUESTIONNAIRE_REF_ID_FK
 
/

-- -----------------------------------------------------------------------
-- OSP$QUESTION_EXPLANATION
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$QUESTION_EXPLANATION AS 
SELECT 
    QUESTION.QUESTION_ID, 
    QUESTION_EXPLANATION.EXPLANATION_TYPE, 
    QUESTION_EXPLANATION.EXPLANATION, 
    QUESTION_EXPLANATION.UPDATE_TIMESTAMP, 
    QUESTION_EXPLANATION.UPDATE_USER
FROM QUESTION_EXPLANATION,
     QUESTION
WHERE QUESTION.QUESTION_REF_ID = QUESTION_EXPLANATION.QUESTION_REF_ID_FK
 
/

-- -----------------------------------------------------------------------
-- OSP$RATE_CLASS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$RATE_CLASS AS 
select RATE_CLASS_CODE,DESCRIPTION,RATE_CLASS_TYPE,UPDATE_TIMESTAMP,UPDATE_USER
	from RATE_CLASS
 
/

-- -----------------------------------------------------------------------
-- OSP$RATE_TYPE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$RATE_TYPE AS 
select RATE_CLASS_CODE,RATE_TYPE_CODE,DESCRIPTION,UPDATE_TIMESTAMP,UPDATE_USER
	from RATE_TYPE
 
/

-- -----------------------------------------------------------------------
-- OSP$REPORT
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$REPORT AS 
SELECT 
	REPORT_CODE, 
	DESCRIPTION, 
	FINAL_REPORT_FLAG, 
	UPDATE_TIMESTAMP, 
	UPDATE_USER
FROM REPORT
 
/

-- -----------------------------------------------------------------------
-- OSP$REPORT_CLASS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$REPORT_CLASS AS 
SELECT 
	REPORT_CLASS_CODE, 
	DESCRIPTION, 
	UPDATE_TIMESTAMP, 
	UPDATE_USER, 
	GENERATE_REPORT_REQUIREMENTS
FROM REPORT_CLASS
 
/

-- -----------------------------------------------------------------------
-- OSP$RESEARCH_AREAS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$RESEARCH_AREAS AS 
SELECT 
	RESEARCH_AREA_CODE, 
	PARENT_RESEARCH_AREA_CODE, 
	HAS_CHILDREN_FLAG, 
	DESCRIPTION, 
	UPDATE_TIMESTAMP, 
	UPDATE_USER
FROM RESEARCH_AREAS
 
/

-- -----------------------------------------------------------------------
-- OSP$RIGHTS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$RIGHTS AS 
select RIGHT_ID,DESCRIPTION,RIGHT_TYPE,DESCEND_FLAG,UPDATE_USER,UPDATE_TIMESTAMP
	from RIGHTS
 
/

-- -----------------------------------------------------------------------
-- OSP$RISK_LEVEL
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$RISK_LEVEL AS 
SELECT 
	RISK_LEVEL_CODE, 
	DESCRIPTION, 
	UPDATE_TIMESTAMP, 
	UPDATE_USER
FROM RISK_LEVEL
 
/

-- -----------------------------------------------------------------------
-- OSP$ROLE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$ROLE AS 
select ROLE_ID,DESCRIPTION,ROLE_NAME,ROLE_TYPE,OWNED_BY_UNIT,DESCEND_FLAG,
	STATUS_FLAG,CREATE_TIMESTAMP,CREATE_USER,UPDATE_TIMESTAMP,UPDATE_USER
	from ROLE
 
/

-- -----------------------------------------------------------------------
-- OSP$ROLE_RIGHTS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$ROLE_RIGHTS AS 
select RIGHT_ID,ROLE_ID,DESCEND_FLAG,UPDATE_TIMESTAMP,UPDATE_USER
	from ROLE_RIGHTS
 
/

-- -----------------------------------------------------------------------
-- OSP$ROLODEX
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$ROLODEX AS 
select ROLODEX_ID, LAST_NAME, FIRST_NAME, MIDDLE_NAME, SUFFIX, PREFIX, TITLE, ORGANIZATION,
 ADDRESS_LINE_1, ADDRESS_LINE_2, ADDRESS_LINE_3, FAX_NUMBER, EMAIL_ADDRESS, CITY,
 COUNTY, STATE, POSTAL_CODE, COMMENTS,  PHONE_NUMBER, COUNTRY_CODE, SPONSOR_CODE,
 OWNED_BY_UNIT, SPONSOR_ADDRESS_FLAG, DELETE_FLAG, CREATE_USER, UPDATE_TIMESTAMP, UPDATE_USER
 from ROLODEX
 
/

-- -----------------------------------------------------------------------
-- OSP$S2S_APPLICATION
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$S2S_APPLICATION AS 
select PROPOSAL_NUMBER,APPLICATION,UPDATE_TIMESTAMP,UPDATE_USER
	from S2S_APPLICATION
 
/

-- -----------------------------------------------------------------------
-- OSP$S2S_APP_ATTACHMENTS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$S2S_APP_ATTACHMENTS AS 
select CONTENT_ID,PROPOSAL_NUMBER,HASH_CODE,UPDATE_TIMESTAMP,UPDATE_USER,CONTENT_TYPE
	from S2S_APP_ATTACHMENTS
 
/

-- -----------------------------------------------------------------------
-- OSP$S2S_APP_SUBMISSION
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$S2S_APP_SUBMISSION AS 
select PROPOSAL_NUMBER,SUBMISSION_NUMBER,COMMENTS,STATUS,GG_TRACKING_ID,AGENCY_TRACKING_ID,
	RECEIVED_DATE,LAST_MODIFIED_DATE,LAST_NOTIFIED_DATE,UPDATE_TIMESTAMP,UPDATE_USER
	from S2S_APP_SUBMISSION
 
/

-- -----------------------------------------------------------------------
-- OSP$S2S_OPPORTUNITY
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$S2S_OPPORTUNITY AS 
select PROPOSAL_NUMBER,OPPORTUNITY_TITLE,COMPETETION_ID,OPENING_DATE,CLOSING_DATE,SCHEMA_URL,
	INSTRUCTION_URL,OPPORTUNITY_ID,OPPORTUNITY,CFDA_NUMBER,to_number(S2S_SUBMISSION_TYPE_CODE) as S2S_SUBMISSION_TYPE_CODE,
	REVISION_CODE,REVISION_OTHER_DESCRIPTION,UPDATE_TIMESTAMP,UPDATE_USER
	from S2S_OPPORTUNITY
 
/

-- -----------------------------------------------------------------------
-- OSP$S2S_OPP_FORMS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$S2S_OPP_FORMS AS 
select PROPOSAL_NUMBER,OPP_NAME_SPACE,FORM_NAME,MANDATORY,AVAILABLE,INCLUDE,
	UPDATE_TIMESTAMP,UPDATE_USER
	from S2S_OPP_FORMS
 
/

-- -----------------------------------------------------------------------
-- OSP$S2S_SUBMISSION_TYPE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$S2S_SUBMISSION_TYPE AS 
select S2S_SUBMISSION_TYPE_CODE,DESCRIPTION,UPDATE_TIMESTAMP,UPDATE_USER
	from S2S_SUBMISSION_TYPE
 
/

-- -----------------------------------------------------------------------
-- OSP$SCHEDULE_ACT_ITEM_TYPE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$SCHEDULE_ACT_ITEM_TYPE AS 
SELECT 
    SCHEDULE_ACT_ITEM_TYPE_CODE, 
    DESCRIPTION, 
    UPDATE_TIMESTAMP, 
    UPDATE_USER
FROM SCHEDULE_ACT_ITEM_TYPE
 
/

-- -----------------------------------------------------------------------
-- OSP$SCHEDULE_AGENDA
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$SCHEDULE_AGENDA AS 
SELECT 
    COMM_SCHEDULE.SCHEDULE_ID, 
    SCHEDULE_AGENDA.AGENDA_NUMBER, 
    SCHEDULE_AGENDA.AGENDA_NAME, 
    SCHEDULE_AGENDA.PDF_STORE, 
    SCHEDULE_AGENDA.CREATE_TIMESTAMP, 
    SCHEDULE_AGENDA.CREATE_USER, 
    SCHEDULE_AGENDA.UPDATE_TIMESTAMP, 
    SCHEDULE_AGENDA.UPDATE_USER
FROM SCHEDULE_AGENDA,
     COMM_SCHEDULE
WHERE COMM_SCHEDULE.ID = SCHEDULE_AGENDA.SCHEDULE_ID_FK
 
/

-- -----------------------------------------------------------------------
-- OSP$SCHEDULE_STATUS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$SCHEDULE_STATUS AS 
SELECT 
  schedule_status_code,
  description,
  update_timestamp,
  update_user
FROM schedule_status
 
/

-- -----------------------------------------------------------------------
-- OSP$SCHOOL_CODE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$SCHOOL_CODE AS 
select SCHOOL_CODE, DESCRIPTION, UPDATE_TIMESTAMP, UPDATE_USER
	from SCHOOL_CODE
 
/

-- -----------------------------------------------------------------------
-- OSP$SCIENCE_CODE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$SCIENCE_CODE AS 
select science_keyword_code, description, update_timestamp, update_user
from science_keyword
 
/

-- -----------------------------------------------------------------------
-- OSP$SPECIAL_REVIEW
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$SPECIAL_REVIEW AS 
select SPECIAL_REVIEW_CODE, DESCRIPTION, UPDATE_TIMESTAMP, UPDATE_USER
	from SPECIAL_REVIEW
 
/

-- -----------------------------------------------------------------------
-- OSP$SPONSOR
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$SPONSOR AS 
select SPONSOR_CODE,SPONSOR_NAME,ACRONYM,SPONSOR_TYPE_CODE,DUN_AND_BRADSTREET_NUMBER,DUNS_PLUS_FOUR_NUMBER,
	DODAC_NUMBER,CAGE_NUMBER,POSTAL_CODE,STATE,COUNTRY_CODE,
	ROLODEX_ID,AUDIT_REPORT_SENT_FOR_FY,OWNED_BY_UNIT,CREATE_USER,UPDATE_TIMESTAMP,
	UPDATE_USER
	from SPONSOR
 
/

-- -----------------------------------------------------------------------
-- OSP$SPONSOR_FORMS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$SPONSOR_FORMS AS 
SELECT  SPONSOR_CODE, PACKAGE_NUMBER,  PACKAGE_NAME,
  UPDATE_TIMESTAMP, UPDATE_USER
FROM SPONSOR_FORMS
 
/

-- -----------------------------------------------------------------------
-- OSP$SPONSOR_FORM_TEMPLATES
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$SPONSOR_FORM_TEMPLATES AS 
SELECT SPONSOR_CODE,  PACKAGE_NUMBER,  PAGE_NUMBER, PAGE_DESCRIPTION,
  FORM_TEMPLATE, UPDATE_TIMESTAMP, UPDATE_USER
FROM SPONSOR_FORM_TEMPLATES
 
/

-- -----------------------------------------------------------------------
-- OSP$SPONSOR_HIERARCHY
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$SPONSOR_HIERARCHY AS 
SELECT HIERARCHY_NAME,
       SPONSOR_CODE,
       LEVEL1,
       LEVEL2,
       LEVEL3,
       LEVEL4,
       LEVEL5,
       LEVEL6,
       LEVEL7,
       LEVEL8,
       LEVEL9,
       LEVEL10,
       UPDATE_TIMESTAMP,
       UPDATE_USER,
       LEVEL1_SORTID,
       LEVEL2_SORTID,
       LEVEL3_SORTID,
       LEVEL4_SORTID,
       LEVEL5_SORTID,
       LEVEL6_SORTID,
       LEVEL7_SORTID,
       LEVEL8_SORTID,
       LEVEL9_SORTID,
       LEVEL10_SORTID
FROM   SPONSOR_HIERARCHY
 
/

-- -----------------------------------------------------------------------
-- OSP$SPONSOR_TYPE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$SPONSOR_TYPE AS 
select SPONSOR_TYPE_CODE,DESCRIPTION,UPDATE_TIMESTAMP,UPDATE_USER
	from SPONSOR_TYPE
 
/

-- -----------------------------------------------------------------------
-- OSP$SP_REV_APPROVAL_TYPE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$SP_REV_APPROVAL_TYPE AS 
select APPROVAL_TYPE_CODE, DESCRIPTION, UPDATE_TIMESTAMP, UPDATE_USER
	from SP_REV_APPROVAL_TYPE
 
/

-- -----------------------------------------------------------------------
-- OSP$STATE_CODE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$STATE_CODE AS 
select COUNTRY_CODE, STATE_CODE, DESCRIPTION, UPDATE_TIMESTAMP, UPDATE_USER
	from STATE_CODE
 
/

-- -----------------------------------------------------------------------
-- OSP$SUBMISSION_STATUS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$SUBMISSION_STATUS AS 
SELECT
  submission_status_code,
  description,
  update_timestamp,
  update_user
FROM submission_status
 
/

-- -----------------------------------------------------------------------
-- OSP$SUBMISSION_TYPE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$SUBMISSION_TYPE AS 
SELECT
  SUBMISSION_TYPE_CODE,
  DESCRIPTION,
  UPDATE_TIMESTAMP,
  UPDATE_USER
FROM SUBMISSION_TYPE
 
/

-- -----------------------------------------------------------------------
-- OSP$SUBMISSION_TYPE_QUALIFIER
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$SUBMISSION_TYPE_QUALIFIER AS 
SELECT
  SUBMISSION_TYPE_QUAL_CODE,
  DESCRIPTION,
  UPDATE_TIMESTAMP,
  UPDATE_USER
FROM SUBMISSION_TYPE_QUALIFIER
 
/

-- -----------------------------------------------------------------------
-- OSP$TEMPLATE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$TEMPLATE AS 
SELECT
	AWARD_TEMPLATE_CODE,
	DESCRIPTION,
	STATUS_CODE,
	PRIME_SPONSOR_CODE,
	NON_COMPETING_CONT_PRPSL_DUE,
	COMPETING_RENEWAL_PRPSL_DUE,
	BASIS_OF_PAYMENT_CODE,
	METHOD_OF_PAYMENT_CODE,
	PAYMENT_INVOICE_FREQ_CODE,
	INVOICE_NUMBER_OF_COPIES,
	FINAL_INVOICE_DUE,
	UPDATE_TIMESTAMP,
	UPDATE_USER
FROM AWARD_TEMPLATE
 
/

-- -----------------------------------------------------------------------
-- OSP$TEMPLATE_COMMENTS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$TEMPLATE_COMMENTS AS 
SELECT
	AWARD_TEMPLATE_CODE,
	COMMENT_TYPE_CODE,
	CHECKLIST_PRINT_FLAG,
	COMMENTS,
	UPDATE_TIMESTAMP,
	UPDATE_USER
FROM AWARD_TEMPLATE_COMMENTS
 
/

-- -----------------------------------------------------------------------
-- OSP$TEMPLATE_CONTACT
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$TEMPLATE_CONTACT AS 
SELECT
	AWARD_TEMPLATE_CODE,
	CONTACT_TYPE_CODE,
	ROLODEX_ID,
	UPDATE_TIMESTAMP,
	UPDATE_USER
FROM AWARD_TEMPLATE_CONTACT
 
/

-- -----------------------------------------------------------------------
-- OSP$TEMPLATE_DOCUMENT_TERMS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$TEMPLATE_DOCUMENT_TERMS AS 
SELECT
	A.AWARD_TEMPLATE_CODE,
	B.SPONSOR_TERM_CODE REFERENCED_DOCUMENT_CODE,
	A.UPDATE_TIMESTAMP,
	A.UPDATE_USER
FROM AWARD_TEMPLATE_TERMS A,SPONSOR_TERM B,SPONSOR_TERM_TYPE C where
		A.SPONSOR_TERM_ID = B.SPONSOR_TERM_ID and
		B.SPONSOR_TERM_TYPE_CODE = C.SPONSOR_TERM_TYPE_CODE and
		C.SPONSOR_TERM_TYPE_CODE = '6'
 
/

-- -----------------------------------------------------------------------
-- OSP$TEMPLATE_EQUIPMENT_TERMS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$TEMPLATE_EQUIPMENT_TERMS AS 
SELECT
	AWARD_TEMPLATE_CODE,
	B.SPONSOR_TERM_CODE EQUIPMENT_APPROVAL_CODE,
	A.UPDATE_TIMESTAMP,
	A.UPDATE_USER
FROM AWARD_TEMPLATE_TERMS A,SPONSOR_TERM B,SPONSOR_TERM_TYPE C where
		A.SPONSOR_TERM_ID = B.SPONSOR_TERM_ID and
		B.SPONSOR_TERM_TYPE_CODE = C.SPONSOR_TERM_TYPE_CODE and
		C.SPONSOR_TERM_TYPE_CODE = '1'
 
/

-- -----------------------------------------------------------------------
-- OSP$TEMPLATE_INVENTION_TERMS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$TEMPLATE_INVENTION_TERMS AS 
SELECT
	A.AWARD_TEMPLATE_CODE,
	B.SPONSOR_TERM_TYPE_CODE INVENTION_CODE,
	A.UPDATE_TIMESTAMP,
	A.UPDATE_USER
FROM AWARD_TEMPLATE_TERMS A,SPONSOR_TERM B,SPONSOR_TERM_TYPE C where
		A.SPONSOR_TERM_ID = B.SPONSOR_TERM_ID and
		B.SPONSOR_TERM_TYPE_CODE = C.SPONSOR_TERM_TYPE_CODE and
		C.SPONSOR_TERM_TYPE_CODE = '2'
 
/

-- -----------------------------------------------------------------------
-- OSP$TEMPLATE_PRIOR_TERMS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$TEMPLATE_PRIOR_TERMS AS 
SELECT
	A.AWARD_TEMPLATE_CODE,
	B.SPONSOR_TERM_CODE PRIOR_APPROVAL_CODE,
	A.UPDATE_TIMESTAMP,
	A.UPDATE_USER
FROM AWARD_TEMPLATE_TERMS A,SPONSOR_TERM B,SPONSOR_TERM_TYPE C where
		A.SPONSOR_TERM_ID = B.SPONSOR_TERM_ID and
		B.SPONSOR_TERM_TYPE_CODE = C.SPONSOR_TERM_TYPE_CODE and
		C.SPONSOR_TERM_TYPE_CODE = '3'
 
/

-- -----------------------------------------------------------------------
-- OSP$TEMPLATE_PROPERTY_TERMS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$TEMPLATE_PROPERTY_TERMS AS 
SELECT
	A.AWARD_TEMPLATE_CODE,
	B.SPONSOR_TERM_CODE PROPERTY_CODE,
	A.UPDATE_TIMESTAMP,
	A.UPDATE_USER
FROM AWARD_TEMPLATE_TERMS A,SPONSOR_TERM B,SPONSOR_TERM_TYPE C where
		A.SPONSOR_TERM_ID = B.SPONSOR_TERM_ID and
		B.SPONSOR_TERM_TYPE_CODE = C.SPONSOR_TERM_TYPE_CODE and
		C.SPONSOR_TERM_TYPE_CODE = '4'
 
/

-- -----------------------------------------------------------------------
-- OSP$TEMPLATE_PUBLICATION_TERMS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$TEMPLATE_PUBLICATION_TERMS AS 
SELECT
	A.AWARD_TEMPLATE_CODE,
	B.SPONSOR_TERM_CODE PUBLICATION_CODE,
	A.UPDATE_TIMESTAMP,
	A.UPDATE_USER
FROM AWARD_TEMPLATE_TERMS A,SPONSOR_TERM B,SPONSOR_TERM_TYPE C where
		A.SPONSOR_TERM_ID = B.SPONSOR_TERM_ID and
		B.SPONSOR_TERM_TYPE_CODE = C.SPONSOR_TERM_TYPE_CODE and
		C.SPONSOR_TERM_TYPE_CODE = '5'
 
/

-- -----------------------------------------------------------------------
-- OSP$TEMPLATE_REPORT_TERMS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$TEMPLATE_REPORT_TERMS AS 
SELECT
	A.AWARD_TEMPLATE_CODE,
	A.REPORT_CLASS_CODE,
	A.REPORT_CODE,
	A.FREQUENCY_CODE,
	A.FREQUENCY_BASE_CODE,
	A.OSP_DISTRIBUTION_CODE,
	A.DUE_DATE,
	B.CONTACT_TYPE_CODE,
	B.ROLODEX_ID,
	B.NUMBER_OF_COPIES,
	A.UPDATE_TIMESTAMP,
	A.UPDATE_USER
FROM AWARD_TEMPLATE_REPORT_TERMS A,AWARD_TEMPL_REP_TERMS_RECNT B
WHERE A.TEMPLATE_REPORT_TERMS_ID = B.TEMPLATE_REPORT_TERMS_ID
 
/

-- -----------------------------------------------------------------------
-- OSP$TEMPLATE_RIGHTS_TERMS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$TEMPLATE_RIGHTS_TERMS AS 
SELECT
	A.AWARD_TEMPLATE_CODE,
	B.SPONSOR_TERM_CODE RIGHTS_IN_DATA_CODE,
	A.UPDATE_TIMESTAMP,
	A.UPDATE_USER
FROM AWARD_TEMPLATE_TERMS A,SPONSOR_TERM B,SPONSOR_TERM_TYPE C where
		A.SPONSOR_TERM_ID = B.SPONSOR_TERM_ID and
		B.SPONSOR_TERM_TYPE_CODE = C.SPONSOR_TERM_TYPE_CODE and
		C.SPONSOR_TERM_TYPE_CODE = '7'
 
/

-- -----------------------------------------------------------------------
-- OSP$TEMPLATE_SUBCONTRACT_TERMS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$TEMPLATE_SUBCONTRACT_TERMS AS 
SELECT
	A.AWARD_TEMPLATE_CODE,
	B.SPONSOR_TERM_CODE SUBCONTRACT_APPROVAL_CODE,
	A.UPDATE_TIMESTAMP,
	A.UPDATE_USER
FROM AWARD_TEMPLATE_TERMS A,SPONSOR_TERM B,SPONSOR_TERM_TYPE C where
		A.SPONSOR_TERM_ID = B.SPONSOR_TERM_ID and
		B.SPONSOR_TERM_TYPE_CODE = C.SPONSOR_TERM_TYPE_CODE and
		C.SPONSOR_TERM_TYPE_CODE = '8'
 
/

-- -----------------------------------------------------------------------
-- OSP$TEMPLATE_TRAVEL_TERMS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$TEMPLATE_TRAVEL_TERMS AS 
SELECT
	A.AWARD_TEMPLATE_CODE,
	B.SPONSOR_TERM_CODE TRAVEL_RESTRICTION_CODE,
	A.UPDATE_TIMESTAMP,
	A.UPDATE_USER
FROM AWARD_TEMPLATE_TERMS A,SPONSOR_TERM B,SPONSOR_TERM_TYPE C where
		A.SPONSOR_TERM_ID = B.SPONSOR_TERM_ID and
		B.SPONSOR_TERM_TYPE_CODE = C.SPONSOR_TERM_TYPE_CODE and
		C.SPONSOR_TERM_TYPE_CODE = '9'
 
/

-- -----------------------------------------------------------------------
-- OSP$TRAINING
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$TRAINING AS 
SELECT
    TRAINING_CODE,
    DESCRIPTION,
    UPDATE_TIMESTAMP,
    UPDATE_USER
FROM TRAINING
 
/

-- -----------------------------------------------------------------------
-- OSP$UNIT
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$UNIT AS 
select
	   U.UNIT_NUMBER, U.UNIT_NAME,
	   AO.person_id as ADMINISTRATIVE_OFFICER,
	   OA.person_id as OSP_ADMINISTRATOR,
	   UH.person_id as UNIT_HEAD,
	   DV.person_id as DEAN_VP,
	   OI.person_id as OTHER_INDIVIDUAL_TO_NOTIFY,
	   ORGANIZATION_ID, UPDATE_TIMESTAMP, UPDATE_USER
	from UNIT U,
	         (select unit_number,person_id from unit_administrator where UNIT_ADMINISTRATOR_TYPE_CODE=1) AO,
	         (select unit_number,person_id from unit_administrator where UNIT_ADMINISTRATOR_TYPE_CODE=2) OA,
	         (select unit_number,person_id from unit_administrator where UNIT_ADMINISTRATOR_TYPE_CODE=3) UH,
	         (select unit_number,person_id from unit_administrator where UNIT_ADMINISTRATOR_TYPE_CODE=4) DV,
	         (select unit_number,person_id from unit_administrator where UNIT_ADMINISTRATOR_TYPE_CODE=5) OI
	where U.UNIT_NUMBER = AO.UNIT_NUMBER(+)
	           and U.UNIT_NUMBER = OA.UNIT_NUMBER(+)
	           and U.UNIT_NUMBER = UH.UNIT_NUMBER(+)
	           and U.UNIT_NUMBER = DV.UNIT_NUMBER(+)
	           and U.UNIT_NUMBER = OI.UNIT_NUMBER(+)
 
/

-- -----------------------------------------------------------------------
-- OSP$UNIT_ADMINISTRATORS
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$UNIT_ADMINISTRATORS AS 
select
 UNIT_NUMBER, PERSON_ID, UNIT_ADMINISTRATOR_TYPE_CODE, UPDATE_TIMESTAMP, UPDATE_USER
	from UNIT_ADMINISTRATOR
 
/

-- -----------------------------------------------------------------------
-- OSP$UNIT_ADMINISTRATOR_TYPE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$UNIT_ADMINISTRATOR_TYPE AS 
select
UNIT_ADMINISTRATOR_TYPE_CODE, DESCRIPTION, UPDATE_TIMESTAMP, UPDATE_USER, VER_NBR, OBJ_ID
	from UNIT_ADMINISTRATOR_TYPE
 
/

-- -----------------------------------------------------------------------
-- OSP$UNIT_HIERARCHY
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$UNIT_HIERARCHY AS 
select
U.UNIT_NUMBER, PARENT_UNIT_NUMBER, decode(UH.UNIT_NUMBER,null,'N','Y') as HAS_CHILDREN_FLAG, UPDATE_TIMESTAMP, UPDATE_USER
	from UNIT U,
		(select unit_number
		from unit a
		where unit_number in (select parent_unit_number from unit)) UH
	where U.UNIT_NUMBER = UH.UNIT_NUMBER(+)
 
/

-- -----------------------------------------------------------------------
-- OSP$USER_ROLES
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$USER_ROLES AS 
select USER_ID,ROLE_ID,UNIT_NUMBER,DESCEND_FLAG,UPDATE_TIMESTAMP,UPDATE_USER
	from USER_ROLES
 
/

-- -----------------------------------------------------------------------
-- OSP$VALID_BASIS_METHOD_PMT
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$VALID_BASIS_METHOD_PMT AS 
SELECT
    BASIS_OF_PAYMENT_CODE,
    METHOD_OF_PAYMENT_CODE,
    FREQUENCY_INDICATOR,
    INV_INSTRUCTIONS_INDICATOR,
    UPDATE_TIMESTAMP,
    UPDATE_USER
FROM VALID_BASIS_METHOD_PMT
 
/

-- -----------------------------------------------------------------------
-- OSP$VALID_CALC_TYPES
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$VALID_CALC_TYPES AS 
select CALC_TYPE_ID,RATE_CLASS_TYPE,DEPENDENT_SEQ_NUMBER,DEPENDENT_RATE_CLASS_TYPE,RATE_CLASS_CODE,RATE_TYPE_CODE,
	UPDATE_TIMESTAMP,UPDATE_USER
	from VALID_CALC_TYPES
 
/

-- -----------------------------------------------------------------------
-- OSP$VALID_CE_JOB_CODES
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$VALID_CE_JOB_CODES AS 
select COST_ELEMENT,JOB_CODE,UPDATE_TIMESTAMP,UPDATE_USER
	from VALID_CE_JOB_CODES
 
/

-- -----------------------------------------------------------------------
-- OSP$VALID_CE_RATE_TYPES
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$VALID_CE_RATE_TYPES AS 
select COST_ELEMENT,RATE_CLASS_CODE,RATE_TYPE_CODE,UPDATE_TIMESTAMP,UPDATE_USER
	from VALID_CE_RATE_TYPES
 
/

-- -----------------------------------------------------------------------
-- OSP$VALID_CLASS_REPORT_FREQ
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$VALID_CLASS_REPORT_FREQ AS 
SELECT 
	REPORT_CLASS_CODE, 
	REPORT_CODE, 
	FREQUENCY_CODE, 
	UPDATE_TIMESTAMP, 
	UPDATE_USER
FROM VALID_CLASS_REPORT_FREQ
 
/

-- -----------------------------------------------------------------------
-- OSP$VALID_PROTO_ACTION_CORESP
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$VALID_PROTO_ACTION_CORESP AS 
SELECT 
    PROTOCOL_ACTION_TYPE_CODE, 
    PROTO_CORRESP_TYPE_CODE, 
    UPDATE_TIMESTAMP, 
    UPDATE_USER, 
    FINAL_FLAG
FROM VALID_PROTO_ACTION_CORESP
 
/

-- -----------------------------------------------------------------------
-- OSP$VALID_RATES
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$VALID_RATES AS 
SELECT 
	ON_CAMPUS_RATE, 
	OFF_CAMPUS_RATE, 
	RATE_CLASS_TYPE, 
	ADJUSTMENT_KEY, 
	UPDATE_TIMESTAMP, 
	UPDATE_USER
FROM VALID_RATES
 
/

-- -----------------------------------------------------------------------
-- OSP$VALID_SP_REV_APPROVAL
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$VALID_SP_REV_APPROVAL AS 
select SPECIAL_REVIEW_CODE,APPROVAL_TYPE_CODE,PROTOCOL_NUMBER_FLAG,APPROVAL_DATE_FLAG,APPLICATION_DATE_FLAG,UPDATE_TIMESTAMP,
	UPDATE_USER
	from VALID_SP_REV_APPROVAL
 
/

-- -----------------------------------------------------------------------
-- OSP$VULNERABLE_SUBJECT_TYPE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$VULNERABLE_SUBJECT_TYPE AS 
SELECT 
    VULNERABLE_SUBJECT_TYPE_CODE, 
    DESCRIPTION, 
    UPDATE_TIMESTAMP, 
    UPDATE_USER
FROM VULNERABLE_SUBJECT_TYPE
 
/

-- -----------------------------------------------------------------------
-- OSP$YNQ
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$YNQ AS 
select QUESTION_ID,DESCRIPTION,QUESTION_TYPE,NO_OF_ANSWERS,EXPLANATION_REQUIRED_FOR,DATE_REQUIRED_FOR,
	STATUS,EFFECTIVE_DATE,GROUP_NAME,UPDATE_TIMESTAMP,UPDATE_USER
	from YNQ
 
/

-- -----------------------------------------------------------------------
-- OSP$YNQ_EXPLANATION
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$YNQ_EXPLANATION AS 
select QUESTION_ID,EXPLANATION_TYPE,EXPLANATION,UPDATE_TIMESTAMP,UPDATE_USER
	from YNQ_EXPLANATION
 
/

-- -----------------------------------------------------------------------
-- OSP$YNQ_EXPLANATION_TYPE
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW OSP$YNQ_EXPLANATION_TYPE AS 
select "EXPLANATION_TYPE","DESCRIPTION","UPDATE_TIMESTAMP","UPDATE_USER","VER_NBR","OBJ_ID"
	from YNQ_EXPLANATION_TYPE
 
/

-- -----------------------------------------------------------------------
-- VIEW_BPDFE_1
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW VIEW_BPDFE_1 AS 
SELECT RATE_CLASS_CODE, RATE_TYPE_CODE FROM VALID_CALC_TYPES WHERE RATE_CLASS_TYPE IN ('E', 'V')
 
/

-- -----------------------------------------------------------------------
-- VIEW_BPDFE_2
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW VIEW_BPDFE_2 AS 
SELECT PROPOSAL_NUMBER,
               VERSION_NUMBER,
               BUDGET_PERIOD,
               LINE_ITEM_NUMBER,
               START_DATE,
               END_DATE,
               PERSON_NUMBER,
               PERSON_ID,
               RATE_CLASS_CODE,
               RATE_TYPE_CODE
          FROM BUDGET_PER_DET_RATE_AND_BASE X
        MINUS
        SELECT PROPOSAL_NUMBER,
               VERSION_NUMBER,
               BUDGET_PERIOD,
               LINE_ITEM_NUMBER,
               START_DATE,
               END_DATE,
               PERSON_NUMBER,
               PERSON_ID,
               X.RATE_CLASS_CODE,
               X.RATE_TYPE_CODE
          FROM BUDGET_PER_DET_RATE_AND_BASE X,
               (VIEW_BPDFE_1) Y
         WHERE X.RATE_CLASS_CODE = Y.RATE_CLASS_CODE
           AND X.RATE_TYPE_CODE = Y.RATE_TYPE_CODE
 
/

-- -----------------------------------------------------------------------
-- VIEW_BPDFE_5
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW VIEW_BPDFE_5 AS 
SELECT X.PROPOSAL_NUMBER, X.VERSION_NUMBER, X.BUDGET_PERIOD, X.LINE_ITEM_NUMBER,
  X.START_DATE, X.END_DATE, X.PERSON_NUMBER, X.PERSON_ID,
  Z.PERCENT_EFFORT, Z.PERCENT_CHARGED,
  MAX(X.BASE_COST_SHARING) COST_SHARING_AMOUNT, MAX(X.SALARY_REQUESTED) SALARY_REQUESTED, MAX(X.UNDERRECOVERY_AMOUNT) UNDERRECOVERY_AMOUNT
  FROM BUDGET_PER_DET_RATE_AND_BASE X,
       (VIEW_BPDFE_1) Y ,
       BUDGET_PERSONNEL_DETAILS Z
  WHERE
       X.RATE_CLASS_CODE = Y.RATE_CLASS_CODE AND
       X.RATE_TYPE_CODE = Y.RATE_TYPE_CODE
       AND X.PROPOSAL_NUMBER = Z.PROPOSAL_NUMBER
       AND X.VERSION_NUMBER = Z.VERSION_NUMBER
       AND X.BUDGET_PERIOD = Z.BUDGET_PERIOD
       AND X.LINE_ITEM_NUMBER = Z.LINE_ITEM_NUMBER
       AND X.PERSON_NUMBER = Z.PERSON_NUMBER
       AND X.PERSON_ID = Z.PERSON_ID
 GROUP BY X.PROPOSAL_NUMBER,
          X.VERSION_NUMBER,
          X.BUDGET_PERIOD,
          X.LINE_ITEM_NUMBER,
          X.PERSON_NUMBER,
          X.PERSON_ID,
          Z.PERCENT_EFFORT,
          Z.PERCENT_CHARGED,
          X.START_DATE,
          X.END_DATE
 UNION
SELECT N.PROPOSAL_NUMBER,
       N.VERSION_NUMBER,
       N.BUDGET_PERIOD,
       N.LINE_ITEM_NUMBER,
       N.START_DATE,
       N.END_DATE,
       N.PERSON_NUMBER,
       N.PERSON_ID,
       O.PERCENT_EFFORT,
       O.PERCENT_CHARGED,
       MAX(N.BASE_COST_SHARING) COST_SHARING_AMOUNT,
       MAX(N.SALARY_REQUESTED) SALARY_REQUESTED,
       MAX(N.UNDERRECOVERY_AMOUNT) UNDERRECOVERY_AMOUNT
  FROM BUDGET_PER_DET_RATE_AND_BASE N,
       (VIEW_BPDFE_2) M, BUDGET_PERSONNEL_DETAILS O
 WHERE M.PROPOSAL_NUMBER = N.PROPOSAL_NUMBER
   AND M.VERSION_NUMBER = N.VERSION_NUMBER
   AND M.BUDGET_PERIOD = N.BUDGET_PERIOD
   AND M.LINE_ITEM_NUMBER = N.LINE_ITEM_NUMBER
   AND M.PERSON_NUMBER = N.PERSON_NUMBER
   AND M.PERSON_ID = N.PERSON_ID
   AND M.RATE_CLASS_CODE = N.RATE_CLASS_CODE
   AND M.RATE_TYPE_CODE = N.RATE_TYPE_CODE
   AND M.PROPOSAL_NUMBER = O.PROPOSAL_NUMBER
   AND M.VERSION_NUMBER = O.VERSION_NUMBER
   AND M.BUDGET_PERIOD = O.BUDGET_PERIOD
   AND M.LINE_ITEM_NUMBER = O.LINE_ITEM_NUMBER
   AND M.PERSON_NUMBER = O.PERSON_NUMBER
   AND M.PERSON_ID = O.PERSON_ID
 GROUP BY N.PROPOSAL_NUMBER,
          N.VERSION_NUMBER,
          N.BUDGET_PERIOD,
          N.LINE_ITEM_NUMBER,
          N.PERSON_NUMBER,
          N.PERSON_ID,
          O.PERCENT_EFFORT,
          O.PERCENT_CHARGED,
          N.START_DATE,
          N.END_DATE
 
/

-- -----------------------------------------------------------------------
-- VIEW_CO_C
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW VIEW_CO_C AS 
SELECT C.FINAL_SUBMISSION_DATE FROM AWARD_CLOSEOUT C WHERE C.CLOSEOUT_REPORT_CODE = '1'
 
/

-- -----------------------------------------------------------------------
-- VIEW_CO_D
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW VIEW_CO_D AS 
SELECT C.FINAL_SUBMISSION_DATE FROM AWARD_CLOSEOUT C WHERE C.CLOSEOUT_REPORT_CODE = '4'
 
/

-- -----------------------------------------------------------------------
-- VIEW_CO_E
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW VIEW_CO_E AS 
SELECT C.FINAL_SUBMISSION_DATE FROM AWARD_CLOSEOUT C WHERE C.CLOSEOUT_REPORT_CODE = '3'
 
/

-- -----------------------------------------------------------------------
-- VIEW_CO_F
-- -----------------------------------------------------------------------
CREATE OR REPLACE FORCE VIEW VIEW_CO_F AS 
SELECT C.FINAL_SUBMISSION_DATE FROM AWARD_CLOSEOUT C WHERE C.CLOSEOUT_REPORT_CODE = '2'
 
/
DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'BAM_PARAM_SEQ';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE BAM_PARAM_SEQ'; END IF;
END;
/

CREATE SEQUENCE BAM_PARAM_SEQ INCREMENT BY 1 START WITH 2000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'BAM_SEQ';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE BAM_SEQ'; END IF;
END;
/

CREATE SEQUENCE BAM_SEQ INCREMENT BY 1 START WITH 2000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'DIRTY_CACHE_SEQ';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE DIRTY_CACHE_SEQ'; END IF;
END;
/

CREATE SEQUENCE DIRTY_CACHE_SEQ INCREMENT BY 1 START WITH 2000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'EN_SERVICE_DEF_INTERFACE_SEQ';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE EN_SERVICE_DEF_INTERFACE_SEQ'; END IF;
END;
/

CREATE SEQUENCE EN_SERVICE_DEF_INTERFACE_SEQ INCREMENT BY 1 START WITH 2000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'FP_DOC_TYPE_ATTR_ID_SEQ';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE FP_DOC_TYPE_ATTR_ID_SEQ'; END IF;
END;
/

CREATE SEQUENCE FP_DOC_TYPE_ATTR_ID_SEQ INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KCB_MESSAGES_SEQ';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KCB_MESSAGES_SEQ'; END IF;
END;
/

CREATE SEQUENCE KCB_MESSAGES_SEQ INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KCB_MSG_DELIVS_SEQ';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KCB_MSG_DELIVS_SEQ'; END IF;
END;
/

CREATE SEQUENCE KCB_MSG_DELIVS_SEQ INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KCB_RECIP_DELIVS_SEQ';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KCB_RECIP_DELIVS_SEQ'; END IF;
END;
/

CREATE SEQUENCE KCB_RECIP_DELIVS_SEQ INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KCB_RECIP_PREFS_SEQ';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KCB_RECIP_PREFS_SEQ'; END IF;
END;
/

CREATE SEQUENCE KCB_RECIP_PREFS_SEQ INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KC_COUNTRY_CODES_SEQ';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KC_COUNTRY_CODES_SEQ'; END IF;
END;
/

CREATE SEQUENCE KC_COUNTRY_CODES_SEQ INCREMENT BY 1 START WITH 261 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREN_CHNL_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREN_CHNL_S'; END IF;
END;
/

CREATE SEQUENCE KREN_CHNL_S INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREN_CHNL_SUBSCRP_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREN_CHNL_SUBSCRP_S'; END IF;
END;
/

CREATE SEQUENCE KREN_CHNL_SUBSCRP_S INCREMENT BY 1 START WITH 1020 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREN_CNTNT_TYP_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREN_CNTNT_TYP_S'; END IF;
END;
/

CREATE SEQUENCE KREN_CNTNT_TYP_S INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREN_MSG_DELIV_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREN_MSG_DELIV_S'; END IF;
END;
/

CREATE SEQUENCE KREN_MSG_DELIV_S INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREN_MSG_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREN_MSG_S'; END IF;
END;
/

CREATE SEQUENCE KREN_MSG_S INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREN_NTFCTN_MSG_DELIV_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREN_NTFCTN_MSG_DELIV_S'; END IF;
END;
/

CREATE SEQUENCE KREN_NTFCTN_MSG_DELIV_S INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREN_NTFCTN_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREN_NTFCTN_S'; END IF;
END;
/

CREATE SEQUENCE KREN_NTFCTN_S INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREN_PRIO_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREN_PRIO_S'; END IF;
END;
/

CREATE SEQUENCE KREN_PRIO_S INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREN_PRODCR_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREN_PRODCR_S'; END IF;
END;
/

CREATE SEQUENCE KREN_PRODCR_S INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREN_RECIP_DELIV_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREN_RECIP_DELIV_S'; END IF;
END;
/

CREATE SEQUENCE KREN_RECIP_DELIV_S INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREN_RECIP_LIST_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREN_RECIP_LIST_S'; END IF;
END;
/

CREATE SEQUENCE KREN_RECIP_LIST_S INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREN_RECIP_PREF_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREN_RECIP_PREF_S'; END IF;
END;
/

CREATE SEQUENCE KREN_RECIP_PREF_S INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREN_RECIP_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREN_RECIP_S'; END IF;
END;
/

CREATE SEQUENCE KREN_RECIP_S INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREN_RVWER_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREN_RVWER_S'; END IF;
END;
/

CREATE SEQUENCE KREN_RVWER_S INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREN_SNDR_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREN_SNDR_S'; END IF;
END;
/

CREATE SEQUENCE KREN_SNDR_S INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREW_ACTN_ITM_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREW_ACTN_ITM_S'; END IF;
END;
/

CREATE SEQUENCE KREW_ACTN_ITM_S INCREMENT BY 1 START WITH 10224 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREW_ACTN_LIST_OPTN_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREW_ACTN_LIST_OPTN_S'; END IF;
END;
/

CREATE SEQUENCE KREW_ACTN_LIST_OPTN_S INCREMENT BY 1 START WITH 1267 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREW_ACTN_RQST_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREW_ACTN_RQST_S'; END IF;
END;
/

CREATE SEQUENCE KREW_ACTN_RQST_S INCREMENT BY 1 START WITH 2367 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREW_ACTN_TKN_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREW_ACTN_TKN_S'; END IF;
END;
/

CREATE SEQUENCE KREW_ACTN_TKN_S INCREMENT BY 1 START WITH 2327 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREW_DOC_HDR_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREW_DOC_HDR_S'; END IF;
END;
/

CREATE SEQUENCE KREW_DOC_HDR_S INCREMENT BY 1 START WITH 4083 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREW_DOC_LNK_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREW_DOC_LNK_S'; END IF;
END;
/

CREATE SEQUENCE KREW_DOC_LNK_S INCREMENT BY 1 START WITH 2000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREW_DOC_NTE_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREW_DOC_NTE_S'; END IF;
END;
/

CREATE SEQUENCE KREW_DOC_NTE_S INCREMENT BY 1 START WITH 2020 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREW_DOC_TYP_ATTR_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREW_DOC_TYP_ATTR_S'; END IF;
END;
/

CREATE SEQUENCE KREW_DOC_TYP_ATTR_S INCREMENT BY 1 START WITH 2154 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREW_EDL_FLD_DMP_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREW_EDL_FLD_DMP_S'; END IF;
END;
/

CREATE SEQUENCE KREW_EDL_FLD_DMP_S INCREMENT BY 1 START WITH 5000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREW_EDL_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREW_EDL_S'; END IF;
END;
/

CREATE SEQUENCE KREW_EDL_S INCREMENT BY 1 START WITH 2020 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREW_HLP_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREW_HLP_S'; END IF;
END;
/

CREATE SEQUENCE KREW_HLP_S INCREMENT BY 1 START WITH 100 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREW_OUT_BOX_ITM_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREW_OUT_BOX_ITM_S'; END IF;
END;
/

CREATE SEQUENCE KREW_OUT_BOX_ITM_S INCREMENT BY 1 START WITH 10043 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREW_RSP_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREW_RSP_S'; END IF;
END;
/

CREATE SEQUENCE KREW_RSP_S INCREMENT BY 1 START WITH 2191 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREW_RTE_NODE_CFG_PARM_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREW_RTE_NODE_CFG_PARM_S'; END IF;
END;
/

CREATE SEQUENCE KREW_RTE_NODE_CFG_PARM_S INCREMENT BY 1 START WITH 5862 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREW_RTE_NODE_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREW_RTE_NODE_S'; END IF;
END;
/

CREATE SEQUENCE KREW_RTE_NODE_S INCREMENT BY 1 START WITH 4230 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREW_RTE_TMPL_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREW_RTE_TMPL_S'; END IF;
END;
/

CREATE SEQUENCE KREW_RTE_TMPL_S INCREMENT BY 1 START WITH 1879 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREW_RULE_EXPR_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREW_RULE_EXPR_S'; END IF;
END;
/

CREATE SEQUENCE KREW_RULE_EXPR_S INCREMENT BY 1 START WITH 2000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREW_RULE_TMPL_OPTN_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREW_RULE_TMPL_OPTN_S'; END IF;
END;
/

CREATE SEQUENCE KREW_RULE_TMPL_OPTN_S INCREMENT BY 1 START WITH 2020 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREW_SRCH_ATTR_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREW_SRCH_ATTR_S'; END IF;
END;
/

CREATE SEQUENCE KREW_SRCH_ATTR_S INCREMENT BY 1 START WITH 2060 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KREW_USR_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KREW_USR_S'; END IF;
END;
/

CREATE SEQUENCE KREW_USR_S INCREMENT BY 1 START WITH 100000000000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_ATTR_DATA_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_ATTR_DATA_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_ATTR_DATA_ID_S INCREMENT BY 1 START WITH 1311 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_ATTR_DEFN_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_ATTR_DEFN_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_ATTR_DEFN_ID_S INCREMENT BY 1 START WITH 1011 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_DLGN_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_DLGN_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_DLGN_ID_S INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_DLGN_MBR_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_DLGN_MBR_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_DLGN_MBR_ID_S INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_ENTITY_ADDR_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_ENTITY_ADDR_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_ENTITY_ADDR_ID_S INCREMENT BY 1 START WITH 1020 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_ENTITY_AFLTN_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_ENTITY_AFLTN_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_ENTITY_AFLTN_ID_S INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_ENTITY_CTZNSHP_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_ENTITY_CTZNSHP_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_ENTITY_CTZNSHP_ID_S INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_ENTITY_EMAIL_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_ENTITY_EMAIL_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_ENTITY_EMAIL_ID_S INCREMENT BY 1 START WITH 1320 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_ENTITY_EMP_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_ENTITY_EMP_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_ENTITY_EMP_ID_S INCREMENT BY 1 START WITH 1079 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_ENTITY_ETHNIC_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_ENTITY_ETHNIC_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_ENTITY_ETHNIC_ID_S INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_ENTITY_EXT_ID_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_ENTITY_EXT_ID_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_ENTITY_EXT_ID_ID_S INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_ENTITY_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_ENTITY_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_ENTITY_ID_S INCREMENT BY 1 START WITH 1281 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_ENTITY_NM_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_ENTITY_NM_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_ENTITY_NM_ID_S INCREMENT BY 1 START WITH 1380 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_ENTITY_PHONE_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_ENTITY_PHONE_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_ENTITY_PHONE_ID_S INCREMENT BY 1 START WITH 1020 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_ENTITY_RESIDENCY_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_ENTITY_RESIDENCY_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_ENTITY_RESIDENCY_ID_S INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_ENTITY_VISA_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_ENTITY_VISA_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_ENTITY_VISA_ID_S INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_GRP_ATTR_DATA_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_GRP_ATTR_DATA_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_GRP_ATTR_DATA_ID_S INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_GRP_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_GRP_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_GRP_ID_S INCREMENT BY 1 START WITH 1000006 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_GRP_MBR_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_GRP_MBR_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_GRP_MBR_ID_S INCREMENT BY 1 START WITH 1376 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_PERM_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_PERM_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_PERM_ID_S INCREMENT BY 1 START WITH 1183 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_PERM_RQRD_ATTR_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_PERM_RQRD_ATTR_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_PERM_RQRD_ATTR_ID_S INCREMENT BY 1 START WITH 1098 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_PERM_TMPL_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_PERM_TMPL_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_PERM_TMPL_ID_S INCREMENT BY 1 START WITH 1010 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_PRNCPL_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_PRNCPL_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_PRNCPL_ID_S INCREMENT BY 1 START WITH 10000000081 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_ROLE_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_ROLE_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_ROLE_ID_S INCREMENT BY 1 START WITH 1206 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_ROLE_MBR_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_ROLE_MBR_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_ROLE_MBR_ID_S INCREMENT BY 1 START WITH 1471 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_ROLE_PERM_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_ROLE_PERM_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_ROLE_PERM_ID_S INCREMENT BY 1 START WITH 10377 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_ROLE_RSP_ACTN_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_ROLE_RSP_ACTN_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_ROLE_RSP_ACTN_ID_S INCREMENT BY 1 START WITH 1034 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_ROLE_RSP_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_ROLE_RSP_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_ROLE_RSP_ID_S INCREMENT BY 1 START WITH 1035 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_RSP_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_RSP_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_RSP_ID_S INCREMENT BY 1 START WITH 1034 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_RSP_RQRD_ATTR_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_RSP_RQRD_ATTR_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_RSP_RQRD_ATTR_ID_S INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_RSP_TMPL_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_RSP_TMPL_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_RSP_TMPL_ID_S INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_TYP_ATTR_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_TYP_ATTR_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_TYP_ATTR_ID_S INCREMENT BY 1 START WITH 1014 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRIM_TYP_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRIM_TYP_ID_S'; END IF;
END;
/

CREATE SEQUENCE KRIM_TYP_ID_S INCREMENT BY 1 START WITH 1016 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRNS_DOC_TYP_ATTR_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRNS_DOC_TYP_ATTR_S'; END IF;
END;
/

CREATE SEQUENCE KRNS_DOC_TYP_ATTR_S INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRNS_LOCK_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRNS_LOCK_S'; END IF;
END;
/

CREATE SEQUENCE KRNS_LOCK_S INCREMENT BY 1 START WITH 2000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRNS_LOOKUP_RSLT_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRNS_LOOKUP_RSLT_S'; END IF;
END;
/

CREATE SEQUENCE KRNS_LOOKUP_RSLT_S INCREMENT BY 1 START WITH 2000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRNS_MAINT_LOCK_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRNS_MAINT_LOCK_S'; END IF;
END;
/

CREATE SEQUENCE KRNS_MAINT_LOCK_S INCREMENT BY 1 START WITH 2020 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRNS_NTE_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRNS_NTE_S'; END IF;
END;
/

CREATE SEQUENCE KRNS_NTE_S INCREMENT BY 1 START WITH 2020 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRSB_BAM_PARM_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRSB_BAM_PARM_S'; END IF;
END;
/

CREATE SEQUENCE KRSB_BAM_PARM_S INCREMENT BY 1 START WITH 2000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRSB_BAM_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRSB_BAM_S'; END IF;
END;
/

CREATE SEQUENCE KRSB_BAM_S INCREMENT BY 1 START WITH 2000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRSB_FLT_SVC_DEF_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRSB_FLT_SVC_DEF_S'; END IF;
END;
/

CREATE SEQUENCE KRSB_FLT_SVC_DEF_S INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRSB_MSG_QUE_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRSB_MSG_QUE_S'; END IF;
END;
/

CREATE SEQUENCE KRSB_MSG_QUE_S INCREMENT BY 1 START WITH 65904 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'KRSB_SVC_DEF_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE KRSB_SVC_DEF_S'; END IF;
END;
/

CREATE SEQUENCE KRSB_SVC_DEF_S INCREMENT BY 1 START WITH 3900 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'LOCK_ID_SEQ';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE LOCK_ID_SEQ'; END IF;
END;
/

CREATE SEQUENCE LOCK_ID_SEQ INCREMENT BY 1 START WITH 2020 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'LOOKUP_RESULT_SEQUENCE_NBR_SEQ';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE LOOKUP_RESULT_SEQUENCE_NBR_SEQ'; END IF;
END;
/

CREATE SEQUENCE LOOKUP_RESULT_SEQUENCE_NBR_SEQ INCREMENT BY 1 START WITH 2000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'NOTIFICATIONS_SEQ';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE NOTIFICATIONS_SEQ'; END IF;
END;
/

CREATE SEQUENCE NOTIFICATIONS_SEQ INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'NOTIFICATION_CHANNELS_SEQ';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE NOTIFICATION_CHANNELS_SEQ'; END IF;
END;
/

CREATE SEQUENCE NOTIFICATION_CHANNELS_SEQ INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'NOTIFICATION_CONTENT_TYPES_SEQ';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE NOTIFICATION_CONTENT_TYPES_SEQ'; END IF;
END;
/

CREATE SEQUENCE NOTIFICATION_CONTENT_TYPES_SEQ INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'NOTIFICATION_MSG_DELIVS_SEQ';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE NOTIFICATION_MSG_DELIVS_SEQ'; END IF;
END;
/

CREATE SEQUENCE NOTIFICATION_MSG_DELIVS_SEQ INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'NOTIFICATION_PRIORITIES_SEQ';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE NOTIFICATION_PRIORITIES_SEQ'; END IF;
END;
/

CREATE SEQUENCE NOTIFICATION_PRIORITIES_SEQ INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'NOTIFICATION_PRODUCERS_SEQ';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE NOTIFICATION_PRODUCERS_SEQ'; END IF;
END;
/

CREATE SEQUENCE NOTIFICATION_PRODUCERS_SEQ INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'NOTIFICATION_RECIPIENTS_SEQ';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE NOTIFICATION_RECIPIENTS_SEQ'; END IF;
END;
/

CREATE SEQUENCE NOTIFICATION_RECIPIENTS_SEQ INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'NOTIFICATION_RECIPS_LISTS_SEQ';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE NOTIFICATION_RECIPS_LISTS_SEQ'; END IF;
END;
/

CREATE SEQUENCE NOTIFICATION_RECIPS_LISTS_SEQ INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'NOTIFICATION_REVIEWERS_SEQ';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE NOTIFICATION_REVIEWERS_SEQ'; END IF;
END;
/

CREATE SEQUENCE NOTIFICATION_REVIEWERS_SEQ INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'NOTIFICATION_SENDERS_SEQ';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE NOTIFICATION_SENDERS_SEQ'; END IF;
END;
/

CREATE SEQUENCE NOTIFICATION_SENDERS_SEQ INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'NTE_ID_SEQ';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE NTE_ID_SEQ'; END IF;
END;
/

CREATE SEQUENCE NTE_ID_SEQ INCREMENT BY 1 START WITH 2000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQUENCE_EN_USR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQUENCE_EN_USR'; END IF;
END;
/

CREATE SEQUENCE SEQUENCE_EN_USR INCREMENT BY 1 START WITH 100000000000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQUENCE_NSF_CODES';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQUENCE_NSF_CODES'; END IF;
END;
/

CREATE SEQUENCE SEQUENCE_NSF_CODES INCREMENT BY 1 START WITH 39 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQUENCE_PROPOSAL_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQUENCE_PROPOSAL_ID'; END IF;
END;
/

CREATE SEQUENCE SEQUENCE_PROPOSAL_ID INCREMENT BY 1 START WITH 1 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQUENCE_SUBMISSION_HISTORY';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQUENCE_SUBMISSION_HISTORY'; END IF;
END;
/

CREATE SEQUENCE SEQUENCE_SUBMISSION_HISTORY INCREMENT BY 1 START WITH 1 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_ACTION_LIST_OPTN';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_ACTION_LIST_OPTN'; END IF;
END;
/

CREATE SEQUENCE SEQ_ACTION_LIST_OPTN INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_ACTION_REQUEST';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_ACTION_REQUEST'; END IF;
END;
/

CREATE SEQUENCE SEQ_ACTION_REQUEST INCREMENT BY 1 START WITH 2000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_ACTION_TAKEN';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_ACTION_TAKEN'; END IF;
END;
/

CREATE SEQUENCE SEQ_ACTION_TAKEN INCREMENT BY 1 START WITH 2260 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_ACTN_ITM';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_ACTN_ITM'; END IF;
END;
/

CREATE SEQUENCE SEQ_ACTN_ITM INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_APPLICATIONS_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_APPLICATIONS_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_APPLICATIONS_ID INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_APP_SPONSRD_USER_ATTR_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_APP_SPONSRD_USER_ATTR_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_APP_SPONSRD_USER_ATTR_ID INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_ATTACHMENT_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_ATTACHMENT_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_ATTACHMENT_ID INCREMENT BY 1 START WITH 1 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_ATTRIBUTE_TYPES_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_ATTRIBUTE_TYPES_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_ATTRIBUTE_TYPES_ID INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_AWARD_AMOUNT_TRANS_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_AWARD_AMOUNT_TRANS_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_AWARD_AMOUNT_TRANS_ID INCREMENT BY 1 START WITH 1 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_AWARD_AMT_FNA_DSTRBTN_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_AWARD_AMT_FNA_DSTRBTN_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_AWARD_AMT_FNA_DSTRBTN_ID INCREMENT BY 1 START WITH 1 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_AWARD_APPROVED_SUBAWARD_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_AWARD_APPROVED_SUBAWARD_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_AWARD_APPROVED_SUBAWARD_ID INCREMENT BY 1 START WITH 1 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_AWARD_ATTACHMENT_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_AWARD_ATTACHMENT_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_AWARD_ATTACHMENT_ID INCREMENT BY 1 START WITH 1 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_AWARD_AWARD_CLOSEOUT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_AWARD_AWARD_CLOSEOUT'; END IF;
END;
/

CREATE SEQUENCE SEQ_AWARD_AWARD_CLOSEOUT INCREMENT BY 1 START WITH 1 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_AWARD_AWARD_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_AWARD_AWARD_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_AWARD_AWARD_ID INCREMENT BY 1 START WITH 1 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_AWARD_AWARD_NUMBER';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_AWARD_AWARD_NUMBER'; END IF;
END;
/

CREATE SEQUENCE SEQ_AWARD_AWARD_NUMBER INCREMENT BY 1 START WITH 21 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_AWARD_COMMENT_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_AWARD_COMMENT_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_AWARD_COMMENT_ID INCREMENT BY 1 START WITH 1 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_AWARD_COST_SHARE_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_AWARD_COST_SHARE_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_AWARD_COST_SHARE_ID INCREMENT BY 1 START WITH 1 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_AWARD_CUSTOM_DATA_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_AWARD_CUSTOM_DATA_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_AWARD_CUSTOM_DATA_ID INCREMENT BY 1 START WITH 1 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_AWARD_EXEMPT_NUMBER_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_AWARD_EXEMPT_NUMBER_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_AWARD_EXEMPT_NUMBER_ID INCREMENT BY 1 START WITH 1 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_AWARD_NOTEPAD_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_AWARD_NOTEPAD_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_AWARD_NOTEPAD_ID INCREMENT BY 1 START WITH 1 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_AWARD_REP_TERMS_RECNT_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_AWARD_REP_TERMS_RECNT_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_AWARD_REP_TERMS_RECNT_ID INCREMENT BY 1 START WITH 1 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_AWARD_SCIENCE_KEYWORD_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_AWARD_SCIENCE_KEYWORD_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_AWARD_SCIENCE_KEYWORD_ID INCREMENT BY 1 START WITH 1 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_AWARD_SPECIAL_REVIEW_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_AWARD_SPECIAL_REVIEW_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_AWARD_SPECIAL_REVIEW_ID INCREMENT BY 1 START WITH 1 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_AWARD_SPONSOR_TERM';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_AWARD_SPONSOR_TERM'; END IF;
END;
/

CREATE SEQUENCE SEQ_AWARD_SPONSOR_TERM INCREMENT BY 1 START WITH 1 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_AWARD_SPONSOR_TERMS';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_AWARD_SPONSOR_TERMS'; END IF;
END;
/

CREATE SEQUENCE SEQ_AWARD_SPONSOR_TERMS INCREMENT BY 1 START WITH 321 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_AWARD_TEMPLATE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_AWARD_TEMPLATE'; END IF;
END;
/

CREATE SEQUENCE SEQ_AWARD_TEMPLATE INCREMENT BY 1 START WITH 1 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_AWARD_TRANS_SPONSOR_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_AWARD_TRANS_SPONSOR_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_AWARD_TRANS_SPONSOR_ID INCREMENT BY 1 START WITH 1 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_BATCH_CORRESPONDENCE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_BATCH_CORRESPONDENCE'; END IF;
END;
/

CREATE SEQUENCE SEQ_BATCH_CORRESPONDENCE INCREMENT BY 1 START WITH 1 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_BGT_PER_DET_RATE_BASE_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_BGT_PER_DET_RATE_BASE_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_BGT_PER_DET_RATE_BASE_ID INCREMENT BY 1 START WITH 9 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_BUDGET_DETAILS_CAL_AMTS_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_BUDGET_DETAILS_CAL_AMTS_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_BUDGET_DETAILS_CAL_AMTS_ID INCREMENT BY 1 START WITH 9 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_BUDGET_DETAILS_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_BUDGET_DETAILS_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_BUDGET_DETAILS_ID INCREMENT BY 1 START WITH 9 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_BUDGET_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_BUDGET_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_BUDGET_ID INCREMENT BY 1 START WITH 1 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_BUDGET_PERIOD_NUMBER';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_BUDGET_PERIOD_NUMBER'; END IF;
END;
/

CREATE SEQUENCE SEQ_BUDGET_PERIOD_NUMBER INCREMENT BY 1 START WITH 1 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_BUDGET_PER_CAL_AMTS_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_BUDGET_PER_CAL_AMTS_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_BUDGET_PER_CAL_AMTS_ID INCREMENT BY 1 START WITH 9 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_BUDGET_PER_DET_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_BUDGET_PER_DET_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_BUDGET_PER_DET_ID INCREMENT BY 1 START WITH 9 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_BUDGET_RATE_AND_BASE_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_BUDGET_RATE_AND_BASE_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_BUDGET_RATE_AND_BASE_ID INCREMENT BY 1 START WITH 9 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_COMMITTEE_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_COMMITTEE_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_COMMITTEE_ID INCREMENT BY 1 START WITH 1 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_COMM_RESEARCH_AREAS_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_COMM_RESEARCH_AREAS_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_COMM_RESEARCH_AREAS_ID INCREMENT BY 1 START WITH 1 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_COMM_SCHEDULE_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_COMM_SCHEDULE_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_COMM_SCHEDULE_ID INCREMENT BY 1 START WITH 1 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_CONG_DISTRICT_ID_KRA';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_CONG_DISTRICT_ID_KRA'; END IF;
END;
/

CREATE SEQUENCE SEQ_CONG_DISTRICT_ID_KRA INCREMENT BY 1 START WITH 1 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_DOCUMENT_ROUTE_HEADER';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_DOCUMENT_ROUTE_HEADER'; END IF;
END;
/

CREATE SEQUENCE SEQ_DOCUMENT_ROUTE_HEADER INCREMENT BY 1 START WITH 3360 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_DOCUMENT_TYPE_ATTRIBUTE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_DOCUMENT_TYPE_ATTRIBUTE'; END IF;
END;
/

CREATE SEQUENCE SEQ_DOCUMENT_TYPE_ATTRIBUTE INCREMENT BY 1 START WITH 2280 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_DOC_NTE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_DOC_NTE'; END IF;
END;
/

CREATE SEQUENCE SEQ_DOC_NTE INCREMENT BY 1 START WITH 2000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_EDL_FIELD_DMP';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_EDL_FIELD_DMP'; END IF;
END;
/

CREATE SEQUENCE SEQ_EDL_FIELD_DMP INCREMENT BY 1 START WITH 5000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_EN_EDOCLT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_EN_EDOCLT'; END IF;
END;
/

CREATE SEQUENCE SEQ_EN_EDOCLT INCREMENT BY 1 START WITH 2000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_GROUPS_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_GROUPS_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_GROUPS_ID INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_GROUP_ATTRIBUTES_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_GROUP_ATTRIBUTES_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_GROUP_ATTRIBUTES_ID INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_HELP_ENTRY';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_HELP_ENTRY'; END IF;
END;
/

CREATE SEQUENCE SEQ_HELP_ENTRY INCREMENT BY 1 START WITH 100 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_IP_COMMENT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_IP_COMMENT'; END IF;
END;
/

CREATE SEQUENCE SEQ_IP_COMMENT INCREMENT BY 1 START WITH 1 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_IP_REVIEW_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_IP_REVIEW_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_IP_REVIEW_ID INCREMENT BY 1 START WITH 1 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_IP_REV_ACTIVITY_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_IP_REV_ACTIVITY_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_IP_REV_ACTIVITY_ID INCREMENT BY 1 START WITH 1 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_MEETING_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_MEETING_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_MEETING_ID INCREMENT BY 1 START WITH 1 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_OUT_BOX_ITM';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_OUT_BOX_ITM'; END IF;
END;
/

CREATE SEQUENCE SEQ_OUT_BOX_ITM INCREMENT BY 1 START WITH 10000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_PERMISSIONS_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_PERMISSIONS_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_PERMISSIONS_ID INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_PERSON_APPOINTMENT';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_PERSON_APPOINTMENT'; END IF;
END;
/

CREATE SEQUENCE SEQ_PERSON_APPOINTMENT INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_PERSON_DEGREE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_PERSON_DEGREE'; END IF;
END;
/

CREATE SEQUENCE SEQ_PERSON_DEGREE INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_PROPOSAL_ADMIN_DETAILS_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_PROPOSAL_ADMIN_DETAILS_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_PROPOSAL_ADMIN_DETAILS_ID INCREMENT BY 1 START WITH 1 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_PROPOSAL_COMMENTS_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_PROPOSAL_COMMENTS_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_PROPOSAL_COMMENTS_ID INCREMENT BY 1 START WITH 1 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_PROPOSAL_COST_SHARE_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_PROPOSAL_COST_SHARE_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_PROPOSAL_COST_SHARE_ID INCREMENT BY 1 START WITH 1 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_PROPOSAL_CUSTOM_DATA_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_PROPOSAL_CUSTOM_DATA_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_PROPOSAL_CUSTOM_DATA_ID INCREMENT BY 1 START WITH 1 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_PROPOSAL_EXEMPT_NUMBER_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_PROPOSAL_EXEMPT_NUMBER_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_PROPOSAL_EXEMPT_NUMBER_ID INCREMENT BY 1 START WITH 1 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_PROPOSAL_IP_REVIEW_JOIN_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_PROPOSAL_IP_REVIEW_JOIN_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_PROPOSAL_IP_REVIEW_JOIN_ID INCREMENT BY 1 START WITH 1 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_PROPOSAL_NOTEPAD_IDN';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_PROPOSAL_NOTEPAD_IDN'; END IF;
END;
/

CREATE SEQUENCE SEQ_PROPOSAL_NOTEPAD_IDN INCREMENT BY 1 START WITH 1 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_PROPOSAL_NUMBER';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_PROPOSAL_NUMBER'; END IF;
END;
/

CREATE SEQUENCE SEQ_PROPOSAL_NUMBER INCREMENT BY 1 START WITH 1 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_PROPOSAL_NUMBER_KRA';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_PROPOSAL_NUMBER_KRA'; END IF;
END;
/

CREATE SEQUENCE SEQ_PROPOSAL_NUMBER_KRA INCREMENT BY 1 START WITH 1 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_PROPOSAL_PROPOSAL_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_PROPOSAL_PROPOSAL_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_PROPOSAL_PROPOSAL_ID INCREMENT BY 1 START WITH 1 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_PROPOSAL_SPECIAL_REVIEW_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_PROPOSAL_SPECIAL_REVIEW_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_PROPOSAL_SPECIAL_REVIEW_ID INCREMENT BY 1 START WITH 1 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_PROP_ROLE_TEMPLATE_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_PROP_ROLE_TEMPLATE_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_PROP_ROLE_TEMPLATE_ID INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_PROP_UNIT_ADMIN_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_PROP_UNIT_ADMIN_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_PROP_UNIT_ADMIN_ID INCREMENT BY 1 START WITH 1 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_PROTOCOL_EXEMPT_NUMBER_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_PROTOCOL_EXEMPT_NUMBER_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_PROTOCOL_EXEMPT_NUMBER_ID INCREMENT BY 1 START WITH 1 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_PROTOCOL_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_PROTOCOL_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_PROTOCOL_ID INCREMENT BY 1 START WITH 1 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_PROTOCOL_REFERENCES_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_PROTOCOL_REFERENCES_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_PROTOCOL_REFERENCES_ID INCREMENT BY 1 START WITH 1 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_PROTOCOL_RESEARCH_AREAS_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_PROTOCOL_RESEARCH_AREAS_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_PROTOCOL_RESEARCH_AREAS_ID INCREMENT BY 1 START WITH 1 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_PROTOCOL_SPECIAL_REVIEW_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_PROTOCOL_SPECIAL_REVIEW_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_PROTOCOL_SPECIAL_REVIEW_ID INCREMENT BY 1 START WITH 1 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_PROTO_CORRESP_TEMPL';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_PROTO_CORRESP_TEMPL'; END IF;
END;
/

CREATE SEQUENCE SEQ_PROTO_CORRESP_TEMPL INCREMENT BY 1 START WITH 1 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_QUESTIONNAIRE_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_QUESTIONNAIRE_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_QUESTIONNAIRE_ID INCREMENT BY 1 START WITH 1 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_QUESTIONNAIRE_REF_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_QUESTIONNAIRE_REF_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_QUESTIONNAIRE_REF_ID INCREMENT BY 1 START WITH 317 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_QUESTION_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_QUESTION_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_QUESTION_ID INCREMENT BY 1 START WITH 80 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_RESPONSIBILITY_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_RESPONSIBILITY_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_RESPONSIBILITY_ID INCREMENT BY 1 START WITH 2220 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_ROLES_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_ROLES_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_ROLES_ID INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_ROLE_ATTRIBUTES_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_ROLE_ATTRIBUTES_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_ROLE_ATTRIBUTES_ID INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_ROUTE_QUEUE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_ROUTE_QUEUE'; END IF;
END;
/

CREATE SEQUENCE SEQ_ROUTE_QUEUE INCREMENT BY 1 START WITH 4420 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_ROUTE_TEMPLATE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_ROUTE_TEMPLATE'; END IF;
END;
/

CREATE SEQUENCE SEQ_ROUTE_TEMPLATE INCREMENT BY 1 START WITH 1300 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_RTE_NODE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_RTE_NODE'; END IF;
END;
/

CREATE SEQUENCE SEQ_RTE_NODE INCREMENT BY 1 START WITH 3600 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_RTE_NODE_CFG_PARM';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_RTE_NODE_CFG_PARM'; END IF;
END;
/

CREATE SEQUENCE SEQ_RTE_NODE_CFG_PARM INCREMENT BY 1 START WITH 3800 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_RULE_EXPR';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_RULE_EXPR'; END IF;
END;
/

CREATE SEQUENCE SEQ_RULE_EXPR INCREMENT BY 1 START WITH 2000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_RULE_TMPL_OPTN';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_RULE_TMPL_OPTN'; END IF;
END;
/

CREATE SEQUENCE SEQ_RULE_TMPL_OPTN INCREMENT BY 1 START WITH 2000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_S2S_APP_ATTACHMENT_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_S2S_APP_ATTACHMENT_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_S2S_APP_ATTACHMENT_ID INCREMENT BY 1 START WITH 1 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_SEARCHABLE_ATTRIBUTE_VALUE';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_SEARCHABLE_ATTRIBUTE_VALUE'; END IF;
END;
/

CREATE SEQUENCE SEQ_SEARCHABLE_ATTRIBUTE_VALUE INCREMENT BY 1 START WITH 2000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_SPONSOR_TERM';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_SPONSOR_TERM'; END IF;
END;
/

CREATE SEQUENCE SEQ_SPONSOR_TERM INCREMENT BY 1 START WITH 307 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_SUB_AWD_BGT_ATT_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_SUB_AWD_BGT_ATT_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_SUB_AWD_BGT_ATT_ID INCREMENT BY 1 START WITH 1 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_TRANSACTION_DETAIL_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_TRANSACTION_DETAIL_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_TRANSACTION_DETAIL_ID INCREMENT BY 1 START WITH 1 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_TRANSACTION_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_TRANSACTION_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_TRANSACTION_ID INCREMENT BY 1 START WITH 1 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_TRANSACTION_TST';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_TRANSACTION_TST'; END IF;
END;
/

CREATE SEQUENCE SEQ_TRANSACTION_TST INCREMENT BY 1 START WITH 100 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_TRAVEL_DOC_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_TRAVEL_DOC_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_TRAVEL_DOC_ID INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_TRAVEL_FO_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_TRAVEL_FO_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_TRAVEL_FO_ID INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_UNRECOVERED_FNA_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_UNRECOVERED_FNA_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_UNRECOVERED_FNA_ID INCREMENT BY 1 START WITH 1 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_USERS_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_USERS_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_USERS_ID INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_USER_ATTRIBUTES_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_USER_ATTRIBUTES_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_USER_ATTRIBUTES_ID INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_VALID_BASIS_METHOD_PMT_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_VALID_BASIS_METHOD_PMT_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_VALID_BASIS_METHOD_PMT_ID INCREMENT BY 1 START WITH 28 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_VALID_CLASS_REPORT_FREQ';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_VALID_CLASS_REPORT_FREQ'; END IF;
END;
/

CREATE SEQUENCE SEQ_VALID_CLASS_REPORT_FREQ INCREMENT BY 1 START WITH 521 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SEQ_VERSION_HISTORY_ID';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_VERSION_HISTORY_ID'; END IF;
END;
/

CREATE SEQUENCE SEQ_VERSION_HISTORY_ID INCREMENT BY 1 START WITH 1 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'SERVICE_DEF_SEQ';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE SERVICE_DEF_SEQ'; END IF;
END;
/

CREATE SEQUENCE SERVICE_DEF_SEQ INCREMENT BY 1 START WITH 2320 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'TRV_FO_ID_S';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE TRV_FO_ID_S'; END IF;
END;
/

CREATE SEQUENCE TRV_FO_ID_S INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

DECLARE temp NUMBER;
BEGIN
	SELECT COUNT(*) INTO temp FROM user_sequences WHERE sequence_name = 'USER_CHANNEL_SUBSCRIPTIONS_SEQ';
	IF temp > 0 THEN EXECUTE IMMEDIATE 'DROP SEQUENCE USER_CHANNEL_SUBSCRIPTIONS_SEQ'; END IF;
END;
/

CREATE SEQUENCE USER_CHANNEL_SUBSCRIPTIONS_SEQ INCREMENT BY 1 START WITH 1000 NOMAXVALUE NOCYCLE NOCACHE ORDER
/

