ALTER TABLE EN_DOC_HDR_T
	ADD DOC_RTE_USR_PRSN_EN_ID  VARCHAR2(30) NULL
/
CREATE TABLE EN_MSG_PAYLOAD_T (
	   MESSAGE_QUE_ID			  NUMBER(14) NOT NULL,
	   MESSAGE_PAYLOAD 		      CLOB NOT NULL,
	   CONSTRAINT EN_MSG_PAYLOAD_T PRIMARY KEY (MESSAGE_QUE_ID)
)
/
CREATE TABLE EN_MSG_QUE_T (
   MESSAGE_QUE_ID			  NUMBER(14) NOT NULL,
   MESSAGE_QUE_DT             DATE NOT NULL,
   MESSAGE_EXP_DT			  DATE NULL,
   MESSAGE_QUE_PRIO_NBR       NUMBER(8) NOT NULL,
   MESSAGE_QUE_STAT_CD        CHAR(1) NOT NULL,
   MESSAGE_QUE_RTRY_CNT       NUMBER(8) NOT NULL,
   MESSAGE_QUE_IP_NBR         VARCHAR2(2000) NOT NULL,
   MESSAGE_SERVICE_NM		  VARCHAR2(255),
   MESSAGE_ENTITY_NM 		  VARCHAR2(10) NOT NULL,
   SERVICE_METHOD_NM		  VARCHAR2(2000) NULL,
   VAL_ONE					  VARCHAR2(2000) NULL,
   VAL_TWO					  VARCHAR2(2000) NULL,
   DB_LOCK_VER_NBR	          NUMBER(8) DEFAULT 0,
   CONSTRAINT EN_MSG_QUE_T_PK PRIMARY KEY (MESSAGE_QUE_ID)
)
/
ALTER TABLE EN_WRKGRP_TYP_ATTRIB_T
	ADD ACTV_IND NUMBER(1) DEFAULT 1
	ADD ORD_INDX NUMBER(4) DEFAULT 0
/

CREATE TABLE kr_qrtz_calendars
  (
    CALENDAR_NAME  VARCHAR2(80) NOT NULL,
    CALENDAR BLOB NOT NULL,
    PRIMARY KEY (CALENDAR_NAME)
)
/

CREATE TABLE kr_qrtz_paused_trigger_grps
  (
    TRIGGER_GROUP  VARCHAR2(80) NOT NULL,
    PRIMARY KEY (TRIGGER_GROUP)
)
/

CREATE TABLE kr_qrtz_fired_triggers
  (
    ENTRY_ID VARCHAR2(95) NOT NULL,
    TRIGGER_NAME VARCHAR2(80) NOT NULL,
    TRIGGER_GROUP VARCHAR2(80) NOT NULL,
    IS_VOLATILE VARCHAR2(1) NOT NULL,
    INSTANCE_NAME VARCHAR2(80) NOT NULL,
    FIRED_TIME NUMBER(13) NOT NULL,
    PRIORITY NUMBER(13) NOT NULL,
    STATE VARCHAR2(16) NOT NULL,
    JOB_NAME VARCHAR2(80) NULL,
    JOB_GROUP VARCHAR2(80) NULL,
    IS_STATEFUL VARCHAR2(1) NULL,
    REQUESTS_RECOVERY VARCHAR2(1) NULL,
    PRIMARY KEY (ENTRY_ID)
)
/

CREATE TABLE kr_qrtz_scheduler_state
  (
    INSTANCE_NAME VARCHAR2(80) NOT NULL,
    LAST_CHECKIN_TIME NUMBER(13) NOT NULL,
    CHECKIN_INTERVAL NUMBER(13) NOT NULL,
    PRIMARY KEY (INSTANCE_NAME)
)
/

CREATE TABLE kr_qrtz_locks
  (
    LOCK_NAME  VARCHAR2(40) NOT NULL,
    PRIMARY KEY (LOCK_NAME)
)
/

CREATE TABLE kr_qrtz_job_details
  (
    JOB_NAME  VARCHAR2(80) NOT NULL,
    JOB_GROUP VARCHAR2(80) NOT NULL,
    DESCRIPTION VARCHAR2(120) NULL,
    JOB_CLASS_NAME   VARCHAR2(128) NOT NULL,
    IS_DURABLE VARCHAR2(1) NOT NULL,
    IS_VOLATILE VARCHAR2(1) NOT NULL,
    IS_STATEFUL VARCHAR2(1) NOT NULL,
    REQUESTS_RECOVERY VARCHAR2(1) NOT NULL,
    JOB_DATA BLOB NULL,
    PRIMARY KEY (JOB_NAME,JOB_GROUP)
)
/

CREATE TABLE kr_qrtz_job_listeners
  (
    JOB_NAME  VARCHAR2(80) NOT NULL,
    JOB_GROUP VARCHAR2(80) NOT NULL,
    JOB_LISTENER VARCHAR2(80) NOT NULL,
    PRIMARY KEY (JOB_NAME,JOB_GROUP,JOB_LISTENER),
    FOREIGN KEY (JOB_NAME,JOB_GROUP)
	REFERENCES KR_QRTZ_JOB_DETAILS(JOB_NAME,JOB_GROUP)
)
/

CREATE TABLE kr_qrtz_triggers
  (
    TRIGGER_NAME VARCHAR2(80) NOT NULL,
    TRIGGER_GROUP VARCHAR2(80) NOT NULL,
    JOB_NAME  VARCHAR2(80) NOT NULL,
    JOB_GROUP VARCHAR2(80) NOT NULL,
    IS_VOLATILE VARCHAR2(1) NOT NULL,
    DESCRIPTION VARCHAR2(120) NULL,
    NEXT_FIRE_TIME NUMBER(13) NULL,
    PREV_FIRE_TIME NUMBER(13) NULL,
    PRIORITY NUMBER(13) NULL,
    TRIGGER_STATE VARCHAR2(16) NOT NULL,
    TRIGGER_TYPE VARCHAR2(8) NOT NULL,
    START_TIME NUMBER(13) NOT NULL,
    END_TIME NUMBER(13) NULL,
    CALENDAR_NAME VARCHAR2(80) NULL,
    MISFIRE_INSTR NUMBER(2) NULL,
    JOB_DATA BLOB NULL,
    PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (JOB_NAME,JOB_GROUP)
	REFERENCES KR_QRTZ_JOB_DETAILS(JOB_NAME,JOB_GROUP)
)
/

CREATE TABLE kr_qrtz_simple_triggers
  (
    TRIGGER_NAME VARCHAR2(80) NOT NULL,
    TRIGGER_GROUP VARCHAR2(80) NOT NULL,
    REPEAT_COUNT NUMBER(7) NOT NULL,
    REPEAT_INTERVAL NUMBER(12) NOT NULL,
    TIMES_TRIGGERED NUMBER(7) NOT NULL,
    PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (TRIGGER_NAME,TRIGGER_GROUP)
	REFERENCES KR_QRTZ_TRIGGERS(TRIGGER_NAME,TRIGGER_GROUP)
)
/

CREATE TABLE kr_qrtz_cron_triggers
  (
    TRIGGER_NAME VARCHAR2(80) NOT NULL,
    TRIGGER_GROUP VARCHAR2(80) NOT NULL,
    CRON_EXPRESSION VARCHAR2(80) NOT NULL,
    TIME_ZONE_ID VARCHAR2(80),
    PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (TRIGGER_NAME,TRIGGER_GROUP)
	REFERENCES KR_QRTZ_TRIGGERS(TRIGGER_NAME,TRIGGER_GROUP)
)
/

CREATE TABLE kr_qrtz_blob_triggers
  (
    TRIGGER_NAME VARCHAR2(80) NOT NULL,
    TRIGGER_GROUP VARCHAR2(80) NOT NULL,
    BLOB_DATA BLOB NULL,
    PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (TRIGGER_NAME,TRIGGER_GROUP)
        REFERENCES KR_QRTZ_TRIGGERS(TRIGGER_NAME,TRIGGER_GROUP)
)
/

CREATE TABLE kr_qrtz_trigger_listeners
  (
    TRIGGER_NAME  VARCHAR2(80) NOT NULL,
    TRIGGER_GROUP VARCHAR2(80) NOT NULL,
    TRIGGER_LISTENER VARCHAR2(80) NOT NULL,
    PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_LISTENER),
    FOREIGN KEY (TRIGGER_NAME,TRIGGER_GROUP)
	REFERENCES KR_QRTZ_TRIGGERS(TRIGGER_NAME,TRIGGER_GROUP)
)
/
create index idx_kr_qrtz_j_req_recovery on kr_qrtz_job_details(REQUESTS_RECOVERY)
/
create index idx_kr_qrtz_t_next_fire_time on kr_qrtz_triggers(NEXT_FIRE_TIME)
/
create index idx_kr_qrtz_t_state on kr_qrtz_triggers(TRIGGER_STATE)
/
create index idx_kr_qrtz_t_nft_st on kr_qrtz_triggers(NEXT_FIRE_TIME,TRIGGER_STATE)
/
create index idx_kr_qrtz_t_volatile on kr_qrtz_triggers(IS_VOLATILE)
/
create index idx_kr_qrtz_ft_trig_name on kr_qrtz_fired_triggers(TRIGGER_NAME)
/
create index idx_kr_qrtz_ft_trig_group on kr_qrtz_fired_triggers(TRIGGER_GROUP)
/
create index idx_kr_qrtz_ft_trig_nm_gp on kr_qrtz_fired_triggers(TRIGGER_NAME,TRIGGER_GROUP)
/
create index idx_kr_qrtz_ft_trig_volatile on kr_qrtz_fired_triggers(IS_VOLATILE)
/
create index idx_kr_qrtz_ft_trig_inst_name on kr_qrtz_fired_triggers(INSTANCE_NAME)
/
create index idx_kr_qrtz_ft_job_name on kr_qrtz_fired_triggers(JOB_NAME)
/
create index idx_kr_qrtz_ft_job_group on kr_qrtz_fired_triggers(JOB_GROUP)
/
create index idx_kr_qrtz_ft_job_stateful on kr_qrtz_fired_triggers(IS_STATEFUL)
/
create index idx_kr_qrtz_ft_job_req_recov on kr_qrtz_fired_triggers(REQUESTS_RECOVERY)
/
INSERT INTO kr_qrtz_locks values('TRIGGER_ACCESS')
/
INSERT INTO kr_qrtz_locks values('JOB_ACCESS')
/
INSERT INTO kr_qrtz_locks values('CALENDAR_ACCESS')
/
INSERT INTO kr_qrtz_locks values('STATE_ACCESS')
/
INSERT INTO kr_qrtz_locks values('MISFIRE_ACCESS')
/

commit
/
